// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1515709395, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\xcf\x6b\xdb\x30\x14\xbe\xfb\xaf\x78\x0b\x61\xd8\xd0\x38\x97\xb1\x43\x47\x0e\xa5\xb4\x10\x58\x4a\x49\x61\x97\xd0\x83\xea\xc8\x8e\x98\x2c\x19\x49\x6e\x67\x8c\xff\xf7\x21\x59\xfe\x21\xd7\x4b\x9d\xae\xed\x60\x39\xc5\xd2\xfb\xa5\xef\x7b\xfa\xf4\x32\x14\xfd\x44\x09\x86\xb2\x84\xf0\x0e\xab\xf0\x92\xb3\x98\x24\xb9\x40\x8a\x70\x16\xde\xa0\x14\x43\x55\x79\x1e\x49\x33\x2e\x14\xcc\x12\xa2\x0e\xf9\x43\x18\xf1\x74\x89\x32\x2e\xb0\xe2\x0b\xc2\xa2\x25\xa6\x38\xc5\x4c\x21\x3a\xf3\xbc\x47\x24\xc0\xf7\x00\x00\xc8\x1e\x33\x45\x54\xa1\xa3\xc8\x0d\xca\x60\x05\x29\xca\x76\x52\x09\xc2\x92\xfb\xd6\x27\x5c\x5b\x3b\x28\x8d\x9b\xfe\x95\xe5\x02\x04\x62\x09\xae\xab\xba\xcb\x70\x44\x62\x12\x99\xaa\xa4\xae\xa8\x33\x04\x12\x83\x3c\xf0\x9c\xee\xb7\x38\x21\x52\x61\xe1\x58\x43\x08\xf3\xf0\x36\x7f\xa0\x24\xda\xf0\x3d\x76\x7d\x17\x30\xef\x4a\x84\xf3\x15\x84\xda\x86\x86\x57\xdd\xe2\xa2\xe7\x30\x2b\x4b\x6b\xb0\xc5\x52\xe9\xed\xaa\x9a\x9d\xeb\x1a\xfa\x61\xaa\xaa\x39\xd0\x99\x93\x0a\xb3\xfd\x30\x7b\x6f\xa9\xf2\x1c\xcc\x22\xa4\x70\xc2\x05\xf9\x0f\x81\xe3\xb9\x88\xf0\xbb\x80\x87\x28\x41\xf2\x1d\x11\x5b\x7c\x20\x64\x65\x69\xab\x9a\x93\x33\x98\x9b\x93\xf5\x9c\x2e\xea\x93\x82\x8b\x71\x63\xf7\x76\xc0\x8e\x62\x1d\x78\xde\x72\x09\xa6\x90\x1f\x58\x48\x7d\x70\x81\x55\x2e\x98\x04\x75\xc0\x10\xe5\x42\x60\xa6\xe0\xd1\xee\xf1\xd8\x2c\xa7\xa6\x70\x2f\xce\x59\xe4\xf8\xfa\x01\xc4\x94\x23\xf5\xf5\x0b\x94\x36\x4e\xab\x46\x17\xb7\xeb\x35\x8b\x79\xd8\xa4\xa9\x2a\x4d\xb5\x2a\x32\x1b\x6e\x83\x18\x4a\xb0\x00\xa9\x44\x1e\xa9\xb2\xf2\x4c\x78\x3f\x76\x76\x03\x68\x4e\x7e\x2d\x78\xaa\xc1\xf0\x99\x46\xa4\x6e\x8e\x00\x46\xbb\xc3\x1c\xd5\x56\x33\xd4\xb1\x9d\x76\xbf\xf7\xa6\x64\xbb\xac\xaf\x71\xe1\xdb\xfb\x5c\x9c\x9e\xd5\x51\x82\x5d\x13\x67\x5a\x7a\xd3\x26\x7e\xdd\x14\x93\x13\x77\xb7\x68\x67\xfe\x4e\x4c\xc5\x0a\x1f\xb1\xee\x7c\x3e\x19\xc9\x14\x34\xa9\x48\x0c\x04\x56\x10\x87\xcf\xa8\x41\xac\x08\xbe\xc1\x27\x12\xae\xe5\x55\x9a\xa9\xc2\x0f\x7a\x77\xb5\x81\xc6\x51\xcc\xb1\x50\x2d\xee\x27\x87\xb3\x6b\x6e\x38\x8b\x23\x2b\x82\x17\xb0\x88\x09\x7a\xa0\xd8\x6f\xb8\x1b\x85\x60\xb8\x56\xfb\x34\xc8\xc8\x27\xa2\xa2\x43\xcb\xbe\xad\xb6\x55\x83\x23\x1a\xf5\x6a\x7d\x8a\x90\xac\x07\x80\x67\x82\xd4\x89\xc6\xf9\x10\xb4\x1b\xfc\xf4\x07\x17\x3f\xf0\x46\x64\x63\xf0\xb9\xc7\x31\xca\xa9\x7a\x16\x96\x11\x6a\xd9\x98\x02\xb4\xe6\xe6\xce\x34\x9c\xd3\x7b\xc7\x11\x1e\x30\x6c\x29\x1b\x10\x5e\x77\x73\x30\x8d\x6f\xf9\x1a\xc2\xe5\x9b\x31\xce\xb8\x6a\x88\x58\xcb\x2d\xe7\xea\xdf\x74\xc4\xe7\x31\x87\x5b\x9a\x0b\x44\xa1\xaa\xbe\x13\xa9\x05\xfa\xe5\xce\x78\x97\x46\x91\x27\x75\x8a\x3c\xda\x2a\xf2\xe4\x5e\xd9\x62\x5a\x13\x77\x20\x99\xf4\xfb\x59\x9d\x9d\x9a\x21\x31\xd4\x63\x31\x66\xa3\x73\xe9\x49\x3b\xb5\x2f\xe0\xca\x49\xa9\x5f\x42\xfd\x44\xdb\xcd\xfe\xeb\x6c\xcc\x7a\x15\x6c\x7a\x6e\xcd\xeb\x5c\x7f\x39\x85\xf6\xcd\xba\x77\xba\xc9\x5e\x79\x26\xdf\x05\xa5\x16\x18\x82\x65\x9b\x15\x51\x0a\xf8\x17\x91\x8a\xb0\xa4\xe9\x72\x82\xa5\x4d\xe6\xf8\xf8\x01\xec\xc6\xa7\xb5\x3e\x20\x63\x26\x1f\x3f\xcf\x1d\xbd\x1c\xa7\x0d\xaf\x95\x45\xcf\xbc\xbb\xd7\x5c\xb4\xe7\xee\x43\xa8\xc9\xb3\x4f\x33\xc4\x5c\x98\xef\x84\x3c\xe2\x6e\x52\x68\x11\x1d\xc6\x39\x2e\x4f\xbb\xfb\xfa\x36\xbc\xa4\x47\x13\x60\xfd\x58\xc1\x69\x0a\x2f\xff\x76\x58\x3e\xca\xd6\x14\x91\x72\x67\x07\x2d\x4d\x95\xf7\x3b\x00\x00\xff\xff\x34\x9a\x16\x98\x5a\x0f\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 3930, mode: os.FileMode(420), modTime: time.Unix(1528396158, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4b\x6f\x1b\x39\x12\xbe\xeb\x57\x70\x05\xcf\x8c\xb4\x90\xdb\x39\x6b\xd6\x03\x64\x13\x4f\x60\x6c\x32\x31\xa2\x20\x73\x08\x8c\x31\xdd\x5d\x92\x19\x77\x93\x0a\x9b\xed\xd8\x2b\xf4\x7f\x5f\xf0\xd9\x64\x3f\x24\xca\x63\x2f\x7c\x90\x0f\x86\x54\x2c\x7e\xf5\x22\x8b\x55\xa4\xd6\x38\xbd\xc5\x2b\x40\x9b\x0d\x4a\x16\x20\x92\x37\x8c\x2e\xc9\xaa\xe2\x58\x10\x46\x93\x3f\x70\x01\xa8\xae\x47\x23\x52\xac\x19\x17\x68\x32\x42\x08\xa1\xf1\xb2\x10\x63\xfd\xa9\x7c\xa0\xe9\x78\xa4\x3f\xaf\x88\xb8\xa9\xae\x93\x94\x15\x27\x78\xcd\x38\x08\x76\x4c\x68\x7a\x02\x39\x14\x40\x05\xce\xf5\x94\xcd\x06\x71\x4c\x57\x80\x92\xc5\x1a\xd2\xe4\xf3\xc3\x1a\x2e\x38\xbb\x23\x19\xf0\x12\x1d\xd7\xb5\xc6\x92\xea\xa0\xba\x76\x53\x80\x66\x6a\x70\x3a\x1a\x6d\x36\xe8\x28\xc7\x02\x4a\xf1\x05\x78\x49\x18\x45\xf3\x53\x03\xf6\x5e\x91\x5f\x0b\xc1\xc9\x75\x25\xa0\xb4\x0c\xd2\x02\x27\xf7\x88\xcc\xd0\x11\xd0\xaa\x90\xf3\xae\x2b\x92\x67\x67\xb4\x2a\x4a\x0d\xd1\x86\xae\xeb\xd1\xc9\x89\x54\x40\xcd\x50\xda\xa2\xba\x46\x1c\xd6\x1c\x4a\xa0\xa2\x44\xe2\x06\xd0\x9a\x95\x25\xb9\xce\x01\xdd\xe1\xbc\x82\x12\x2d\x19\x47\xd8\x6a\xa1\x8c\xd1\xd3\x9d\x66\xc6\xaf\xe3\x64\x24\x24\x62\x07\xbf\x14\x9c\xd0\xd5\x68\x94\x32\x5a\x5a\xaf\x6f\x36\xc7\xd6\x02\x8a\x0b\x98\xa1\x23\x25\x4d\x5a\xa1\x27\x7f\xd1\xc2\x8d\x0b\x8d\xda\x54\x4b\x6a\x6b\xac\xa7\x4a\x06\xfd\xa9\xae\x13\xeb\x6a\x37\xa5\xa3\xd5\xa9\x36\xc5\xce\x08\x82\xa3\x62\xd3\x7c\x36\x5e\xd3\x61\xf9\xc0\x32\xc8\x93\x33\x2a\x88\x78\x30\x96\x9f\x67\xa0\xbe\xb6\xf5\x72\x74\xb6\x54\xdf\xd9\xf5\x37\x48\x45\x32\xba\xc3\x3c\x0e\xef\x14\xb9\xf5\x96\x38\xe2\x46\x69\x2a\x59\xe7\xc8\x2d\x2f\x0f\xea\x13\x94\x42\x8e\xd6\xf5\x78\xa6\x58\xdf\x60\x01\x2b\xc6\x1f\xe6\x7d\xac\xac\xe2\xa9\x8b\xa0\xe6\xbf\xe0\xe4\x0e\x0b\x89\xde\x62\x37\x03\x75\x3d\x1b\xd5\x23\xb5\x08\xc9\x12\x51\x26\x02\xa6\xf3\xf2\x13\x63\xa2\x59\x6b\xfd\x56\x5e\xe4\x15\xc7\x39\xaa\xeb\xf7\xa4\x14\xbe\xdf\x30\xca\x25\x85\x2d\x23\xe6\xba\xf5\x16\x23\xe3\xeb\xe5\x3f\x07\x39\x4d\x8c\xbd\x38\x8a\x8a\x53\x1d\x44\xd2\x1b\xc4\x12\x11\xaa\xbe\x4a\x6d\x93\xd1\xb2\xa2\x29\x9a\xb0\x48\x5d\xa6\x4e\xd2\x64\xda\x1f\x61\x15\x07\xad\xc5\x30\x66\xb3\x50\x46\x5a\xff\x37\x6c\xdd\xe8\x8e\xd1\x9a\x11\x2a\x80\x23\xc1\x10\x46\xa9\x1c\x93\x0a\xc7\xa9\xb8\xbf\x49\x52\x78\x8f\x39\x4b\x82\xaf\x73\x28\xad\x4d\x4a\x8d\xf9\x29\xc2\xeb\x35\xd0\x6c\x12\x07\xbe\xa9\x67\x88\x25\x49\x32\xf5\xdd\xf2\xb3\x84\x32\x86\xbf\x56\x68\x06\xb4\x0c\xc2\x24\x98\xfa\x8a\x11\x85\x1f\x5a\xba\x89\xe3\x73\xf9\x41\xeb\x32\xb1\xf2\x93\x24\xe9\x77\xc9\x4e\x57\xb1\x4a\xfc\x4d\x4f\xc9\xcc\xfd\xd7\x4c\xba\x42\x02\xe9\x74\x6b\xf5\xd2\x59\xc4\xca\x71\x62\x58\x25\xd4\x84\x64\xb2\x6d\xb7\x4c\x35\x7e\x1d\xac\x53\x56\x09\x13\x0e\xb5\xdf\x52\x46\xef\x80\x0b\x3f\x1a\x6a\x25\xd2\x21\xbb\x1f\xe7\x6e\xf9\x7f\x78\xd9\x29\x4d\x42\x7f\x6e\xe1\xdc\xd4\xbe\xdb\x88\x80\xc2\xf3\xdb\x56\x8f\x49\xde\xed\x3e\x79\x0b\x4b\x5c\xe5\xe2\x23\xcf\x80\x07\xf9\x25\xd3\x03\x88\xc9\x11\x42\x57\x68\x49\x20\xcf\x4a\xbb\x4c\x53\x46\x05\xd0\x47\x38\xc6\x17\x38\x99\xa2\xaf\x97\xfa\x18\x6e\x25\x17\x4b\x6e\x8c\x6b\x95\x34\x1f\x8d\x5a\x4d\x1d\xd2\xae\x2a\x6c\x99\xe3\xce\xa2\xf0\x34\x09\x8f\x55\xed\x22\xed\x12\x0b\xe0\x7b\xe3\xce\xd0\xfe\xae\xf5\x06\x7b\x32\x45\x84\x8a\xbe\x84\x0a\x22\x79\x7d\x71\x7e\x4e\x97\x2c\xf1\xca\x23\x5d\x5a\xd9\x63\x7f\xd7\xb9\xdf\x3e\xef\x0b\xc9\x22\x55\xc7\xed\x69\xf6\x4c\xde\x7d\x68\x99\x82\xa9\x4a\xa5\xd6\xad\x58\x6c\x8f\xc1\x66\x83\x0a\x7c\x0b\x92\x09\x25\xe8\x28\xb9\xa8\xae\x73\x92\x4a\x7c\xa4\x46\x8f\x9d\x5d\xd2\x17\x4a\xae\x9d\x2e\x7d\x74\xf5\xad\x64\x74\x3e\x3e\x1e\xa3\x6b\xf5\xe1\x2f\x65\x8d\x89\xc7\xf8\x4a\xcf\x92\x15\x72\xf2\xa1\x12\x70\x6f\x62\xf8\x07\xfc\xd8\xe1\x21\x7b\x1a\xc9\xfc\x3b\x9c\x53\xa4\x5e\x2a\xc6\x3b\x00\x27\xd3\xed\x20\xad\x50\xff\xbc\x8d\xb7\x59\xf3\xbe\x33\xe6\x5b\xd6\xc7\xac\xbb\x4b\x6c\xf9\xaa\x8a\x5b\x19\x36\xc6\x9b\x12\xde\x05\xec\x9c\x12\x41\x70\x4e\xfe\x2b\xfb\x82\x2d\xfb\x47\x97\x54\xe5\x0d\xab\xf2\xec\x4f\x4e\x82\x89\xe8\xc8\x14\xf5\xaa\xa4\x6d\x81\xb4\xc2\xed\x55\xbe\xca\x9e\x40\xbd\xba\x9e\x85\x1b\x72\x78\x8b\xf6\x56\x44\x43\x65\xad\xdd\xa3\x5b\x03\xf4\x44\xb5\x0f\xea\x14\x3f\x36\x9b\xb7\xd2\xab\xae\xef\x03\x4d\x7f\x29\x51\x45\xc9\xf7\xca\xd6\x76\x72\xce\x9e\xda\xcb\x29\x93\x29\x0a\x53\xaa\x0e\x9e\x9e\xeb\x69\x63\xe3\x6b\x8f\x84\xc4\x09\x68\x98\x64\xa7\x2a\x4f\x4b\xc8\xec\x66\xb0\x4d\x12\xe4\x25\xb4\x21\xc6\xe3\x66\x58\xc7\x4c\xbb\x60\x01\xc2\x93\x5b\x82\x78\x1e\x17\x04\x62\x26\x24\x33\x6e\x98\x46\xfa\x21\xce\x01\xe8\x14\x91\xac\xdf\xcc\xbe\x73\xe3\x06\xf3\x2c\x65\x19\x64\xed\x13\x44\x65\xb1\x68\xd3\x1e\x7f\x6c\x6c\x3b\xe2\x6d\x47\x33\x70\xd4\x47\x69\xa7\xd4\x7b\xe1\x67\xba\x1f\x78\x6d\xc0\x5b\x28\x53\x4e\xd6\xa2\xb9\x7d\x78\xcb\xd2\xb0\xfc\x61\x69\xa5\x72\x80\xe2\x91\xa5\x57\xb3\x4a\x63\xa3\xf6\x96\xa5\x3d\x9b\xf1\x58\x2a\x03\xdf\x07\xf5\x19\x7f\xa5\x2c\x63\xe9\xe5\xb8\xbd\xbd\x14\x79\xa1\x2f\x2d\x82\x6d\x18\xb2\x5d\x49\x0f\x94\xe9\xbf\x71\x7a\x2b\x48\x7a\x5b\x6e\x31\xfc\xaa\xbb\x90\xbd\x32\x43\x59\x19\xb3\xef\x94\x4a\x1d\x4b\x8d\x3a\xcb\x42\x24\x8b\x35\x27\x54\x2c\x27\xe3\x7f\xfd\x54\xce\x7f\x2a\x7f\x1b\xcb\x6e\xa0\xc9\xb7\x2a\x8a\x0d\x49\x27\xb1\xe9\xc8\xbf\x4f\xda\x55\x68\xe8\x3a\xc3\x9d\x51\xef\x80\x02\xc7\x02\xde\x81\x90\x9d\x66\xb7\xec\x38\x39\x41\xef\x40\x48\xbb\x3a\x1b\xdc\x5f\x05\xbd\x0c\x66\x07\x73\x48\x81\xdc\xb5\xf3\xd3\xd1\x16\x47\x0d\x48\x9c\x4c\x43\x39\xf6\x26\x28\xf4\xa3\x4e\x4f\x9d\x7c\x1c\x54\x86\x7d\x2e\x58\x6c\x71\xc1\x62\xc0\x05\x2e\x45\xaf\xc8\x1d\xd0\x27\xf6\xc2\x80\xd0\x89\xb7\x9d\x7b\xfd\xe1\xf2\x78\xbf\x27\xd0\x29\xf2\x10\x82\x95\x1c\xde\x98\x7d\xc1\x39\xc9\xb0\x50\xe7\x0f\xc9\x40\x1b\x9a\x56\x9c\x03\x15\x88\xd0\x25\xe3\x85\xde\xf4\xa5\x60\x1c\x32\x99\x71\x75\xaf\xae\x0b\x95\x8a\x43\x7c\xda\x36\xa2\x64\x49\xc1\x39\xe3\xd6\x02\xf5\xa5\x0c\xbb\xbe\x33\x45\xdb\xd8\xad\xfc\xbd\x22\x1c\xb2\xb3\x6d\x8c\x7d\x37\xbd\x5b\x77\x48\x73\x08\xaa\xcb\xb1\xcf\x1c\xd3\x92\x48\xab\x83\xb1\xe4\xec\x7e\xcd\x4a\x68\x4a\x72\x43\xfe\x64\x74\x0a\xb9\x65\x22\x53\x01\x1a\xeb\xdd\x3f\xb6\xc3\x72\x8c\xf3\x50\x75\xeb\x0f\x0b\x65\x32\x47\x98\xc9\x07\xe2\x3b\xfd\x55\xe1\xfd\xe3\x14\x51\x92\x7b\x4d\x6f\xcb\x55\xae\xff\x0d\xe9\x33\x39\xd9\x76\xc2\xe1\x31\xd1\x6b\x8c\x20\x05\xec\x65\xca\x67\x52\xc0\x4b\x34\x04\xee\x05\x70\x8a\xf3\xbd\x8c\x39\x33\x93\x5e\xa2\x41\x84\x0a\x58\x01\xdf\xcb\x9e\x73\x2a\x5e\xa2\x29\xcb\x9c\x61\xb1\x97\x21\xbf\xcb\x19\x2f\xc4\x94\xae\x65\xc9\xeb\x3c\x67\x3f\x20\x7b\x73\xc3\x48\xda\x3c\x92\x6c\x33\x4c\x67\x80\x73\xaa\xae\xcb\x5a\x76\xe9\x84\x32\x19\x30\x6f\xd6\xd4\x93\x72\xde\x37\x46\x68\x47\x81\xab\xf1\x0c\x8d\xaf\x24\x5a\x3d\x53\xa7\xc3\xeb\x4a\xb0\x95\x39\x18\xb3\x2d\x4e\x82\x96\x73\x60\x8f\xf8\x36\x4a\x60\x1e\xe5\x83\x0b\x2c\x4f\x68\x1a\x17\xd6\x99\xaa\xef\xda\x32\xae\xb4\x79\x5e\x8a\x7e\x0e\xcb\x56\x02\x25\x1f\xf0\xfd\x7b\xa0\x2b\x71\x83\x5e\xc5\xd8\xf6\x01\xdf\x93\xa2\x2a\xf4\x94\x58\x0b\x25\xb5\x91\x23\x29\x4b\x9c\x97\xf0\x6c\x26\x11\xba\x97\x49\x84\x3e\xd2\x24\x27\xe7\xf9\x4d\xc2\xf7\xea\xa1\x12\xbd\x4a\x5e\x0d\x9d\xd7\xf1\xd9\xc7\x04\x71\x8f\xe4\xe3\x62\xf8\xc5\x3c\x63\x3e\x9d\xbd\xa6\xe1\x89\x55\x3a\x3a\xf5\xcf\x64\xa1\x37\x69\xa9\x3d\x7d\xea\x38\xed\x5a\x88\x4f\x19\x35\xbd\x4e\xf7\x8f\x9a\xd5\xe2\x19\xa2\x16\xa9\xf3\x63\x82\xd6\x68\xfd\xcc\x41\x8b\xff\x66\xcd\xcd\x81\xb6\x8e\xd7\x29\xfa\x0d\xbd\x72\x2a\x99\x0e\x2f\x64\xf1\x5f\x6d\x0c\x06\xf4\xcc\x75\xb3\xa1\x33\xcb\x5e\x1b\x90\xdc\xde\xc3\xad\x21\x25\x4b\x92\xaa\xf6\xe6\x77\xc6\x5d\xb3\x10\xf4\xbc\x8e\x1a\xb0\xbb\x2b\x10\xdd\x12\x36\x3f\xbc\x50\xd7\xb9\xb7\xf0\x60\x9b\xa2\x5d\x97\x05\x43\x3a\x4c\x14\x90\xbd\xb2\x6b\x96\xc6\x80\x3a\x1b\xe7\x99\xbb\x19\x62\xb7\x72\x39\x6d\x13\xdc\xf4\x45\x1f\xf0\xfa\xab\x14\x75\xf9\xab\x9c\xd6\x71\xe3\x9d\xef\xc1\x93\x13\xf4\x27\xa0\x54\xb6\xd3\xaa\x65\x5a\x12\x9a\x21\x22\x66\xa8\x64\x28\x07\xf1\x4b\x89\xd2\x1b\x48\x6f\x11\x33\x6f\xee\xec\x07\x70\x94\xe2\x12\x10\xa1\x19\xdc\x43\x86\xca\x35\xa4\xa8\xc0\xeb\xd8\xcb\xe3\xf7\x12\xe2\x0d\x2e\xa1\x47\x61\xfb\xa8\xdc\xeb\x90\x32\x88\xe1\xb2\xca\x73\x2f\x46\x65\xc8\x59\xe0\x75\x64\xb4\x06\x64\x4d\xa6\x12\xe3\xab\x0e\xd6\x65\x6c\xac\x22\xcc\x0f\xac\x1e\xed\xfe\x85\x4b\xc0\xdf\x79\xf6\xc2\x6b\xf5\xe8\xe5\xdc\x20\x97\xf0\x36\xb4\xdd\xbf\x80\x09\xe5\x9d\xee\xe3\x05\xef\xfe\xef\x11\x0d\xbb\xf7\xf4\xe2\x66\x48\x15\x5a\xd7\x3a\xc1\x4f\xbb\xda\xc9\x72\x3c\xdf\xb9\xad\xfc\xab\xd9\xe3\xc1\x62\x56\xfe\xf9\xf4\x79\xb7\x26\x95\x25\x69\x80\xd5\x7a\xd6\x09\x0b\xf5\xf9\x40\x03\x71\x5c\xd7\x7b\x15\xf9\xcd\x49\xe3\xa6\xd5\x2e\x1d\xcf\xba\xb6\xb5\xba\x81\x46\x3b\x7f\x60\xde\xdb\x39\x6c\xb5\xce\x0a\xe8\x7d\x3d\x91\x7f\xc1\xc0\x7c\x20\x5c\x71\x22\x38\xa8\xc8\x7d\xa4\xf9\x43\x20\xc1\xa3\x6b\x0b\x5a\x9c\x51\xe8\xc1\xd3\x81\x37\xee\xd3\x35\x7a\x8b\x73\x1f\x74\x7b\x6e\xfb\x57\xf8\x03\x77\x18\xc7\x5d\x1d\xd4\x6c\xb7\x80\x5a\x90\x52\x33\xff\xa9\xb2\xf6\x96\x08\x25\xf9\xc0\xda\x50\x0c\xa1\x06\xb4\x2a\x1e\x25\x7d\xf8\x22\xb4\x2f\xe4\x9e\x23\x3d\x8c\x47\xe8\x6b\xef\xe2\xf6\xd3\xf8\xb8\xae\xc7\x3d\x2a\x8c\xa3\x75\xd8\x5b\xdc\x2e\x83\xd1\x90\xb4\xee\x82\x1a\x5c\x63\x6b\x0e\x69\x7b\x83\x37\x54\xbb\x7a\x3d\xae\xc8\xb5\x1b\xbc\x20\x35\xc0\x8e\x3c\xef\x79\x89\x69\x3d\xbf\x44\x49\xf2\xae\x63\xed\x90\x21\x69\xdd\x9b\xf1\x28\xb8\xdf\x49\x2e\x80\xe3\xeb\x3c\xd8\x72\x0d\x55\x83\x06\x5c\x71\xb8\x8c\x03\x59\xd1\xff\x40\x90\x86\x1a\xaa\xc1\xf5\xb9\x62\x71\x0b\x2c\x5a\x98\x05\x16\x26\x6b\xba\xe1\xb8\x74\x69\x1e\x84\xbc\x11\x4d\xd1\xda\xb9\xd1\x28\x2c\xef\x0d\xd9\x1b\x6d\xa8\x1a\x33\xe0\x8a\xc3\x95\xb5\x63\x00\x29\x09\x06\xcd\x8c\x45\x01\xf9\x77\x28\x6e\xd0\x11\xe7\xdd\x7b\x96\x48\xd0\x4e\xc2\xb6\xb4\x79\xa7\xed\x8f\x42\xf4\xee\x45\x1a\x48\x4b\x9c\x77\xef\x4e\x22\x41\xbb\x6a\x1a\xda\xbc\xd3\xe7\xc6\x20\xb6\xcf\x70\xef\xe8\xde\xeb\xc4\x56\x47\x64\x7b\xff\x39\xa2\xd6\xcd\xe7\x89\x02\xbd\xe0\xa4\xc0\xfc\xa1\xb5\xfb\x1a\xaa\x86\x0d\xb8\xa2\x70\x3f\x01\xce\xda\xa5\x85\xa5\xcd\xcd\x9d\xa3\xe3\x88\x44\x0c\x9f\x91\x34\xa2\xa6\xcd\xdb\xb7\x98\x51\x88\x8b\xce\x9e\x5e\x78\x7b\x7a\xb1\xd7\x9e\x5e\xe8\x37\x3f\x1f\x4b\x51\x0c\x96\x1d\x8d\xc3\xaa\xae\xcd\xd3\x65\x03\xa6\x49\xf6\x17\xef\x8e\x21\x6e\xe5\x74\x1e\xec\xe4\x9f\x23\x6a\x15\x7d\x9e\x38\xd0\x96\x8a\x9e\x7e\x3b\x95\x33\x12\x5a\xd4\xce\x0f\x63\xf6\x6f\x78\xff\x0f\xad\xdc\x80\xe0\x97\xdd\xd3\xe9\x1b\x86\xe4\xd0\xd0\x1d\x1a\xba\x43\x43\x77\x68\xe8\x0e\x0d\x5d\xa3\xdc\xa1\xa1\x3b\x34\x74\xea\xef\xd0\xd0\x1d\x1a\xba\x43\x43\x77\x68\xe8\x0e\x0d\x9d\xc1\x7b\xda\x86\xee\x7f\x01\x00\x00\xff\xff\xc9\x4c\x49\xb0\xcc\x40\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16588, mode: os.FileMode(420), modTime: time.Unix(1528396163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x96\xc1\x6a\xe3\x30\x10\x86\xef\x7a\x8a\xc1\x84\xa5\x85\xd4\xd9\x73\x20\x87\xa5\x0b\x25\x87\x2e\x25\x65\x4f\x21\x07\x45\x9a\x38\xa2\xf2\xc8\xc8\xe3\x2c\x41\xe8\xdd\x17\x5b\xc9\xc6\xed\x3a\x2d\x94\x5c\x4a\x9b\x9b\xf4\x6b\xbe\xd1\x7c\xd1\xc1\x95\x54\x4f\xb2\x40\x08\x01\xf2\x47\xe4\xfc\xd6\xd1\xc6\x14\x8d\x97\x6c\x1c\xe5\xbf\x64\x89\x10\xa3\x10\xa6\xac\x9c\x67\xc8\x0a\xc3\xdb\x66\x9d\x2b\x57\x4e\x64\xe5\x3c\xb2\xbb\x31\xa4\x26\x68\xb1\x44\x62\x69\x33\x21\x94\xa3\x9a\x81\x9c\x76\xea\x91\xbd\xa1\x02\x66\x90\x2d\xbb\xf5\x2a\x83\xc9\x04\xc8\x59\x43\x3c\x85\x9d\xf4\x6a\x8b\xea\x69\xac\x51\x6a\xe5\x34\x0a\xb1\x93\x1e\x3c\xda\xae\x79\xbd\x35\x55\xbd\xc0\xc2\xd4\xec\xf7\xf0\xaf\x43\xbe\x18\xca\x85\xd8\x34\xa4\xc0\x90\xe1\xab\x6b\x08\x42\x00\xc0\x19\xd2\xec\x2d\x56\x88\xa9\x3c\x04\xf0\x92\x0a\x84\x11\x12\x1b\xde\xb7\x32\xc6\x30\x3a\x52\x61\x3a\x4b\xca\x9e\x41\x5a\x5b\xa9\xf8\x06\xcc\x06\xea\xad\x6b\xac\x4e\x64\xf4\xfd\x93\x30\x6a\x8b\xfb\x6c\x18\xe5\x0f\xcd\xda\x1a\x75\xef\x34\x1e\x30\x83\x23\x2c\x43\x78\x56\x17\xe3\x5c\xa7\xe5\x0a\x66\xf0\x6d\x78\xbc\xd0\xf1\x7a\x57\x2b\x18\xae\x2c\xd2\x69\xa0\xfc\x87\xb5\xee\x4f\x7d\xeb\x51\x32\x5e\xc3\xf7\xe3\x28\xed\xaf\x1f\x4d\xa1\x94\xd5\xb2\xee\xfe\xdb\xd5\xda\x39\x0b\x27\xf6\x91\x7f\x10\x57\x49\x8f\xc4\xad\xa9\x53\x97\x3b\x64\xc8\x54\x47\xca\xfa\x2d\xce\x5a\x9b\x13\x0d\xab\x3b\xd0\xfb\xda\x5e\x02\xb3\x56\xd5\xe1\x5c\x8c\x19\x4c\x81\x7d\x83\xe3\xff\x9a\x22\xe9\xa1\xbb\xbc\xd8\x8e\x63\xf1\x4a\xfa\x86\xd7\xdf\x95\x3e\xe7\x35\x45\x97\xf0\xda\x74\xa4\x0f\xec\x35\x09\x79\x90\xac\xb6\x5f\x3e\xde\xf5\xce\x7e\xa2\xc5\x33\xef\x2c\x45\x97\xf0\xaa\x3b\xd2\xa7\xf2\x7a\x87\x3c\x28\x75\x81\xec\x0d\xee\x2e\xa2\xb5\x40\xfe\x6c\x4e\xef\x25\xed\x5f\xf5\xda\x1e\xb8\x90\xdb\x52\xd2\xfe\x03\xfb\x4d\x5e\xe6\xb4\x71\x5f\x3e\x06\xd2\xd3\x87\x57\x6f\x33\x84\xe3\x2a\x8a\xbf\x01\x00\x00\xff\xff\x45\xe2\xe7\x2b\xec\x0a\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 2796, mode: os.FileMode(420), modTime: time.Unix(1528338461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


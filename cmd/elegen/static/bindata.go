// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x4b\x6b\xe4\x38\x10\xbe\xeb\x57\xd4\x86\xb0\xd8\xd0\x71\x2e\xcb\x1e\xb2\xe4\x10\x86\x19\x68\xd8\x0c\x21\x81\xbd\x34\x39\x68\xdc\x65\x47\xac\x2c\x19\x49\xce\x4c\x63\xf4\xdf\x17\xc9\xf2\x43\x8e\xd3\x8f\xd9\x24\x0b\x9b\x4b\xda\x56\x3d\xbf\x2a\x7d\x55\xae\x69\xfe\x37\x2d\x11\xda\x16\xb2\x07\x34\xd9\x27\x29\x0a\x56\x36\x8a\x1a\x26\x45\xf6\x95\x56\x08\xd6\x12\xc2\xaa\x5a\x2a\x03\x67\xa5\xcc\x68\x2d\x15\x1a\x99\x31\x79\x89\x1c\x2b\x14\x86\xf2\x33\x42\x9e\xa9\x82\x84\x00\x00\xb0\x2d\x0a\xc3\xcc\xce\x29\xeb\x5b\x5a\xc3\x35\x54\xb4\xde\x68\xa3\x98\x28\x1f\x07\x9d\x6c\x1d\xe4\xa0\xf5\x6a\xee\xaf\x6d\x2f\x40\x51\x51\x62\x17\xcc\x43\x8d\x39\x2b\x58\xee\x83\xd1\x2e\x90\x51\x10\x58\x01\xfa\x49\x36\x7c\x7b\x8f\x25\xd3\x06\x55\x24\x0d\x19\x9c\x67\x77\xcd\x37\xce\xf2\x5b\xb9\xc5\x58\xf7\x02\xce\xc7\x10\xe1\xea\x1a\x32\x27\xc3\xb3\xcf\xe3\xcb\x8b\x89\xc2\x59\xdb\x06\x81\x7b\xd4\xc6\x1d\x5b\x7b\x76\xe5\x62\x98\x9a\xb1\xb6\x4f\x68\x15\xb9\x42\xb1\x9d\x7b\x9f\xbc\xb2\x24\xc2\x2c\xa7\x06\x4b\xa9\xd8\xff\x10\x38\xd9\xa8\x1c\xdf\x05\x3c\xca\x19\xd5\xef\x88\xd8\xc5\x07\x42\xd6\xb6\x21\xaa\x73\xb6\x82\x73\x9f\xd9\x44\xe9\xa6\xcb\x14\x62\x8c\x7b\xb9\xb7\x03\x76\x4f\xa3\x8a\x2d\xfe\x58\xc0\x7a\xf3\xb8\x79\xec\x7e\x7e\x38\xc6\x0e\x81\xd9\xfd\x1c\xa0\x60\x05\x70\x14\xfd\xf1\xba\x0b\x1e\xac\x5d\x0c\x37\x0e\xd9\x17\x20\x97\x55\x2d\x1b\xb1\x9d\xd4\x60\x34\x12\x29\xf6\xf6\xda\xa9\x89\x41\xdd\x5a\x1f\xa5\xfb\xbf\x1a\x81\x05\xbb\xb7\x28\x76\xd5\xb6\x80\x5c\xbb\x74\x04\xe3\xab\x9f\xac\x5b\x4a\xc8\xe5\x25\xf8\xe0\xff\x42\xa5\x1d\x98\x0a\x4d\xa3\x84\x06\xf3\x84\x90\x37\x4a\xa1\x30\xf0\x1c\xce\x64\xe1\x5f\x57\x3e\x59\x52\x34\x22\x8f\x74\x93\x14\x0a\x2e\xa9\xf9\xfd\x37\x68\x83\x9d\x61\x78\xdc\xdc\xad\xd7\xa2\x90\x59\xef\xc6\x65\x48\x88\xd9\xd5\xc1\xdc\x2d\x15\xb4\x44\x05\xda\xa8\x26\x37\xad\x25\xde\x7c\x52\x44\xa7\x29\xf4\x1d\xfb\x45\xc9\xca\x55\x33\x11\xae\xa4\x1d\xbc\x29\x2c\xde\x6a\x9f\x6a\x88\x66\x3e\x7f\x36\x4e\xfd\x91\x1c\xe3\xed\x53\x47\xbf\xbb\x24\xf0\xf0\xee\x74\xaf\x11\x83\x6f\x7a\x3b\xc7\xb9\xf7\xd7\x3b\xe9\x2e\xf3\xd1\x8e\x47\xf6\xdb\xf8\x9f\x47\xba\x12\xbb\x84\x8a\x31\xbf\x84\x2d\x78\x4a\x7b\x57\xac\x00\x06\xd7\x50\x64\x2f\x4a\x43\xc5\x2e\xfd\x03\x7e\x61\xd9\x5a\x7f\xae\x6a\xb3\x4b\xd2\xc9\x85\xea\xa1\x89\x08\x64\xc9\xd4\x80\xfb\xc9\xe6\xc2\xbb\xd8\x5c\xc0\x51\xec\xd2\x03\x58\x14\x8c\x7e\xe3\x98\xf4\xb5\x5b\x84\x60\xfe\xae\xd3\xe9\x91\xd1\xdf\x99\xc9\x9f\x86\xea\x87\x68\x07\x16\xdf\xc3\x7b\x3f\xcd\x79\x39\xd5\xdd\xbe\xf6\x62\x90\x8c\x64\x7f\x35\x07\xed\x2b\x7e\x7f\x45\x25\x49\xc9\x02\x6d\xcc\x1e\xb7\x58\xd0\x86\x9b\x17\x66\x05\xe3\xa1\x1a\xaf\x02\xdd\xd1\xe5\x7e\x8c\x23\x3a\x8e\x6e\xd5\x30\x6e\x36\xbd\x01\xbf\x94\x1e\x6a\xf2\xae\x48\xae\x17\x1e\xbc\xd9\xa8\xd7\xf7\x57\x74\xd6\x51\xa1\x45\x66\x0d\xd6\xdd\x9e\xf4\xb8\xfe\x3a\x90\xfc\x72\x38\xfa\xcd\x3a\x4c\x48\x33\xcc\x2e\x7d\x2f\xa5\xf9\x6f\x3a\xf0\xd7\x25\x85\x3b\xde\x28\xca\xc1\xda\x3f\x99\x76\x03\xe1\x70\x27\xbe\x5d\x63\x4e\xc1\x3e\xa9\x53\xf4\xde\x56\xd1\x27\xf7\xca\x3d\xf2\xae\x70\x4f\xac\xd6\xc9\xd4\x6b\x74\xd2\x55\x48\xcd\xf9\x5f\x2d\xc9\x38\x5f\xee\x8b\xac\x0a\x13\xf7\x3a\x72\xe9\x26\xaf\x5b\x09\xc2\xe1\x74\x1b\xf0\x62\x93\x08\x6e\x27\x6a\xfd\x36\xd0\x3d\x45\x81\x4e\xc5\xc6\xbd\xa0\xf7\x6e\x89\xf7\x77\xc3\x79\x00\x86\xa1\x1e\xbc\x52\xce\x01\x7f\x30\x6d\xdc\xed\x67\xc3\x79\x70\x16\xe9\x24\x8e\x29\x0e\x0e\xc4\x25\x91\x8f\xdf\xfb\xf7\x5e\x8e\xd3\x3e\x72\x6c\x40\xcf\xcf\xf9\x2f\x52\x0d\x79\x4f\x21\x74\xc5\x0b\xab\x00\x14\x52\xf9\xe7\x92\x3d\xe3\xb8\x99\x0c\x88\xce\xed\x1c\xe2\xe6\x98\x99\x5f\xe3\xa3\x23\x60\xfd\x58\xc2\x99\x6e\xe4\xff\xea\xa3\x6a\xff\x92\x7e\x04\x49\xc5\xbb\x8a\xa3\x26\x4b\xfe\x09\x00\x00\xff\xff\xec\x98\x22\xd7\x79\x11\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 4473, mode: os.FileMode(420), modTime: time.Unix(1537418981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xdd\x73\xdb\x36\x12\x7f\xd7\x5f\x81\xd3\xb8\xa9\x94\x91\xe9\x3c\xab\xe7\xce\xe4\x9c\xa4\xe3\xb9\xb8\xf5\x44\x99\xf4\x21\x93\xa9\x61\x72\x25\xa3\xa1\x00\x15\x04\x1d\xfb\x34\xfc\xdf\x6f\xf0\x45\x02\x20\x29\x81\xfe\xc8\xb9\x73\xf6\x43\x6b\x2f\x16\x3f\xec\x17\x16\x0b\x10\xc8\x06\xa7\x5f\xf1\x0a\xd0\x76\x8b\x92\x05\x88\xe4\x84\xd1\x25\x59\x95\x1c\x0b\xc2\x68\xf2\x2b\x5e\x03\xaa\xaa\xd1\x88\xac\x37\x8c\x0b\x34\x19\x21\x84\xd0\x78\xb9\x16\x63\xfd\x5b\x71\x4b\xd3\xf1\x48\xff\xbe\x62\x09\xde\x30\x0e\x82\x25\x84\x1d\x41\x0e\x6b\xa0\x02\xe7\x9a\x73\xbb\x45\x1c\xd3\x15\xa0\x64\xb1\x81\x34\xf9\x78\xbb\x81\x73\xce\xae\x49\x06\xbc\x40\x87\x55\xa5\x21\xa4\x14\xa8\xaa\xea\x2e\x40\x33\xd5\xd8\x05\xf1\x09\xe7\x24\x53\x62\x0e\x00\x9a\x8e\x46\xdb\x2d\x3a\xc8\xb1\x80\x42\x7c\x02\x5e\x10\x46\xd1\xfc\xd8\x40\xbe\x57\xe4\xd7\x42\x70\x72\x59\x0a\x28\x2c\x83\x94\xa0\x1e\xfd\x80\xcc\xd0\x01\xd0\x72\x2d\xfb\x5d\x96\x24\xcf\xde\xd2\x72\x5d\x68\x88\x10\xba\xaa\x46\x47\x47\x52\x00\xd5\x43\xa9\x8d\xaa\x0a\x71\xd8\x70\x28\x80\x8a\x02\x89\x2b\x40\x1b\x56\x14\xe4\x32\x07\x74\x8d\xf3\x12\x0a\xb4\x64\x1c\x61\x2b\x85\x52\x46\x77\xaf\x25\x33\x7e\x19\x27\x23\x21\x11\x5b\xf8\x85\xe0\x84\xae\x46\xa3\x94\xd1\xc2\x7a\x6d\xbb\x3d\xb4\x1a\x50\xbc\x86\x19\x3a\x50\xa3\x49\x2d\x74\xe7\x4f\x7a\x70\x63\x42\x23\x36\xd5\x23\x85\x12\xeb\xae\x92\x41\xff\x56\x55\x89\x35\x75\xdd\xa5\x25\xd5\xb1\x56\xc5\xf6\xf0\x9c\xa3\x7c\xd3\xfc\x3e\x92\xd2\x92\x25\xa2\x4c\x18\xdf\x9c\xb1\x0c\xf2\xe4\x0d\x08\x9c\x5e\x41\xd6\x18\xd6\x6d\x7d\x4b\x05\x11\xb7\xc6\x38\xa7\x19\xa8\x3f\x43\xd1\x6b\x3a\x5b\xaa\xbf\xd9\xe5\x9f\x90\x8a\x64\x74\x8d\x79\x1c\xde\x31\xaa\x63\x3b\xa9\x89\x5b\xa5\x8c\x64\x9d\xa3\x3a\x02\x1d\xa8\x0f\x50\x08\xd9\x5a\x55\xe3\x99\x62\x3d\xc1\x02\x56\x8c\xdf\xce\xbb\x58\x59\xc9\xd3\xda\xc9\x9a\xff\x5c\x4f\xd4\x79\x1b\xda\xb4\x34\x9c\x9c\x5c\x63\x21\x39\x43\x46\xdd\x50\x55\xb3\x51\x35\xd0\xd6\xdb\x6d\x17\xc7\x69\xf1\x81\x31\xb1\xcf\x17\xe7\x79\xc9\x71\x8e\xaa\xea\x3d\x29\x84\xeb\x0d\x8c\x72\x49\x61\xcb\x88\xbe\x75\xa0\xc7\x8c\xf1\xf9\xcb\xcb\x5e\x4e\xa9\xf0\xd1\x11\x72\xa2\x43\x94\x9c\xea\xd0\x20\x9d\xa1\x51\x20\x42\xd5\x9f\x52\xda\x64\xb4\x2c\x69\x8a\x26\x2c\x52\x96\x69\x3d\xd2\x64\xda\x1d\x37\xca\x67\x5a\x8a\x7e\xcc\x26\xfc\x46\x5a\xfe\x13\xb6\x69\x64\xc7\x68\xc3\x08\x15\xc0\x91\x60\x08\xa3\x54\xb6\x49\x81\xe3\x44\x1c\xae\x92\x1c\xbc\x43\x9d\x25\xc1\x97\x39\x14\x56\x27\x25\xc6\xfc\x18\xe1\xcd\x06\x68\x36\x89\x03\xdf\x56\x33\xc4\x92\x24\x99\xba\x66\x79\x21\xa1\x8c\xe2\xaf\x15\x9a\x01\x2d\x3c\x37\x09\xa6\xfe\xc4\x88\xc2\x37\x3d\xba\xf1\xe3\x63\xd9\x41\xcb\x32\xb1\xe3\x27\x49\xd2\x6d\x92\xbd\xa6\x62\xa5\xb8\xa7\xa5\xe4\x92\xf1\xc7\x4c\x9a\x42\x02\xe9\x3c\x6f\xe5\xd2\xb9\xc9\x8e\x53\x0f\xc3\x4a\xa1\x3a\x24\x93\x5d\xb3\x65\xaa\xf1\x2b\x2f\x4e\x59\x29\x8c\x3b\xd4\x7c\x4b\x19\xbd\x06\x2e\x5c\x6f\xa8\x48\xa4\x7d\x7a\xdf\xcd\xdc\xf2\xbf\xfd\x61\xa7\x24\xf1\xed\xb9\x83\x73\x5b\xb9\x66\x23\x02\xd6\x8e\xdd\x76\x5a\x4c\xf2\xee\xb6\xc9\x1b\x58\xe2\x32\x17\xbf\xf1\x0c\xb8\x97\x5f\x32\xdd\x80\x98\x6c\x21\x74\x85\x96\x04\xf2\xac\xb0\x61\x9a\x32\x2a\x80\xde\xc1\x30\xee\x80\x93\x29\xfa\xfc\x45\xaf\xff\x41\x72\xb1\xe4\x46\xb9\xa0\xa2\xfa\xcd\x88\xd5\x14\x40\x61\x39\x63\xeb\xab\x7a\x85\xf3\xd7\x28\x7f\x3d\xd7\x26\xd2\x26\xb1\x00\xae\x35\xae\x0d\xed\xbe\xda\x1b\xec\xc9\x14\x11\x2a\xba\x12\x2a\x88\xe4\xf5\xf9\xe9\x29\x5d\xb2\xc4\xa9\xcb\x74\x4d\x67\x64\x95\x4b\xa0\x5d\x0e\xf7\xd4\x15\x61\x3d\xb1\x96\x2c\x52\x09\x1c\x76\xb3\x6b\xfe\xfe\xe5\xcb\xd4\x6c\x65\x2a\xe5\x0f\xbc\xb2\xdb\x1b\xdb\xad\xaa\x14\x3f\xb2\x77\x32\x94\xd0\x81\xd4\x16\x2d\x71\x5e\x80\x2a\x80\x3d\xc5\xa4\x5d\xd4\xc8\x16\x40\xda\xeb\xe2\xcf\x82\xd1\xf9\xf8\x70\x8c\x2e\xd5\x2f\x7f\x28\x7d\x8c\x6f\xc6\x17\xba\x97\x2c\xf3\x93\xb3\x52\xc0\x4d\x8b\xff\x70\x7c\x61\x7c\xfc\x2b\x7c\xdb\x63\x37\xbb\x5a\xc9\xfc\xdc\x9f\x73\xa4\xac\x2a\x06\xf6\x00\x4e\xa6\xbb\x41\x82\x50\x78\xb1\x8b\xb7\x99\x13\xae\x81\xe6\x3b\xe2\x67\x36\x72\x42\xfe\xd0\xdd\x1b\x48\x7f\xc8\x64\x52\x30\xee\xec\x25\xd0\x64\x8f\x3b\xa7\xde\xec\x32\x35\x59\x71\xc5\xca\x3c\xfb\x9d\x13\x01\xa7\x94\x08\x82\x73\xf2\x1f\xe0\xd2\xcd\x6a\xb3\x21\x87\xd2\x73\x30\x08\x8d\x83\xe4\xbc\xbc\xcc\x49\x2a\xb5\x41\x01\xec\x01\xa1\x44\xa5\xc7\x6f\x1d\xb0\x20\x3c\xf0\xb0\x2f\x59\x9a\xee\x1e\xbd\x8b\x76\xe8\xa6\x81\x38\x92\x99\x93\x31\x85\x7f\x67\xf9\xd6\x57\xd9\xdb\x84\xb2\x33\x5a\x1e\xa8\x50\x43\x5e\xa5\xe6\xce\xbe\x21\x8a\x2d\x49\xb0\x72\xe8\x3d\x93\xa7\xd7\x8f\x05\x2a\x29\xf9\xab\xb4\x65\xab\xec\x33\x50\x57\xd9\x65\x32\x45\xfe\x6a\xa1\x4b\x7d\xdd\xd7\x91\xc6\x06\xa7\x5d\xed\x92\x7a\x80\x86\x29\x39\xd1\x85\x00\x64\x76\x1e\xd7\x5e\x96\x09\x29\x80\x18\x8f\x47\x41\x10\xdc\xc5\x60\x0b\x10\x8e\x94\x05\x88\xc7\x31\x98\x37\xcc\x84\x64\xc6\x68\xd3\x48\xab\xc5\x99\x0b\x1d\x23\x92\x3d\x84\x51\xba\x96\xdb\x2b\xcc\xb3\x94\x65\x90\x85\x0b\xaf\x4a\xf8\xd1\x86\xb8\xf3\x6a\x3b\x5c\x8b\xde\x3a\xca\x6e\x1b\x7b\xea\xa9\x28\x5d\x94\x32\x4f\xbb\x70\x1a\x68\x31\x37\x04\x6d\x6b\x91\x72\xb2\x11\xcd\x49\xd4\x1b\x96\xfa\x15\x29\x4b\x4b\x95\xe9\x14\x8f\xac\x86\x9b\xf9\x12\x1b\x11\x6f\x58\xda\x91\x44\x94\xb8\xf0\x57\xaf\x3c\xe3\xcf\x94\x65\x2c\xfd\x32\x0e\xd3\x82\x22\x2f\xf4\x01\x96\x97\x3e\x7c\xb6\x0b\x69\xaf\x22\xfd\x17\x4e\xbf\x0a\x92\x7e\x2d\x76\x28\x7e\xd1\x35\xa5\xba\x2a\xbf\x08\x23\xc7\xa6\x0b\x25\x7f\xcb\x2c\x46\xf6\xe5\x5a\x24\x8b\x0d\x27\x54\x2c\x27\xe3\x7f\xfe\x50\xcc\x7f\x28\x7e\x1e\xcb\xdd\x5c\xb3\x04\xa9\x00\x69\x48\x3a\x53\x4f\x5b\x41\x11\x59\x29\xd6\xd1\xa1\xeb\x89\x5f\x80\x02\xc7\x02\x7e\x01\x21\x80\xa3\xa4\x55\x2e\x1c\x1d\xa1\x5f\x40\x48\x15\x5b\x29\xca\x8d\x9e\x4e\x06\x93\x55\x38\xa4\x40\xae\xc3\x0c\x7b\xb0\xc3\x66\x3d\x23\x4e\xa6\xfe\x38\xf6\x34\xd1\x37\xa9\x4e\xb0\xad\xf5\x27\x28\xf2\xdb\x26\x58\xec\x30\xc1\xa2\xc7\x04\xf5\x22\xb3\x22\xd7\x40\x1f\xd8\x0a\x3d\x83\x4e\x9c\xa4\xd1\x69\x8f\x7a\x25\xea\xb6\x04\x3a\x46\x0e\x42\x30\x03\xc2\x09\x80\x69\x86\x26\x7d\xb3\x60\xda\x6e\xd2\xe7\x80\x53\x63\xb6\x8f\x6c\xb1\xc1\xbc\x00\x2f\x54\x0a\x4d\xba\xd7\xd2\x63\x81\x7b\xcf\x00\xc2\x8a\x5f\xb3\xef\xd9\x23\xb4\xab\xf8\x88\xd9\xe4\x24\xed\x96\xa9\xe7\xe8\x85\xf4\x81\x4f\x97\x1b\x86\xa0\xec\xed\xc9\xf4\x72\xf9\xd6\x9f\x36\x54\x15\x43\x32\xd0\x16\x4c\x4b\xce\x81\x0a\x44\xe8\x92\xf1\xb5\x4e\xd8\x85\x60\x1c\x32\xb9\x12\xeb\xa3\x2f\xbd\x87\x2c\x39\xc4\x2f\xe7\x66\x28\x69\x53\xce\x19\xb7\x26\x54\x7f\x14\xfe\x21\xca\x5b\x45\xdb\xda\x34\xfc\x57\x49\x38\x64\x6f\x77\x31\x76\x7d\xb7\xd9\x6b\x57\xe7\xac\xf9\x23\xc7\xb4\x20\x52\x6b\xaf\x2d\x79\x7b\xb3\x61\x05\x34\xbb\x5a\x43\xfe\x60\x64\xf2\xb9\xe5\x22\xa4\x26\xc9\x58\x27\xe3\xb1\x6d\x96\x6d\x9c\xfb\xa2\x5b\x7b\x58\x28\x93\xc8\xfd\x35\xbb\x67\x8e\x4d\x7f\x52\x78\xff\x38\x46\x94\xe4\x4e\x64\x05\xa6\xaa\x8f\x93\x7c\xfa\x4c\x76\xb6\x07\x4b\x7e\x41\xd0\xa9\x8c\x20\x6b\x18\xa4\xca\x47\xb2\x86\xa7\xa8\x08\xdc\x08\xe0\x14\xe7\x83\x94\x79\x6b\x3a\x3d\x45\x85\x08\x15\xb0\x02\x3e\x48\x9f\x53\x2a\x9e\xa2\x2a\xcb\x9c\x61\x31\x48\x91\x77\xb2\xc7\x13\x51\x65\x97\x66\x1c\x96\x1d\x7a\x75\x0b\x9a\x34\x59\xb2\x47\x64\x08\x44\x85\x01\xd6\x66\x1c\x4d\x3c\xb9\xde\x93\x42\x8c\xa7\x01\xf1\x0c\x6f\xc6\x53\x2b\xb0\x39\xb6\x2e\xca\x4b\xe7\xd4\xba\x7b\xdd\x6f\x64\x6c\xb4\x2c\xca\xcb\xfd\x2a\x45\xa9\xd5\xa8\xb6\x43\xc1\xe4\x75\x9e\xb3\x6f\x90\x9d\x5c\x31\x92\x36\x5f\x98\x77\x45\x93\x4e\xbb\xa7\x54\x1d\xf9\x07\xc1\xa4\xb3\xf8\xa4\x27\xa6\x66\xcd\x76\x4d\xf6\xfb\x93\x11\xda\x12\xe0\x62\x3c\x43\xe3\x0b\x89\x56\xcd\xd4\x12\xfe\xba\x14\x6c\x65\x2a\xc2\x6c\x47\x64\xde\xc7\xcd\x8d\x10\x98\x47\xd9\xe0\x1c\xcb\xd2\x94\xc6\xcd\xa5\x99\xda\x10\x85\x63\x5c\x68\xf5\x9c\x75\xf1\x31\x34\x5b\x09\x94\x9c\xe1\x9b\xf7\x40\x57\xe2\x0a\xbd\x8a\xd1\xed\x0c\xdf\x90\x75\xb9\xd6\x5d\x62\x35\x94\xd4\x66\x1c\x49\x51\x07\xdd\x8f\xa6\x12\xa1\x83\x54\x22\xf4\x8e\x2a\xd5\xe3\x3c\xbe\x4a\xf8\x46\xdd\xf2\x40\xaf\x92\x57\x7d\x45\x52\x7c\xca\x37\x4e\x1c\x90\xf1\x6b\x1f\x7e\x32\x77\x40\x1e\x4e\x5f\x73\x42\x10\x2b\x74\xf4\x7a\x3b\x93\xd5\xf5\x24\x10\x7b\xfa\xd0\x7e\xda\x17\x88\x0f\xe9\x35\x1d\xa7\xc3\xbd\x66\xa5\x78\x04\xaf\x45\xca\x7c\x17\xa7\x35\x52\x7f\x27\xa7\xd5\xdf\x7f\x12\xf7\x00\xdc\xf9\x3e\xa4\xbe\x34\x77\x5e\x5f\x6b\x59\x42\xc2\xad\xad\xb6\x4a\x75\xe7\x93\x4f\xa3\xbf\x26\xc6\x96\x57\xd1\x7a\x1e\xf6\xd4\x53\x11\x56\xf0\x14\xbe\xae\x55\x55\x92\xd5\xd7\xed\xf4\x86\xb4\x31\x84\x7b\xf7\xec\xa4\x2c\x04\x5b\xdb\xcb\x04\x0d\x42\x52\x0f\x70\xb0\xc6\x9b\x0d\xa1\x2b\x75\x81\x4d\x1d\x3b\x37\x48\x67\xba\x29\x31\xff\x47\xe3\xe6\x36\x62\x4b\x1c\xc7\x49\x64\xd9\xa0\x76\xfb\xc2\xe0\x5a\x8f\xb0\x87\xb3\x71\x97\xc9\xc9\x12\xe5\x40\x83\xba\x77\x8a\x7e\x46\xaf\xea\xa1\xcc\x51\x87\xcf\x62\x46\x70\x31\xa0\xa3\x6f\xdd\x1b\x5a\xbd\xec\x59\x2c\xc9\xe3\xbf\xc9\xc9\x16\xb2\x24\xa9\x32\xed\x3b\xc6\xeb\x8d\xbe\x77\x10\x54\x53\x3d\xf6\xfa\xe8\x59\x1f\xa9\x35\x97\x1f\xd5\x65\xc2\xaf\x70\x6b\x0f\x34\xf6\x9d\xbb\xf6\xc9\x30\x51\x40\xf6\xa3\x4d\x93\x61\x7a\xc4\xd9\xd6\xc6\xbb\x9e\x21\xf6\xd5\xf8\xbf\x77\xe0\xe6\x4c\xe3\x0c\x6f\x3e\xcb\xa1\xbe\xfc\x24\xbb\xb5\x2c\x7d\xed\x1a\xf9\xe8\x08\xfd\x0e\x28\x65\x65\x9e\x29\xdb\x2e\x09\xcd\x10\x11\x33\x54\x30\x94\x83\xf8\xb1\x40\xe9\x15\xa4\x5f\x11\x33\xd7\xcf\xd8\x37\xe0\x28\xc5\x05\x20\x42\x33\xb8\x81\x0c\x15\x1b\x48\xd1\x1a\x6f\x5c\x9f\xed\x92\xf3\xbd\x84\x38\xc1\x05\x74\x08\x6c\xef\x57\x75\x1a\xa4\xf0\x7c\xb8\x2c\xf3\xdc\xf1\x51\xe1\x73\xae\xf1\x26\xd2\x5b\x3d\x63\x4d\xa6\x12\xe3\xb3\x76\xd6\x97\x58\x5f\x45\xa8\xef\x69\x3d\xda\x7f\xd5\xc3\xe3\x6f\xdd\xfb\xc0\x1b\x75\xeb\xa3\x36\x83\x0c\xe1\x5d\x68\xfb\xaf\x98\xfa\xe3\x1d\x0f\xb1\xc2\x36\xcc\xbc\x83\x0e\xdb\x9c\x6b\x06\x75\x0f\x29\x42\x70\x2c\xee\x5d\xaf\x0e\x97\x9b\xf1\x7c\xef\xb4\xf2\x0f\x5b\xfb\xf6\x44\xf2\xc7\xa5\xcf\xdb\x5b\x1b\xb9\xb3\x09\x8f\x53\x3b\xbb\xab\xfd\xde\xbc\x67\x1f\x7a\x58\x55\x83\xf6\x8a\x4d\xc1\x52\x77\xab\xea\x95\x6f\xd6\xd6\x2d\xd8\x54\x36\xd2\xb9\x0d\xf3\xce\x0d\xe8\x4e\xed\xec\x00\x9d\x5f\xdb\xe5\x8f\xd7\x30\xef\x71\x57\xdc\x10\x1c\x94\xe7\x7e\xa3\xf9\xad\x37\x82\x43\xd7\x1a\x04\x9c\x51\xe8\xde\x07\x5e\xa7\xdd\xa5\x6b\xf4\x80\x73\x08\xba\x2d\xff\x42\x74\x45\x57\xe8\xea\x1e\x8c\xc7\xed\x5d\x84\x49\xe2\x07\xdc\x70\x48\x43\x6f\x37\x54\xab\x8a\xc3\x15\x89\xeb\x7d\xc6\x6d\x80\x6b\xf2\xbc\xe3\x73\x68\xf0\x0d\x34\x6a\x24\xe7\x5c\xdd\x36\x19\x92\x96\xbd\x69\x8f\x82\x7b\x47\x72\x01\x5c\x7d\x99\x71\x5a\x1b\xaa\x06\xf5\xb8\xe2\x70\x19\x07\xb2\xa2\xff\x06\x2f\x26\x1b\xaa\xc1\x75\xb9\xa2\x70\xcd\xf7\x50\xa7\x45\x53\x34\x5e\xdd\x1a\x85\xe5\x5c\x02\x71\x5a\x1b\xaa\xc6\xf4\xb8\xa2\x70\xdd\x03\x90\xba\xb1\x26\xce\xdb\x87\x24\x91\xa0\xad\x69\x62\x69\xf3\xd6\x9e\x3d\x0a\xd1\x39\xd4\x68\x20\x2d\x71\xde\x3e\xf8\x88\x04\x6d\x8b\x69\x68\xf3\xd6\x26\x35\x06\x31\xcc\x9c\x4e\xc2\x1c\x94\x27\x55\x62\x0a\x03\xbd\x26\x6a\xd9\x5c\x9e\x28\xd0\x73\x4e\xd6\x98\xdf\x06\x61\xde\x50\x35\xac\xc7\x15\x85\xfb\x01\x70\x16\x26\x74\x4b\x9b\x9b\x03\xc3\x9a\x23\x12\xd1\xff\xf0\xa6\x11\x35\x6d\x1e\x1e\x41\x46\x21\x2e\x5a\x53\x71\xe1\x4c\xc5\xc5\xa0\xa9\xb8\xd0\x5f\x49\x5d\x2c\x45\x31\x58\xb6\x35\x0e\xab\xbc\x34\x1f\xdc\x1b\x30\x4d\xb2\x0f\x79\x6a\x86\xb8\xc8\x69\x7d\xe2\x94\x3f\x35\x51\x8b\xe8\xf2\xc4\x81\x06\x22\x3a\xf2\xed\x15\xce\x8c\xd0\xbf\x35\xdd\x5f\x37\x77\x6f\x33\xbe\x43\x01\xdd\x33\xf0\xd3\xae\xa4\xf5\xbe\x2e\x79\x2e\xa3\x9f\xcb\xe8\xe7\x32\xfa\xb9\x8c\x7e\x2e\xa3\xd1\x73\x19\xfd\x5c\x46\x3f\x97\xd1\x16\xf1\xb9\x8c\x8e\x00\xfc\x3b\x96\xd1\xdb\xf6\xd5\xf3\x7b\xdc\xbc\xd5\x9f\x60\x76\x5e\x78\x8d\x78\x89\x1f\x8b\xa0\x1f\x34\x0e\x1a\xef\xbb\xbc\xca\x1f\x22\xd1\xff\xf4\x6d\xfe\x10\x41\xef\xaa\xde\xdf\xed\x9d\xfe\xf7\xb0\xc9\xf3\x9b\xfd\x07\x79\xb3\x3f\xcc\xe8\xff\x77\x2f\xf7\x87\x99\xe7\x69\x3f\x43\xbb\xeb\xfb\xfd\x61\x36\xb8\xfb\x2b\xfe\xfd\xeb\x5e\xc7\xab\xfd\xf6\x7b\x94\x5d\xcf\xf7\x93\xa8\xe5\xce\x7b\xc5\xdf\xe1\x9f\xfd\x7e\xe9\x7c\xcd\x2f\x78\x09\xfe\x65\xa2\xef\xf7\xa0\x3f\xca\xb0\xee\xb3\xfe\x08\x1b\x25\xf5\xeb\xfe\xfd\xbc\x93\x29\x7a\x19\xfd\x8a\x27\xfe\xd9\xcf\xd6\x06\x4e\xd4\x3b\x72\x13\x2b\xad\xe7\xe4\xfb\xc7\x79\x94\x47\xe5\xb1\xcf\xc4\x3d\xb1\xf7\x3c\x7e\x8e\x57\xe5\x1e\x6f\xc6\x5f\x3e\xd2\xa3\xf1\xd8\x67\xe0\x0f\x6d\x90\xef\xf5\x26\xfc\x45\xd7\xa3\xf0\x7b\x3f\xf3\x8e\xd1\xf0\x5e\x49\xf9\x23\x7b\x57\xe6\xb9\x93\x1f\xd4\xb5\xa1\x40\x2a\xe3\x93\xbb\x08\xa7\xf1\xf7\x3e\x06\x34\x15\xc5\xde\x7f\x4c\xe4\x6e\xa7\xfe\x64\x89\xba\x1e\xfb\xb5\x6f\x04\xb2\x52\xf4\x3d\xcc\x7c\xd9\x85\x60\x96\x5f\xc7\xef\x55\x57\xd5\xd2\x2c\xd7\xff\x0d\x00\x00\xff\xff\xb1\x78\x15\x36\xca\x51\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 20938, mode: os.FileMode(420), modTime: time.Unix(1539631733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


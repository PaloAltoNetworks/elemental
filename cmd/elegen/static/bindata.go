// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x6b\xe4\x38\x17\xdd\xfb\x57\xdc\x2f\x84\x0f\x1b\x2a\xce\x66\x98\x45\x86\x2c\x42\xd3\x0d\x05\x93\x26\x24\x30\x9b\x22\x0b\xb5\xeb\xda\x11\x23\x4b\x46\x92\xd3\x5d\x18\xfd\xf7\x41\xb2\xfc\x90\xcb\xf5\x4a\xd2\xd5\xd0\xd9\xa4\xca\xd2\x7d\x9d\xa3\x7b\x74\x5d\x15\xc9\xfe\x25\x05\x42\xd3\x40\xfa\x84\x3a\xfd\x24\x78\x4e\x8b\x5a\x12\x4d\x05\x4f\xbf\x92\x12\xc1\x98\x28\xa2\x65\x25\xa4\x86\x8b\x42\xa4\xa4\x12\x12\xb5\x48\xa9\xb8\x46\x86\x25\x72\x4d\xd8\x45\x14\xbd\x12\x09\x71\x04\x00\x40\xd7\xc8\x35\xd5\x1b\x6b\xac\xee\x49\x05\xb7\x50\x92\x6a\xa5\xb4\xa4\xbc\x78\xee\x6d\xd2\xa5\xdf\x07\x8d\x33\xb3\x7f\x4d\x73\x05\x92\xf0\x02\xdb\x64\x9e\x2a\xcc\x68\x4e\x33\x97\x8c\xb2\x89\x0c\x1b\x81\xe6\xa0\x5e\x44\xcd\xd6\x8f\x58\x50\xa5\x51\x06\xbb\x21\x85\xcb\xf4\xa1\xfe\xc6\x68\x76\x2f\xd6\x18\xda\x5e\xc1\xe5\x90\x22\xdc\xdc\x42\x6a\xf7\xb0\xf4\xf3\xf0\xf0\x6a\x64\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x39\x8c\xdd\x18\xd3\x15\xb4\x08\x42\x21\x5f\x4f\xa3\x8f\x1e\x99\x28\xc0\x2c\x23\x1a\x0b\x21\xe9\x6f\x08\x9c\xa8\x65\x86\x3f\x05\x3c\xc2\x28\x51\x3f\x11\xb1\xab\x33\x42\xd6\x34\x3e\xab\x4b\xba\x80\x4b\x57\xd9\xc8\xe8\xae\xad\x14\x42\x8c\xbb\x7d\x1f\x07\xec\x9e\x83\xca\xd7\xf8\x63\x06\xeb\xd5\xf3\xea\xb9\xfd\x78\x76\x8c\x2d\x02\x93\xfe\xec\xa1\xa0\x39\x30\xe4\xdd\xf2\xb2\x4d\x1e\x8c\x99\x4d\x37\x4c\xd9\x11\x90\x89\xb2\x12\x35\x5f\x8f\x38\x18\x9c\x04\x86\x9d\xbf\x66\xec\xa2\x37\x37\xc6\x65\x69\xff\x2f\x06\x60\xc1\xec\x25\xc5\x2c\x9a\x06\x90\x29\x5b\x0e\xa7\x6c\xf1\x46\xde\x92\x28\xba\xbe\x06\x97\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x5f\x10\xb2\x5a\x4a\xe4\x1a\x5e\xfd\x9a\xc8\xdd\xe3\xd2\x15\x1b\xe5\x35\xcf\x02\xdb\x38\x81\x9c\x09\xa2\xff\xfc\x03\x1a\xef\xa7\xbf\x3c\xee\x1e\x96\x4b\x9e\x8b\xb4\x0b\x63\x2b\x8c\x22\xbd\xa9\xbc\xbb\x7b\xc2\x49\x81\x12\x94\x96\x75\xa6\x1b\x13\x39\xf7\x71\x1e\xac\x26\xd0\x9d\xd8\x2f\x52\x94\x96\xcd\x98\x5b\x4a\x5b\x78\x13\x98\xed\x6a\x57\xaa\xcf\x66\x7a\xff\xac\xac\xf9\x73\x74\x4c\xb4\x4f\xad\xfc\x6e\x62\xaf\xc3\x9b\xd3\xa3\x06\x0a\xbe\xea\xfc\x1c\x17\xde\xb5\x77\xdc\x36\xf3\xd1\x81\x07\xf5\x5b\xb9\x8f\x47\x86\xe2\x9b\x98\xf0\xa1\xbe\x98\xce\x44\x4a\xba\x50\x34\x07\x0a\xb7\x90\xa7\x5b\xd4\x10\xbe\x49\xfe\x82\xff\xd1\x74\xa9\x3e\x97\x95\xde\xc4\xc9\xa8\xa1\x3a\x68\x02\x01\x99\x73\xd5\xe3\x7e\xb2\x3b\xff\x2c\x74\xe7\x71\xe4\x9b\xe4\x00\x16\x39\x25\xdf\x18\xc6\x1d\x77\xb3\x10\x4c\x9f\xb5\x36\x1d\x32\xea\x3b\xd5\xd9\x4b\xcf\xbe\xcf\xb6\x57\xf1\x3d\xba\xf7\x66\xcd\xcb\x88\x6a\xe7\xb5\xad\x8b\x64\x10\xfb\x9b\x29\x68\x5f\xf1\xfb\x0e\x93\x38\x89\x66\x64\x63\xf2\x75\x8d\x39\xa9\x99\xde\x72\xcb\x29\xf3\x6c\xec\x02\xfa\xa9\x22\x52\xe1\x5b\xe0\xde\xb6\xfc\x85\xa0\x7b\x43\x2e\x74\x7f\x0f\xa8\x47\x21\xf4\x7b\x49\x69\x8b\x7c\x0f\x35\x1f\xc6\x94\xbf\xd8\xf6\xd3\x13\x5c\x9c\x81\xfe\xf5\x83\xc1\xaa\x73\xe0\x5e\x1f\x0e\xc9\x51\xcb\xac\xed\xda\x27\xe7\x36\x50\xa5\xfd\xbd\x37\xe9\x7d\x7f\xba\x26\x52\xd0\xea\x5c\x72\x9c\x12\x1c\x28\x7e\x3e\x1d\xf5\x61\xc7\x72\xe7\xe9\x3a\xaf\x56\xfc\x7f\xce\xe0\x81\xd5\x92\x30\x30\xe6\x6f\xaa\xec\xd5\x7d\xc6\x83\xb9\x2d\x04\x47\xf3\x34\x63\xfa\xdb\xb1\xb5\x5b\x42\x7e\x21\x67\x01\xe4\x27\x75\xb7\xda\xdb\xde\xea\xe4\xfe\x7e\x44\xd6\xd2\xf7\x42\x2b\x15\x8f\xa3\x06\x2b\x2d\x4f\x72\x3a\x5d\xc9\xb9\x3d\x36\xd6\x2b\x91\x50\xfa\x79\xf6\x36\x08\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x32\xb8\x1f\x99\x75\xb3\x76\xfb\x2d\x48\x74\xbc\x6d\x98\xba\xbb\xe8\x26\x72\xf1\xee\x18\xf3\xc0\x50\x54\x7d\x54\xc2\x18\xe0\x0f\xaa\xb4\x55\x6c\xda\xaf\xfb\x60\x81\x4d\x6c\xd5\xfd\xe0\xb8\x39\xb7\xe5\xfc\x6f\xd5\x7b\x5b\xe4\xb4\x9f\x10\x8c\x47\xcf\x4d\xd1\x5f\x84\xec\xeb\x1e\x43\x68\xc9\xf3\x83\x36\xe4\x42\xba\xef\x05\x7d\xc5\x61\xee\xef\x11\x9d\xfa\x39\x74\x9f\x86\xb7\xe9\x2e\x55\x3a\x02\xd6\xf3\xca\xce\xf8\x7d\xf7\x5d\x3f\x59\xec\x7f\x05\x3e\x42\xa4\xc2\x37\x01\x2b\x4d\x26\xfa\x2f\x00\x00\xff\xff\x51\x27\x8c\xfd\xd7\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5335, mode: os.FileMode(420), modTime: time.Unix(1539649739, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5b\x6f\xdc\xb6\xd2\xef\xfb\x2b\xd8\x85\x9b\x4a\xe9\x5a\xce\xf3\xa6\x2e\x90\x2f\x97\xc2\xf8\x92\xc6\x88\x83\xf4\xc1\x30\x6a\x5a\xa2\xd6\x6c\xb4\xa4\x42\x52\x76\x7c\x16\xfa\xef\x07\xbc\x49\xa4\x2e\xbb\x94\x2f\x39\x3e\x38\xce\x43\xeb\x1d\x92\xc3\xb9\x71\x38\x33\xa4\x58\xc2\xf4\x2b\x5c\x21\xb0\xd9\x80\xe4\x04\x89\xe4\x35\x25\x39\x5e\x55\x0c\x0a\x4c\x49\xf2\x27\x5c\x23\x50\xd7\xb3\x19\x5e\x97\x94\x09\x10\xcd\x00\x00\x60\x9e\xaf\xc5\x5c\xff\xc5\x6f\x48\x3a\x9f\xe9\xbf\x57\x34\x81\x25\x65\x48\xd0\x04\xd3\x03\x54\xa0\x35\x22\x02\x16\xba\xe7\x66\x03\x18\x24\x2b\x04\x92\x93\x12\xa5\xc9\xe7\x9b\x12\x1d\x33\x7a\x85\x33\xc4\x38\xd8\xaf\x6b\x8d\x42\x52\x01\xea\xba\x19\x82\x48\xa6\x1a\x87\x50\x7c\x81\x05\xce\x14\x99\x13\x10\xc5\xb3\xd9\x66\x03\xf6\x0a\x28\x10\x17\x5f\x10\xe3\x98\x12\xb0\x3c\x34\x28\xdf\x2b\xf0\x2b\x21\x18\xbe\xa8\x04\xe2\xb6\x83\xa4\xa0\x99\x7d\x0f\x2f\xc0\x1e\x22\xd5\x5a\x8e\xbb\xa8\x70\x91\xbd\x25\xd5\x9a\x6b\x14\x5d\xd4\x75\x3d\x3b\x38\x90\x04\xa8\x11\x8a\x6d\x50\xd7\x80\xa1\x92\x21\x8e\x88\xe0\x40\x5c\x22\x50\x52\xce\xf1\x45\x81\xc0\x15\x2c\x2a\xc4\x41\x4e\x19\x80\x96\x0a\xc5\x8c\x1e\xde\x50\x66\xf4\x32\x4f\x66\x42\x62\xec\xe1\xe7\x82\x61\xb2\x9a\xcd\x52\x4a\xb8\xd5\xda\x66\xb3\x6f\x39\x20\x70\x8d\x16\x60\x4f\xcd\x26\xb9\xd0\x83\xbf\xe8\xc9\x8d\x08\x0d\xd9\x44\xcf\xd4\xa5\x58\x0f\x95\x1d\xf4\x5f\x75\x9d\x58\x51\x37\x43\x7a\x54\x1d\x6a\x56\xec\x08\x4f\x39\x4a\x37\xed\xdf\x33\x49\x2d\xce\x01\xa1\xc2\xe8\xe6\x03\xcd\x50\x91\xbc\x41\x02\xa6\x97\x28\x6b\x05\xeb\xb6\xbe\x25\x02\x8b\x1b\x23\x9c\xa3\x0c\xa9\x9f\x5d\xd2\x1b\x38\xcd\xd5\x6f\x7a\xf1\x0f\x4a\x45\x32\xbb\x82\x2c\x0c\xdf\x21\x68\x6c\x3b\x69\x80\x1b\xc5\x8c\xec\xba\x04\x8d\x05\x3a\xa8\x3e\x21\x2e\x64\x6b\x5d\xcf\x17\xaa\xeb\x6b\x28\xd0\x8a\xb2\x9b\xe5\x50\x57\x5a\xb1\xb4\x51\xb2\xee\x7f\xac\x17\xea\xb2\x8f\xda\xb4\xb4\x3d\x19\xbe\x82\x42\xf6\xec\x76\xd4\x0d\x75\xbd\x98\xd5\x13\x65\xbd\xd9\x0c\xf5\x38\xe2\x9f\x28\x15\xbb\x74\x71\x5c\x54\x0c\x16\xa0\xae\xdf\x63\x2e\x5c\x6d\x40\x50\x48\x08\xcd\x03\xc6\x36\x86\x1e\x32\xc7\xe9\xd9\xf3\xd1\x9e\x92\xe1\x83\x03\xe0\x58\x87\xa8\x18\xd1\xa6\x81\x07\x4d\x83\x03\x4c\xd4\x4f\x49\x6d\x32\xcb\x2b\x92\x82\x88\x06\xd2\x12\x37\x33\x45\xf1\xb0\xdd\x28\x9d\x69\x2a\xc6\x71\xb6\xe6\x37\xd3\xf4\xbf\xa6\x65\x4b\x3b\x04\x25\xc5\x44\x20\x06\x04\x05\x10\xa4\xb2\x4d\x12\x1c\x46\xe2\x74\x96\xe4\xe4\x03\xec\xe4\x18\x5e\x14\x88\x5b\x9e\x14\x19\xcb\x43\x00\xcb\x12\x91\x2c\x0a\x43\xbe\xa9\x17\x80\x26\x49\x12\xbb\x62\x79\x26\x51\x19\xc6\x5f\x29\x6c\x06\x29\xf7\xd4\x24\xa8\xfa\x09\x01\x41\xd7\x7a\x76\xa3\xc7\x87\x92\x83\xa6\x25\xb2\xf3\x27\x49\x32\x2c\x92\x9d\xa2\xa2\x95\xb8\xa3\xa4\xe4\x96\xf1\xf7\x42\x8a\x42\x22\xd2\x7e\xde\xd2\xa5\x7d\x93\x9d\xa7\x99\x86\x56\x42\x0d\x48\xa2\x6d\xab\x25\xd6\xf8\x6b\xcf\x4e\x69\x25\x8c\x3a\xd4\x7a\x4b\x29\xb9\x42\x4c\xb8\xda\x50\x96\x48\xc6\xf8\xbe\x9d\xb8\xe5\x7f\xc7\xcd\x4e\x51\xe2\xcb\x73\x0d\xbf\xa2\x68\x4b\xf7\x05\x28\x10\x89\x68\xdc\x8a\x10\xcb\x61\x2f\x5e\x02\x0c\x7e\x33\x6d\x2f\x01\xfe\xf5\x57\x5f\x84\xa7\xf8\x0c\x1c\x02\x7a\x8a\xcf\xb6\x8a\xe6\x0d\xca\x61\x55\x88\x8f\x2c\x43\xcc\x73\x33\x99\x6e\x00\x54\xb6\x60\xb2\x02\x39\x46\x45\xc6\xad\xb5\xa6\x94\x08\x44\x6e\x21\x1f\x77\xc2\x28\x06\xa7\x67\x3a\x0c\xe8\xf8\x18\x0b\x6e\x59\xea\x04\x56\x1f\x0d\x59\x6d\x1c\xd4\x8d\x6a\x6c\x98\xd5\x6c\x74\xfe\x56\xe5\x6f\xeb\x5a\x44\x5a\x24\x9f\xe9\x49\x09\x19\x47\x9e\x38\x02\x9d\xba\x31\x32\x94\x49\xd3\xd2\x68\x42\xd7\xf5\xc1\x01\xf8\xd8\x77\xe5\xe0\x1a\x17\x05\xa0\xa4\xb8\x51\x22\x87\xa6\x69\x85\xaf\x10\x31\x2a\x49\xc0\x9f\x54\xff\x09\xd6\x08\x12\x0e\xa4\x01\x31\x64\x40\x1c\xdd\x42\x49\x56\x04\x91\x51\x7a\x92\x24\x5a\x1f\x8f\xca\xb0\x93\x0e\x99\x8d\x9f\x19\x33\x76\x6b\x1a\xae\x62\xaf\x0c\xec\xae\x76\x6d\x70\x47\x31\xc0\x44\x0c\xed\x98\x48\x24\xaf\x8e\x8f\x8e\x48\x4e\x13\x27\xf0\xd6\x41\xbb\xb1\x42\x19\xe3\xd8\x78\x67\x47\xe0\xd8\x0d\x18\xd7\xb2\x8b\x64\x02\x76\x87\xd9\xa0\x6e\x77\x7c\x62\x82\xf2\x2a\x95\xf4\x77\xd6\xdb\xf6\x75\xb6\xd9\xa8\x54\xe0\x33\x7d\xa7\x6c\x6e\x4f\x72\x0b\x72\x58\x70\xa4\x32\x1c\x8f\x31\x29\x17\x35\xb3\x45\x20\xe5\x75\xfe\x0f\xa7\x64\x39\xdf\x9f\x83\x0b\xf5\xc7\xdf\x8a\x1f\xa3\x9b\xf9\xb9\x1e\x25\xf3\xb8\xe4\x43\x25\xd0\xf7\x5e\xff\xfd\xf9\xb9\xd1\xf1\x9f\xe8\x7a\x87\xdc\x6c\x38\x22\x37\xe0\xf1\x4d\x45\xd2\xaa\x6c\x60\x07\xc2\x28\xde\x8e\xa4\x63\x0a\xcf\xb6\xf5\x6d\xed\xdc\x15\xd0\x72\x8b\xfd\x2c\x66\x8e\x33\xdb\x77\x93\x3f\xa9\x0f\xb9\x9c\x38\x65\x4e\xb2\x08\xa2\x1d\xea\x8c\x3d\xbf\x69\x82\x6e\x7e\x49\xab\x22\xfb\x8b\x61\x81\x8e\x08\x16\x18\x16\xf8\x5f\x88\x49\x35\xab\x6c\x52\x4e\xa5\xbd\x6b\xc7\x34\xf6\x92\xe3\xea\xa2\xc0\xa9\xe4\x06\x74\xd0\xee\x61\x82\x95\x9b\xb8\x1e\x40\x8b\x84\x87\xbc\x3b\x16\xe7\x66\xb8\x07\x1f\x82\xed\xbb\x0e\x3e\x0c\x64\xd6\x64\x48\x66\x37\x18\x9f\x8f\xa5\x6e\xd6\xa1\x6c\xb5\x96\x7b\x8a\xc4\x81\x17\x8a\xbb\xab\x6f\x0a\x63\x39\xee\xc4\x04\x3a\x29\xf6\xf8\xfa\x85\x83\x8a\xe0\x6f\x95\xcd\x4b\xe4\x98\x89\xbc\xca\x21\x51\x0c\xfc\x38\x40\xe7\x72\x7a\xac\x43\x8d\x35\x4e\xeb\xda\x93\x66\x82\xb6\x53\xf2\xda\x6e\xc2\x76\x1d\x37\x5a\x96\x0e\xa9\x83\x62\x3e\x9f\x75\x8c\xe0\x36\x02\x3b\x41\xc2\xa1\x92\x23\xf1\x30\x02\xf3\xa6\x89\x70\x06\xec\xae\x1c\x26\xb5\x30\x71\x81\x43\x80\xb3\xfb\x10\xca\xd0\x76\x7b\x09\x59\x96\xd2\x0c\x65\xdd\x8d\x57\x39\xfc\x60\x41\xdc\x7a\xb7\x9d\xce\xc5\x68\x84\x6c\xeb\x02\x23\x91\x72\x10\x2f\x8a\x99\xc7\x1d\x12\x4f\x94\x98\x6b\x82\xb6\x95\xa7\x0c\x97\xa2\x2d\x35\xbe\xa1\xa9\x9f\x6b\xd0\xb4\x52\x9e\x4e\xf5\x91\x91\x60\xbb\x5e\x42\x2d\xe2\x0d\x4d\x07\x9c\x88\x22\x17\x7d\x1b\xa5\x67\x7e\x4a\x68\x46\xd3\xb3\x79\xd7\x2d\x28\xf0\x89\xae\x50\x7a\xee\xc3\xef\x76\x2e\xe5\xc5\xd3\xff\x83\xe9\x57\x81\xd3\xaf\x7c\x0b\xe3\xe7\x43\x4b\x6a\x28\xf2\x0b\x10\x72\xa8\xbb\x50\xf4\xf7\xc4\x62\x68\xcf\xd7\x22\x39\x29\x19\x26\x22\x8f\xe6\xbf\xfd\xcc\x97\x3f\xf3\xdf\xe7\x32\x5d\x6f\xb7\x20\x65\x20\x2d\x48\x7b\xea\xb8\x67\x14\x81\x91\x62\x63\x1d\x3a\x9e\xf8\x03\x11\xc4\xa0\x40\x7f\x20\x21\x10\x03\x49\x2f\x5c\x38\x38\x00\x7f\x20\x21\x59\xec\xb9\xa8\x6e\x6a\xd6\xeb\x60\xbc\x0a\x43\x29\xc2\x57\x5d\x0f\xbb\xb7\x45\x66\x23\x33\x46\xb1\x3f\x8f\x2d\x17\xfb\x22\xd5\x0e\xb6\xb7\xff\x74\x82\xfc\xbe\x08\x4e\xb6\x88\xe0\x64\x44\x04\xcd\x26\xa3\x73\xc1\xfb\x95\xc2\xc8\xa4\x91\xe3\x34\x06\xe5\xd1\xec\x44\xc3\x92\x00\x87\xc0\xc1\xd0\x59\x01\xdd\x05\x00\x49\x06\xa2\xb1\x55\x10\xf7\x9b\x74\xa1\x37\x36\x62\x1b\xcc\xe2\xb9\x06\x0d\x6f\x3d\x72\xd0\xa5\xed\x8f\x32\x5b\x23\xba\xd7\x04\x7c\xc7\x82\x0d\xca\xbb\x75\x17\x37\x9d\xb6\x42\xc7\xb9\x4a\x9b\xf5\xe0\x18\x1c\x1e\x82\x17\x4e\xee\x7c\x70\x00\x08\x2d\x30\x11\x4b\xb0\xa2\xfa\xac\xac\x69\xb3\xd9\xc9\x8e\x92\x85\xb6\x78\xe0\xfc\x6b\xb3\x8e\x80\xd5\xef\x0f\xec\x9b\xc7\x12\x3c\x93\x76\xe3\xc3\x65\x92\xd3\x9d\x11\x91\xcc\x41\x57\xbb\x49\x3f\x2f\x65\x52\x11\xc4\x48\xed\x16\x25\xf3\xb6\x24\x69\x84\xdf\x32\xca\xaf\xb1\x48\x2f\x41\x7e\x5f\xbc\xa7\x90\x23\x7f\x03\x5e\x7a\xed\x9a\x8f\x01\x49\x80\x43\xf0\x2c\x1a\x12\x51\x3c\x45\x44\x46\xd9\xbc\x34\x29\xf3\x31\x94\xdc\xc1\xb2\x2c\x74\x45\x9e\x50\x02\x08\x2e\xda\xe8\x15\x82\xe7\x01\xf2\x34\x95\xed\x89\xf9\x8e\x9a\x3c\x32\x0b\x73\x9b\x91\xc7\xee\xae\xae\xd2\x42\xde\x1e\x8a\xee\x14\xbd\x4d\x1b\xf5\x38\x03\xc4\x39\xf8\x49\xcf\xec\xee\x79\x47\xfc\xed\xb7\x0a\x16\x91\xbb\x11\xc6\x8e\xea\x4b\x48\x70\x1a\xcd\x53\x48\xa4\x07\x2a\x95\xf0\x72\x46\xd7\x00\x02\xcd\xc5\x35\x16\x97\x20\xc3\x79\x8e\x18\x22\xa2\x39\xb0\x99\x7b\xc5\x29\x4e\x55\x76\xae\x67\x8f\x02\xe4\x1b\xcf\xba\x27\xa4\x5d\x5e\xf8\x88\xd3\xfd\xe9\x50\xa9\xd3\xa9\xa2\x8d\x39\xe7\xe7\x7c\xc8\xb8\x66\x8d\x05\x79\x86\xd5\xfe\xe8\x55\xae\xcc\xb1\xb7\x4a\x80\x70\x86\xb4\xf3\x4d\x2b\xa6\xe5\x41\x72\xca\xd6\x3a\xd6\xe3\x82\x32\x94\xc9\x20\x5e\x1b\x8f\x2e\x3f\x55\x0c\x85\x67\x02\x66\x2a\x99\x2f\x33\x46\x99\xb5\x12\xf5\x43\x59\x48\x6b\x54\x6f\x15\x6c\x63\x23\xb8\x6f\x15\x66\x28\x7b\xbb\xad\xe3\xd0\x99\x7e\x80\xad\x35\xf1\xdb\x67\x06\x09\xc7\x92\x6b\xaf\x2d\x79\xfb\xbd\xa4\x1c\xb5\x05\x31\x03\xfe\x64\x68\xf2\x7b\xcb\xf8\x55\xed\xaf\x73\xbd\x19\xcc\x1d\x9d\x23\xc6\x7c\xd2\xad\x3c\x2c\x2a\x13\x03\xfa\xe1\xfe\x88\x05\xc4\x2f\x15\xbe\x9e\xbd\x74\x44\xd5\x1c\xce\xf8\xf0\x85\x1c\x1c\xb7\xc6\xe2\xe4\x12\x83\xcc\x08\xbc\x46\x93\x58\xf9\x8c\xd7\xe8\x31\x32\x82\xbe\x0b\xc4\x08\x2c\x26\x31\xf3\xd6\x0c\x7a\x8c\x0c\x61\x22\xd0\x0a\xb1\x49\xfc\x1c\x11\xf1\x18\x59\xc9\x0b\x0a\xc5\x24\x46\xde\xc9\x11\x8f\x84\x95\x6d\x9c\x31\x94\x0f\xf0\x35\x4c\x68\xd2\x7a\xc9\x11\x92\x51\x87\x54\x34\x41\xda\x94\x81\xc8\xa3\xeb\x3d\xe6\x62\x1e\x77\x80\x1f\x60\x39\x8f\x2d\xc1\x26\xe8\xe2\xd5\x85\x73\x12\x3c\xbc\x2b\xb5\x34\xb6\x5c\xf2\xea\x62\x37\x4b\x41\x6c\xb9\xc1\xd1\x28\x83\xc9\xab\xa2\xa0\xd7\x28\x7b\x7d\x49\x71\x8a\x78\x88\x35\x69\xb7\x7b\x44\xd4\x71\x70\xc7\x98\xb4\x17\x8f\x46\x6c\x6a\xd1\x56\x7a\xe4\xb8\x7f\x28\x26\x3d\x02\xce\xe7\x0b\x30\x3f\x97\xd8\xea\x85\x8a\xa4\x5f\x55\x82\xae\x4c\x32\x99\x6d\xb1\xcc\xbb\xa8\xb9\x25\x02\xb2\x20\x19\x1c\x43\x99\xd5\x92\xb0\xb5\xb4\x50\xb5\x94\xee\x1c\xe7\x9a\x3d\x67\x5f\x7c\x08\xce\x56\x02\x24\x1f\xe0\xf7\xf7\x88\xac\xc4\x25\x78\x11\xc2\xdb\x07\xf8\x1d\xaf\xab\xb5\x1e\x12\xca\xa1\x84\xb6\xf3\x48\x88\x3a\x23\x7b\x30\x96\x30\x99\xc4\x12\x26\xb7\x64\xa9\x99\xe7\xe1\x59\x82\xdf\xd5\x0d\x40\xf0\x22\x79\x31\x16\x24\x85\xbb\x7c\xa3\xc4\x09\x1e\xbf\xd1\xe1\x17\x73\x3f\xf0\xfe\xf8\x35\xc5\xc5\x50\xa2\x83\xf7\xdb\x85\x8c\xae\xa3\x0e\xd9\xf1\x7d\xeb\x69\x97\x21\xde\xa7\xd6\xb4\x9d\x4e\xd7\x9a\xa5\xe2\x01\xb4\x16\x48\xf3\x6d\x94\xd6\x52\xfd\x83\x94\xd6\x1c\x1d\x27\x6e\xf2\xec\x1c\x2d\xab\x4b\xc5\x83\x57\x9b\x7b\x92\x90\xe8\xd6\x96\x5b\xc5\xba\x73\x5a\xdc\xf2\xaf\x81\xa1\xe1\x55\x30\x9f\xfb\x23\xf1\x54\x80\x14\x3c\x86\xaf\x1a\x56\x15\x65\x4d\xd5\x41\x27\xa4\xad\x20\xdc\x7b\xc9\xaf\x2b\x2e\xe8\xda\x16\x11\x5b\x0c\x49\x5b\xc3\x58\xc3\xb2\xc4\x64\xa5\x2e\x37\xab\x13\xab\x16\xd3\x07\xdd\x94\x98\xff\x83\x79\x7b\x53\xbd\x47\x4e\xa7\xc2\x61\xb1\x0e\xeb\xc2\xe0\xb5\x1a\xa1\xf7\x27\xe3\x21\x91\x9b\x82\xa4\x1f\xf7\xc6\xe0\x77\xa7\x2e\x69\x8a\x51\x7e\x17\xb7\x50\x62\x70\xa0\x81\xb1\xcd\x68\xd4\x1b\x65\x8f\x71\x70\x11\x7e\x9c\x2f\x5b\x70\x8e\x53\x25\xda\x77\x94\x35\x89\xbe\x57\x43\x6e\xa0\x5e\xf7\xe6\xd4\x4a\x17\x86\xdb\x8b\xf1\xea\xa2\xf9\x57\x74\x63\x0b\x1a\xbb\x8e\x6c\xc6\x68\x88\x14\xa2\x7e\x35\x78\x84\x9c\xb6\x22\x7c\xb5\x00\xf4\xab\xd1\xff\xe8\xc4\x6d\x4d\xe3\x03\x2c\x4f\xe5\x54\x67\x2f\xe5\xb0\x9e\xa4\xaf\x5c\x21\x1f\x1c\x80\xbf\x10\x48\x69\x55\x64\x4a\xb6\x39\x26\x19\xc0\x62\x01\x38\x05\x05\x12\xbf\x70\x90\x5e\xa2\xf4\x2b\xa0\xe6\x3e\x1b\xbd\x46\x4c\x17\x3f\x31\xc9\xd0\x77\x94\x01\x5e\xa2\x14\xac\x61\xe9\xea\x6c\x1b\x9d\xef\x25\x8a\xd7\x90\xa3\x01\x82\xed\xdd\xdb\x41\x81\x70\x4f\x87\x79\x55\x14\x8e\x8e\xb8\xdf\x73\x0d\xcb\x40\x6d\x8d\xcc\x15\xc5\x12\xc7\xa9\x56\xd6\x59\xa8\xae\x02\xd8\xf7\xb8\x9e\xed\xbe\x25\xe6\xf5\xef\x5d\x19\x83\xa5\x2a\xee\x36\x62\x90\x26\xbc\x0d\xdb\xee\xcf\x0f\xfc\xf9\x0e\xa7\x48\x61\xd3\xf5\xbc\x93\x8a\x6d\xce\x0d\xa5\x66\x84\x24\xa1\x73\xa2\xe6\x7d\x7a\xd3\xdd\x6e\xe6\xcb\x9d\xcb\xca\x3d\x7b\xdf\x1f\xcd\x89\xe4\x3f\x17\xbe\xec\xa7\x36\x32\xb3\xf1\x70\x75\xee\x24\xf9\xf9\xde\x72\x24\x0f\xdd\xaf\xeb\x49\xb9\x62\x1b\xb0\x34\xc3\xea\x66\xe7\x5b\xf4\x79\xeb\x24\x95\x2d\x75\x6e\xc3\x72\x30\x01\xdd\xca\x9d\x9d\x60\xf0\xa2\x8e\xfc\xe7\x35\x2c\x47\xd4\x15\x36\x05\x43\x4a\x73\x1f\x49\x71\xe3\xcd\xe0\xc0\x35\x07\x9d\x9e\x41\xd8\xbd\xbb\x21\x4e\xbb\x0b\xd7\xd8\x3b\x3d\xa7\x60\xb7\xe1\x5f\x17\xbb\x82\x2b\xec\xea\x0a\x9d\xd7\xdb\xbb\x43\x97\x84\x4f\x58\x32\x94\x76\xb5\xdd\x42\x2d\x2b\x4e\xaf\x40\xbc\xde\x0d\x90\x16\x71\x03\x5e\x0e\xdc\xa4\xe8\x5c\x9f\x08\x9a\xc9\xa9\xab\xdb\x26\x03\xd2\xb4\xb7\xed\x41\xe8\xde\xe1\x42\x20\xa6\x8e\x58\x9d\xd6\x16\xaa\x91\x7a\xbd\xc2\xf0\x52\x86\xf0\x8a\xfc\x3f\xf2\x6c\xb2\x85\x1a\xbc\x6e\xaf\x20\xbc\xe6\x2a\x85\xd3\xa2\x21\x1a\x5f\xd3\x1a\x84\xcb\xb9\x3f\xe6\xb4\xb6\x50\x8d\xd3\xeb\x15\x84\xd7\x2d\x80\x34\x8d\x0d\x70\xd9\x2f\x92\x04\x22\xed\x2d\x13\x0b\x5b\xf6\x72\xf6\x20\x8c\x4e\x51\xa3\x45\x69\x81\xcb\x7e\xe1\x23\x10\x69\x9f\x4c\x03\x5b\xf6\x92\xd4\x10\x8c\x5d\xcf\xe9\x38\xcc\x49\x7e\x52\x39\xa6\xae\xa1\x37\x40\x4d\x9b\xdb\x27\x08\xe9\x31\xc3\x6b\xc8\x6e\x3a\x66\xde\x42\x35\x5a\xaf\x57\x10\xde\x4f\x08\x66\x5d\x87\x6e\x61\x4b\x53\x30\x6c\x7a\x04\x62\xf4\x0f\xde\x34\x46\x0d\x5b\x76\x4b\x90\x41\x18\x4f\x7a\x4b\xf1\xc4\x59\x8a\x27\x93\x96\xe2\x89\x3e\x25\x75\x71\x29\x88\xc1\x65\x5b\xc3\x70\x55\x17\xe6\xae\x4e\x8b\x4c\x83\xec\x47\x9e\x4d\x87\x30\xcb\xe9\x1d\x71\xca\x7f\x0d\x50\x93\xe8\xf6\x09\x43\xda\x21\xd1\xa1\x6f\x27\x71\x66\x86\xf1\xd4\x74\x77\xdc\x3c\x9c\x66\xfc\x80\x00\x7a\x64\xe2\xc7\x1d\x49\xeb\xbc\x2e\x79\x0a\xa3\x9f\xc2\xe8\xa7\x30\xfa\x29\x8c\x7e\x0a\xa3\xc1\x53\x18\xfd\x14\x46\x3f\x85\xd1\x16\xe3\x53\x18\x1d\x80\xf0\xbf\x31\x8c\xde\xf4\xbf\x5a\xb9\xc3\xa5\x7d\x7d\x04\x13\xfe\xc9\xfc\xf0\x2b\x2d\xa1\x18\xf4\xb7\xd0\x93\xe6\x3b\x3d\xdb\x75\x4d\xf7\xde\xde\x6d\x99\x42\xd7\x7f\xf4\xf5\x96\x69\x6f\x1c\xdc\x8e\xbd\x5b\xbd\xe4\x32\x65\x8a\x07\x79\xcf\xe5\x47\x48\xe6\x81\xde\x76\xb9\xbd\xec\xee\xf6\xc2\xcb\xce\xd5\xf5\x03\xde\x79\x99\xa6\x80\xff\xd5\xd7\x5e\xa6\x49\xe9\x71\x7f\xe0\xaa\xbf\x16\x7b\x57\x15\x85\x27\x92\x49\x5b\x83\xf7\xee\xcb\xc3\xae\x79\x4d\xea\xe3\x32\xba\xc4\x12\xb5\xd5\xfa\x6e\xf3\xfc\xca\x34\xd9\xdc\xfe\x11\x96\xdd\xb1\xc7\xc0\xa3\x2b\xfd\xcf\x09\xb7\xbd\xbe\x92\x04\x85\x1c\xde\x23\x2c\x03\x8b\x60\xb7\xf1\x0f\x3e\xc6\x22\x58\x85\xfc\x0b\x5d\x3f\xee\x3d\x96\x20\xc1\xba\xaf\xb2\x04\xc8\x28\x69\x1e\x67\xd9\xdd\x37\x8a\x83\xbe\x5f\xdb\x78\xbb\xff\xee\x01\x1b\x6b\x38\x41\xcf\x80\x18\x5b\xe9\x7d\x1d\x17\xf0\xe1\xd7\x43\xbc\x09\x12\xfa\xca\x87\x47\xf6\x8e\xb7\x2b\xc2\x59\xb9\xcd\x93\x1f\x38\x0f\x7e\xbf\xa2\xff\x3d\x86\xfb\xd4\x47\xed\x8a\xeb\xf9\x03\x3d\x21\x12\xfa\x28\xc8\x7d\xcb\xf7\x47\xbd\x10\xf2\x6c\xe8\x89\x90\x3b\x3f\xfa\x11\xc2\xe1\x9d\x7c\x7c\x67\x9f\x87\xfa\x26\x58\x87\x2a\xa3\x93\xdb\x10\x37\xb0\x39\x4b\xc0\xd0\xc7\xda\x66\x6f\xde\xf9\xbc\x54\x23\xe6\x49\x87\x39\x66\xb5\xf4\x3e\x20\xee\x7f\x0b\x5a\x89\xd1\xaf\x41\xb7\x7f\x0c\xea\x7c\x00\xda\xdf\xef\xdb\x30\xeb\xdf\x01\x00\x00\xff\xff\xfb\x35\xb0\x47\xbd\x59\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 22973, mode: os.FileMode(420), modTime: time.Unix(1539655055, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x5d\x6b\xf3\x36\x14\xbe\xf7\xaf\x38\x0b\x61\xd8\xd0\xb8\x37\x63\x17\x1d\xb9\x28\xa5\x85\xc0\x52\x4a\x0a\xbb\x09\xbd\x50\x9d\x63\x47\x4c\x96\x8c\x24\xb7\x33\xc6\xff\x7d\xc8\x96\x3f\xe4\x7a\xa9\xd3\xb5\x7d\xe1\xcd\x55\x2c\x9d\x2f\x3d\xcf\xd1\x73\x94\x91\xe8\x6f\x92\x20\x94\x25\x84\x8f\xa8\xc3\x1b\xc1\x63\x9a\xe4\x92\x68\x2a\x78\x78\x4f\x52\x84\xaa\xf2\x3c\x9a\x66\x42\x6a\x58\x24\x22\x24\x99\x90\xa8\x45\x48\xc5\x25\x32\x4c\x91\x6b\xc2\x16\x9e\xf7\x42\x24\xf8\x1e\x00\x00\x3d\x20\xd7\x54\x17\xc6\x59\x6d\x49\x06\x6b\x48\x49\xb6\x57\x5a\x52\x9e\x3c\x75\x3e\xe1\xc6\xda\x41\x59\xbb\x99\x5f\x59\xae\x40\x12\x9e\x60\x53\xcc\x63\x86\x11\x8d\x69\x54\x17\xa3\x4c\x21\xbd\x21\xd0\x18\xd4\x51\xe4\xec\xb0\xc3\x84\x2a\x8d\xd2\xb1\x86\x10\x96\xe1\x43\xfe\xcc\x68\xb4\x15\x07\x74\x7d\x57\xb0\xec\x4b\x84\xab\x35\x84\xc6\x86\x85\xb7\xfd\xe2\x6a\xe0\xb0\x28\x4b\x6b\xb0\x43\xa5\xcd\x76\x55\x2d\xae\x4c\x0d\xc3\x30\x55\xd5\x1e\xe8\xc2\x49\x85\xfc\x30\xce\x3e\x58\xaa\x3c\x07\xb3\x88\x68\x4c\x84\xa4\x3f\x21\x70\x22\x97\x11\x7e\x09\x78\x84\x51\xa2\xbe\x10\xb1\xd5\x37\x42\x56\x96\xb6\xaa\x25\xbd\x80\x65\x7d\xb2\x81\xd3\x75\x73\x52\x70\x31\x6e\xed\x3e\x0f\xd8\x49\xac\x03\xcf\xbb\xbc\x84\xba\x90\xbf\x50\x2a\x73\x70\x89\x3a\x97\x5c\x81\x3e\x22\x44\xb9\x94\xc8\x35\xbc\xd8\x3d\x11\xd7\xcb\x69\x5d\xb8\x17\xe7\x3c\x72\x7c\xfd\x00\x62\x26\x88\xfe\xfd\x37\x28\x6d\x9c\x4e\x84\xae\x1f\x36\x1b\x1e\x8b\xb0\x4d\x53\x55\x86\x6a\x5d\x64\x36\xdc\x96\x70\x92\xa0\x04\xa5\x65\x1e\xe9\xb2\xf2\xea\xf0\x7e\xec\xec\x06\xd0\x9e\xfc\x4e\x8a\xd4\x80\xe1\x73\x83\x48\xd3\x1c\x01\x4c\x76\x47\x7d\x54\x5b\xcd\x58\xc7\xf6\xc6\xfd\xc9\x9b\x93\xed\xa6\xb9\xc6\x85\x6f\xef\x73\x71\x7e\x56\x47\x09\xf6\x6d\x9c\x79\xe9\xeb\x36\xf1\x9b\xa6\x98\x9d\xb8\xbf\x45\xfb\xfa\xef\xcc\x54\xbc\xf0\x09\xef\xcf\xe7\xd3\x89\x4c\x41\x9b\x8a\xc6\x40\x61\x0d\x71\xf8\x86\x1a\xc2\x8b\xe0\x0f\xf8\x85\x86\x1b\x75\x9b\x66\xba\xf0\x83\xc1\x5d\x6d\xa1\x71\x14\x73\x2a\x54\x87\xfb\xd9\xe1\xec\x9a\x1b\xce\xe2\xc8\x8b\xe0\x1d\x2c\x62\x4a\x9e\x19\xfa\x2d\x77\x93\x10\x8c\xd7\x1a\x9f\x16\x19\xf5\x4a\x75\x74\xec\xd8\xb7\xd5\x76\x6a\x70\x42\xa3\x3e\xac\x4f\x11\x51\xcd\xdc\x7f\x23\x48\xbd\x68\x5c\x8d\x41\xbb\xc7\xd7\xff\x70\xf1\x03\x6f\x42\x36\x46\x9f\x07\x8c\x49\xce\xf4\x9b\xb0\x9c\x32\xcb\xc6\x1c\xa0\x0d\x37\x8f\x75\xc3\x39\xbd\x77\x1a\xe1\x11\xc3\x96\xb2\x11\xe1\x4d\x37\x07\xf3\xf8\x56\x1f\x21\x5c\x7d\x1a\xe3\x5c\xe8\x96\x88\x8d\xda\x09\xa1\x7f\x4c\x47\xfc\x3a\xe5\xf0\xc0\x72\x49\x18\x54\xd5\x9f\x54\x19\x81\x7e\xbf\x33\xbe\xa4\x51\xd4\x59\x9d\xa2\x4e\xb6\x8a\x3a\xbb\x57\x76\xc8\x1a\xe2\x8e\x34\x53\xfe\x30\xab\xb3\xd3\x30\x24\xc7\x7a\x2c\xa7\x6c\x4c\x2e\xf3\xd2\x4e\xed\x04\x5c\x3b\x29\xcd\x24\x34\x23\xda\x6e\x0e\xa7\x73\x6d\x36\xa8\x60\x3b\x70\x6b\xa7\x73\xf3\xe5\x14\x3a\x34\xeb\xe7\x74\x9b\xbd\xf2\xea\x7c\xd7\x8c\x59\x60\x28\xaa\x2e\x2b\x61\x0c\xf0\x1f\xaa\x34\xe5\x49\xdb\xe5\x14\x95\x4d\xe6\xf8\xf8\x01\xec\xa7\x5f\x6b\x43\x40\xa6\x4c\xbe\xff\x3d\x77\xf2\x72\x9c\xf7\x78\xad\x2c\x7a\xf5\xdc\xbd\x13\xb2\x3b\xf7\x10\x42\x43\x9e\x1d\xcd\x10\x0b\x59\x7f\x27\xf4\x05\xfb\x97\x42\x87\xe8\x38\xce\x69\x79\xda\x3f\x35\xb7\xe1\x3d\x3d\x9a\x01\xeb\xf7\x0a\x4e\x5b\x78\xf9\x7f\x1f\xcb\x27\xd9\x9a\x23\x52\xee\xdb\xc1\x48\x53\xe5\xfd\x1b\x00\x00\xff\xff\xb6\x1f\x7f\xe7\x51\x0f\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 3921, mode: os.FileMode(420), modTime: time.Unix(1528495747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\x1b\x39\x0e\x7f\xf7\xa7\xd0\x19\xd9\x5d\xfb\xe0\x4c\xfb\xec\xbd\x2c\xd0\x6b\xb3\x45\x70\xed\x36\x68\x8a\xee\x43\x51\x6c\x94\x19\xda\x51\x33\x23\xb9\x92\x26\x4d\xce\x98\xef\x7e\xd0\xbf\x19\x69\xfe\x59\xce\x26\x87\x3c\x38\x0f\x81\x4d\x51\xe4\x8f\xa4\x44\x91\x92\x37\x38\xbd\xc1\x6b\x40\xdb\x2d\x4a\x2e\x40\x26\xaf\x19\x5d\x91\x75\xc9\xb1\x24\x8c\x26\x7f\xe0\x02\x50\x55\x4d\x26\xa4\xd8\x30\x2e\xd1\x6c\x82\x10\x42\xd3\x55\x21\xa7\xe6\x93\xb8\xa7\xe9\x74\x62\x3e\xaf\x59\x82\x37\x8c\x83\x64\x09\x61\x2f\x20\x87\x02\xa8\xc4\xb9\xe1\xdc\x6e\x11\xc7\x74\x0d\x28\xb9\xd8\x40\x9a\x7c\xba\xdf\xc0\x39\x67\xb7\x24\x03\x2e\xd0\x71\x55\x19\x11\x0a\x05\xaa\xaa\x7a\x0a\xd0\x4c\x0f\xce\x27\x93\xed\x16\x1d\xe5\x58\x82\x90\x9f\x81\x0b\xc2\x28\x5a\x9e\x58\x61\xef\x34\xf9\x95\x94\x9c\x5c\x95\x12\x84\x63\x50\xc0\x6b\xbd\x47\x64\x81\x8e\x80\x96\x85\x9a\x77\x55\x92\x3c\x3b\xa5\x65\x21\x8c\x88\xb6\xe8\xaa\x9a\xbc\x78\xa1\x00\xe8\x19\x1a\x2d\xaa\x2a\xc4\x61\xc3\x41\x00\x95\x02\xc9\x6b\x40\x1b\x26\x04\xb9\xca\x01\xdd\xe2\xbc\x04\x81\x56\x8c\x23\xec\x50\x68\x63\xcc\xf4\x1a\x99\x75\xe7\x34\x99\x48\x25\xb1\x23\x5f\x48\x4e\xe8\x7a\x32\x49\x19\x15\xce\xd9\xdb\xed\xb1\xb3\x80\xe2\x02\x16\xe8\x48\x6b\x53\x56\x98\xc9\x9f\x8d\x72\xeb\x42\x0b\x9b\x1a\x4d\x6d\xc4\x66\xaa\x62\x30\x9f\xaa\x2a\x71\xae\xae\xa7\x74\x50\x9d\x18\x53\xdc\x8c\x20\x38\x3a\x36\xcd\x67\xeb\x35\x13\x96\xf7\x2c\x83\x3c\x39\xa5\x92\xc8\x7b\x6b\xf9\x59\x06\xfa\x6b\x1b\x57\x4d\x67\x2b\xfd\x9d\x5d\x7d\x83\x54\x26\x93\x5b\xcc\xe3\xe4\x9d\xa0\x7a\xbd\x25\x35\x71\xab\x91\x2a\xd6\x25\xaa\x97\x97\x27\xea\x23\x08\xa9\x46\xab\x6a\xba\xd0\xac\xaf\xb1\x84\x35\xe3\xf7\xcb\x3e\x56\x56\xf2\xb4\x8e\xa0\xe1\x3f\xe7\xe4\x16\x4b\x25\xbd\xc5\x6e\x07\xaa\x6a\x31\xa9\x26\x7a\x11\x92\x15\xa2\x4c\x06\x4c\x67\xe2\x23\x63\xb2\x59\x6b\xfd\x56\x9e\xe7\x25\xc7\x39\xaa\xaa\x77\x44\x48\xdf\x6f\x18\xe5\x8a\xc2\x56\x11\x73\xeb\xf5\x16\xa3\xe3\xcb\xd7\x7f\x0e\x72\xda\x18\x7b\x71\x94\x25\xa7\x26\x88\xa4\x37\x88\x02\x11\xaa\xbf\x2a\xb4\xc9\x64\x55\xd2\x14\xcd\x58\x24\x96\x79\xad\x69\x36\xef\x8f\xb0\x8e\x83\x41\x31\x2c\xb3\x59\x28\x13\x83\xff\x35\xdb\x34\xd8\x31\xda\x30\x42\x25\x70\x24\x19\xc2\x28\x55\x63\x0a\x70\x1c\xc4\xfd\x4d\x52\xca\x7b\xcc\x59\x11\x7c\x95\x83\x70\x36\x69\x18\xcb\x13\x84\x37\x1b\xa0\xd9\x2c\x4e\xf8\xb6\x5a\x20\x96\x24\xc9\xdc\x77\xcb\xcf\x4a\x94\x35\xfc\x95\x96\x66\x85\x8a\x20\x4c\x92\xe9\xaf\x18\x51\xf8\x61\xb4\xdb\x38\x3e\x95\x1f\x0c\x96\x99\xd3\x9f\x24\x49\xbf\x4b\x76\xba\x8a\x95\xf2\x6f\x7a\x4a\x65\xee\xbf\x16\xca\x15\x4a\x90\x49\xb7\x0e\x97\xc9\x22\x4e\x4f\xad\x86\x95\x52\x4f\x48\x66\x63\xbb\x65\x6e\xe4\x57\xc1\x3a\x65\xa5\xb4\xe1\xd0\xfb\x2d\x65\xf4\x16\xb8\xf4\xa3\xa1\x57\x22\x1d\xb2\xfb\x61\xee\x56\xff\x87\x97\x9d\x46\x12\xfa\x73\x84\x73\x5b\xf9\x6e\x23\x12\x0a\xcf\x6f\xa3\x1e\x53\xbc\xe3\x3e\x79\x03\x2b\x5c\xe6\xf2\x03\xcf\x80\x07\xf9\x25\x33\x03\x88\xa9\x11\x42\xd7\x68\x45\x20\xcf\x84\x5b\xa6\x29\xa3\x12\xe8\x03\x1c\xe3\x2b\x9c\xcd\xd1\x97\xaf\xe6\x18\x6e\x25\x17\x47\x6e\x8c\x6b\x95\x34\x1f\x2c\xac\xa6\x0e\x69\x57\x15\xae\xcc\xa9\xcf\xa2\xf0\x34\x09\x8f\x55\xe3\x22\xe3\x12\x27\xc0\xf7\xc6\xad\xa5\xfd\x5d\xeb\xad\xec\xd9\x1c\x11\x2a\xfb\x12\x2a\xc8\xe4\xd5\xf9\xd9\x19\x5d\xb1\xc4\x2b\x8f\x4c\x69\xe5\x8e\xfd\x5d\xe7\x7e\xfb\xbc\x2f\x14\x8b\x82\x8e\xdb\xd3\xdc\x99\xbc\xfb\xd0\xb2\x05\x53\x99\x2a\xd4\xad\x58\x8c\xc7\x60\xbb\x45\x05\xbe\x01\xc5\xa4\xcb\xcd\x89\xaa\xb1\x9c\x29\xca\x7c\xad\xca\xcd\x50\x6e\xb9\xfc\x26\x18\x5d\x4e\x8f\xa7\xe8\x4a\x7f\xf8\x4b\x1b\x60\x43\x30\xbd\x34\xb3\x54\x2d\x9c\xbc\x2f\x25\xdc\xd9\xb0\xfd\x01\x3f\x76\x38\xc5\x1d\x40\x2a\xe5\x0e\xa7\x11\x85\x4b\x87\x75\x87\xc0\xd9\x7c\x5c\x48\x2b\xba\x3f\x8f\xf1\x36\xcb\xdc\x77\xc6\x72\x64\x49\x2c\xba\x1b\xc3\x55\xac\xba\x9e\x55\x91\x62\xbc\xa9\xda\xeb\x18\x9d\x51\x22\x09\xce\xc9\x7f\x55\x2b\x30\xb2\x65\x4c\x15\x25\xae\x59\x99\x67\x7f\x72\x12\x4c\x44\x47\xb6\x8e\xd7\x55\x6c\x4b\xc8\x51\x72\x5e\x5e\xe5\x24\x55\x96\x28\xd3\x9a\x62\x57\xdb\x13\xc0\xab\xaa\x45\xb8\x07\x87\x77\x65\x6f\x11\x34\x54\xc9\xba\x6d\x39\x1a\xa0\x47\x2a\x77\x50\xa7\xde\x71\x09\xbc\x95\x51\x4d\x49\x1f\x20\xfd\x45\xa0\x92\x92\xef\xa5\x2b\xe7\xd4\x9c\x3d\xd1\xab\x29\xb3\x39\x0a\xb3\xa8\x09\x9e\x99\xeb\xa1\x71\xf1\x75\xa7\x40\x52\x2b\x68\x98\x54\x4f\xaa\x0e\x48\xc8\xdc\x66\x70\x7d\x11\xe4\x02\xda\x22\xa6\xd3\x66\xd8\xc4\xcc\xb8\xe0\x02\xa4\xa7\x57\x80\x7c\x1a\x17\x04\x6a\x66\x24\xb3\x6e\x98\x47\xfa\x21\xce\x01\xe8\x04\x91\xac\xdf\xcc\xbe\xa3\xe2\x1a\xf3\x2c\x65\x19\x64\xed\x43\x43\x67\xb1\x68\xd3\x1e\x7e\x52\x8c\x9d\xea\xae\x89\x19\x38\xdd\xa3\xd0\x69\x78\xcf\xfc\x18\xf7\x03\x6f\x0c\x78\x03\x22\xe5\x64\x23\x9b\x0b\x87\x37\x2c\x0d\x2b\x1e\x96\x96\x3a\x07\x68\x1e\x55\x6d\x35\xab\x34\x36\x6a\x6f\x58\xda\xb3\x19\x8f\x15\x18\xf8\x3e\x88\x67\xfa\x85\xb2\x8c\xa5\x5f\xa7\xed\xed\xa5\xc9\x17\xe6\x9e\x22\xd8\x86\x21\xdb\xa5\xf2\x80\x48\xff\x8d\xd3\x1b\x49\xd2\x1b\x31\x62\xf8\x65\x77\x21\x7b\x95\x85\xb6\x32\x66\xdf\x69\x48\x1d\x4b\x2d\x9c\x55\x21\x93\x8b\x0d\x27\x54\xae\x66\xd3\x7f\xfd\x24\x96\x3f\x89\xdf\xa6\xaa\x01\x68\xf2\xad\x8e\x62\x43\x32\x49\x6c\x3e\xf1\xaf\x90\x76\xd5\x16\xa6\xb4\xa8\xcf\xa8\xb7\x40\x81\x63\x09\x6f\x41\xaa\xe6\x32\x69\x9f\x43\x2a\xe2\x6f\x41\x2a\xbb\x3a\x1b\xdc\x5f\x05\xbd\x0c\x76\x07\x73\x48\x81\xdc\xb6\xf3\xd3\xd1\x88\xa3\x06\x34\xce\xe6\xa1\x1e\x77\xf9\x13\xfa\xd1\xa4\xa7\x4e\x3e\x0e\x8a\xc1\x3e\x17\x5c\x8c\xb8\xe0\x62\xc0\x05\x75\x8a\x5e\x93\x5b\xa0\x8f\xec\x85\x01\xa5\x33\x6f\x3b\xf7\xfa\xa3\xce\xe3\xfd\x9e\x40\x27\xc8\x93\x10\xac\xe4\xf0\x92\xec\x33\xce\x49\x86\xa5\x3e\x7f\x48\x06\xc6\xd0\xb4\xe4\x1c\xa8\x44\x84\xae\x18\x2f\xcc\xa6\x17\x92\x71\xc8\x54\xc6\x35\xed\xb9\x29\x54\x4a\x0e\xf1\x69\xdb\xaa\x52\x25\x05\xe7\x8c\x3b\x0b\xf4\x17\x11\x36\x7a\xa7\x9a\xb6\x75\x5b\xf9\x7b\x49\x38\x64\xa7\x63\x8c\x7d\x97\xbb\xa3\x3b\xa4\x39\x04\xf5\x7d\xd8\x27\x8e\xa9\x20\xca\xea\x60\x2c\x39\xbd\xdb\x30\x01\x4d\x49\x6e\xc9\x1f\x2d\xa6\x90\x5b\x25\x32\x1d\xa0\xa9\xd9\xfd\x53\x37\xac\xc6\x38\x0f\xa1\x3b\x7f\x38\x51\x36\x73\x84\x99\x7c\x20\xbe\xf3\x5f\xb5\xbc\x7f\x9c\x20\x4a\x72\xaf\xcf\x6d\xb9\xaa\x6e\x79\x43\xfa\x42\x4d\x76\xcd\x6f\x78\x4c\xf4\x1a\x23\x49\x01\x7b\x99\xf2\x89\x14\xf0\x1c\x0d\x81\x3b\x09\x9c\xe2\x7c\x2f\x63\x4e\xed\xa4\xe7\x68\x10\xa1\x12\xd6\xc0\xf7\xb2\xe7\x8c\xca\xe7\x68\xca\x2a\x67\x58\xee\x65\xc8\xef\x6a\xc6\x33\x31\xa5\x6b\x59\xf2\x2a\xcf\xd9\x0f\xc8\x5e\x5f\x33\x92\x36\xef\x22\x63\x86\x99\x0c\x70\x46\xf5\x0d\x59\xcb\x2e\x93\x50\x66\x03\xe6\x2d\x9a\x7a\x52\xcd\xfb\xc6\x08\xed\x00\xb8\x9c\x2e\xd0\xf4\x52\x49\xab\x16\xfa\x74\x78\x55\x4a\xb6\xb6\x07\x63\x36\xe2\x24\x68\x39\x07\xf6\x88\x6f\x03\x02\xf3\x28\x1f\x9c\x63\x75\x42\xd3\xb8\xb0\x2e\x74\x7d\xd7\xd6\x71\x69\xcc\xf3\x52\xf4\x53\x58\xb6\x96\x28\x79\x8f\xef\xde\x01\x5d\xcb\x6b\xf4\x32\xc6\xb6\xf7\xf8\x8e\x14\x65\x61\xa6\xc4\x5a\xa8\xa8\x8d\x1e\x45\x59\xe1\x5c\xc0\x93\x99\x44\xe8\x5e\x26\x11\xfa\x40\x93\x6a\x3d\x4f\x6f\x12\xbe\xd3\x6f\x93\xe8\x65\xf2\x72\xe8\xbc\x8e\xcf\x3e\x36\x88\x7b\x24\x9f\x3a\x86\x9f\xed\xcb\xe5\xe3\xd9\x6b\x1b\x9e\x58\xd0\xd1\xa9\x7f\xa1\x0a\xbd\x59\x0b\xf6\xfc\xb1\xe3\xb4\x6b\x21\x3e\x66\xd4\xcc\x3a\xdd\x3f\x6a\x0e\xc5\x13\x44\x2d\x12\xf3\x43\x82\xd6\xa0\x7e\xe2\xa0\xc5\x7f\x73\xe6\xe6\x40\x5b\xc7\xeb\x1c\xfd\x86\x5e\xd6\x90\x6c\x87\x17\xb2\xf8\x0f\x35\x56\x06\xf4\xcc\xad\x67\x43\x67\x96\xbb\x36\x20\xb9\xbb\x87\xdb\x40\x4a\x56\x24\xd5\xed\xcd\xef\x8c\xd7\xcd\x42\xd0\xf3\xd6\xd4\x80\xbd\xbe\x02\x31\x2d\x61\xf3\x5b\x0b\x7d\x9d\x7b\x03\xf7\xae\x29\xda\x75\x59\x30\x84\x61\xa6\x05\xb9\x2b\xbb\x66\x69\x0c\xc0\xd9\xd6\x9e\xb9\x5d\x20\x76\xa3\x96\xd3\x98\xe2\xa6\x2f\x7a\x8f\x37\x5f\x94\xaa\xaf\xbf\xaa\x69\x1d\x37\xde\xfa\x1e\x7c\xf1\x02\xfd\x09\x28\x55\xed\xb4\x6e\x99\x56\x84\x66\x88\xc8\x05\x12\x0c\xe5\x20\x7f\x11\x28\xbd\x86\xf4\x06\x31\xfb\xcc\xce\x7e\x00\x47\x29\x16\x80\x08\xcd\xe0\x0e\x32\x24\x36\x90\xa2\x02\x6f\x62\x2f\x8f\xdf\x29\x11\xaf\xb1\x80\x1e\xc0\xee\x1d\xb9\xd7\x21\x22\x88\xe1\xaa\xcc\x73\x2f\x46\x22\xe4\x2c\xf0\x26\x32\x5a\x03\xba\x66\x73\x25\xe3\x8b\x09\xd6\xd7\xd8\x58\x45\x98\x1f\x58\x3d\xd9\xfd\xa3\x96\x80\xbf\xf3\xd2\x85\x37\xfa\x9d\xab\x76\x83\x5a\xc2\x63\xd2\x76\xff\xe8\x25\xd4\x77\xb2\x8f\x17\xbc\xfb\xbf\x07\x34\xec\xde\xd3\x4b\x3d\x43\x41\x68\x5d\xeb\x04\xbf\xe6\x6a\x27\xcb\xe9\x72\xe7\xb6\xf2\xaf\x66\x8f\x07\x8b\x59\xf5\xe7\xd3\x97\xdd\x9a\x54\x95\xa4\x81\xac\xd6\xb3\x4e\x58\xa8\x2f\x07\x1a\x88\xe3\xaa\xda\xab\xc8\x6f\x4e\x9a\x7a\x5a\x55\xa7\xe3\x45\xd7\xb6\x56\x37\xd0\xa0\xf3\x07\x96\xbd\x9d\xc3\xa8\x75\x4e\x41\xef\xeb\x89\xfa\x0b\x06\x96\x03\xe1\x8a\x53\xc1\x41\x47\xee\x03\xcd\xef\x03\x0d\x1e\xdd\x58\xd0\xe2\x8c\x92\x1e\x3c\x1d\x78\xe3\x3e\xdd\x48\x6f\x71\xee\x23\xdd\x9d\xdb\xfe\x15\xfe\xc0\x1d\xc6\x71\x17\x83\x9e\x5d\x2f\xa0\x96\x48\x85\xcc\x7f\xaa\xac\xbc\x25\x42\x49\x3e\xb0\x36\x34\x43\x88\x80\x96\xc5\x83\xb4\x0f\x5f\x84\xf6\x85\xdc\x73\xa4\x27\xe3\x01\x78\xdd\x5d\xdc\x7e\x88\x8f\xab\x6a\xda\x03\x61\x1a\x8d\x61\x6f\x75\xbb\x0c\x46\x43\xda\xba\x0b\x6a\x70\x8d\x6d\x38\xa4\xed\x0d\xde\x50\xdd\xea\xf5\xb8\x22\xd7\x6e\xf0\x82\xd4\x08\xae\xc9\xcb\x9e\x97\x98\xd6\xf3\x4b\x94\x26\xef\x3a\xd6\x0d\x59\x92\xc1\xde\x8c\x47\x89\xfb\x9d\xe4\x12\x38\xbe\xca\x83\x2d\xd7\x50\x8d\xd0\x80\x2b\x4e\x2e\xe3\x40\xd6\xf4\x3f\x10\xa4\xa1\x86\x6a\xe5\xfa\x5c\xb1\x72\x0b\x2c\x5b\x32\x0b\x2c\x6d\xd6\xac\x87\xe3\xd2\xa5\x7d\x10\xf2\x46\x0c\xc5\xa0\xab\x47\xa3\x64\x79\x6f\xc8\xde\x68\x43\x35\x32\x03\xae\x38\xb9\xaa\x76\x0c\x44\x2a\x82\x95\x66\xc7\xa2\x04\xf9\x77\x28\xf5\x60\x4d\x5c\x76\xef\x59\x22\x85\x76\x12\xb6\xa3\x2d\x3b\x6d\x7f\x94\x44\xef\x5e\xa4\x11\xe9\x88\xcb\xee\xdd\x49\xa4\xd0\x2e\x4c\x4b\x5b\x76\xfa\xdc\x18\x89\xed\x33\xdc\x3b\xba\xf7\x3a\xb1\xf5\x11\xd9\xde\x7f\x35\xd1\x60\xf3\x79\xa2\x84\x9e\x73\x52\x60\x7e\xdf\xda\x7d\x0d\xd5\x88\x0d\xb8\xa2\xe4\x7e\x04\x9c\xb5\x4b\x0b\x47\x5b\xda\x3b\xc7\x9a\x23\x52\x62\xf8\x8c\x64\x24\x1a\xda\xb2\x7d\x8b\x19\x25\xf1\xa2\xb3\xa7\x2f\xbc\x3d\x7d\xb1\xd7\x9e\xbe\x30\x6f\x7e\xbe\x2c\x4d\xb1\xb2\xdc\x68\x9c\xac\xf2\xca\x3e\x5d\x36\xc2\x0c\xc9\xfd\xc8\xbd\x66\x88\x5b\x39\x9d\x07\x3b\xf5\x57\x13\x0d\x44\x9f\x27\x4e\x68\x0b\xa2\x87\x6f\x27\x38\xab\xa1\x45\xed\xfc\x30\x66\xff\x86\xf7\xff\xd0\xca\x0d\x28\x7e\xde\x3d\x9d\xb9\x61\x48\x0e\x0d\xdd\xa1\xa1\x3b\x34\x74\x87\x86\xee\xd0\xd0\x35\xe0\x0e\x0d\xdd\xa1\xa1\xd3\x7f\x87\x86\xee\xd0\xd0\x1d\x1a\xba\x43\x43\x77\x68\xe8\xac\xbc\xc7\x6d\xe8\xfe\x17\x00\x00\xff\xff\x72\x98\x27\xc6\xb6\x40\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16566, mode: os.FileMode(420), modTime: time.Unix(1531374609, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533194178, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


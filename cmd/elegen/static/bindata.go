// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4d\x6b\xe4\x38\x13\xbe\xfb\x57\xd4\x1b\xc2\x8b\x0d\x1d\xe7\xb2\xec\x21\x4b\x0e\x61\x98\x81\x86\xcd\x10\x12\xd8\x4b\x93\x83\xc6\x5d\x76\xc4\xca\x92\x91\xe4\xcc\x34\x46\xff\x7d\x91\x2c\x7f\xc8\xed\xfe\x4a\x32\x3d\x30\xb9\xa4\xdb\xd2\x53\x1f\x4f\xa9\x1e\x95\xbb\x22\xd9\xbf\xa4\x40\x68\x1a\x48\x9f\x50\xa7\x9f\x04\xcf\x69\x51\x4b\xa2\xa9\xe0\xe9\x57\x52\x22\x18\x13\x45\xb4\xac\x84\xd4\x70\x51\x88\x94\x54\x42\xa2\x16\x29\x15\xd7\xc8\xb0\x44\xae\x09\xbb\x88\xa2\x57\x22\x21\x8e\x00\x00\xe8\x1a\xb9\xa6\x7a\x63\xc1\xea\x9e\x54\x70\x0b\x25\xa9\x56\x4a\x4b\xca\x8b\xe7\x1e\x93\x2e\xfd\x3e\x68\x1c\xcc\xfe\x35\xcd\x15\x48\xc2\x0b\x6c\x83\x79\xaa\x30\xa3\x39\xcd\x5c\x30\xca\x06\x32\x6c\x04\x9a\x83\x7a\x11\x35\x5b\x3f\x62\x41\x95\x46\x19\xec\x86\x14\x2e\xd3\x87\xfa\x1b\xa3\xd9\xbd\x58\x63\x88\xbd\x82\xcb\x21\x44\xb8\xb9\x85\xd4\xee\x61\xe9\xe7\xe1\xe1\xd5\x08\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x31\x8c\xcd\x18\xd3\x25\xb4\x08\x5c\x21\x5f\x4f\xbd\x8f\x1e\x99\x28\xe0\x2c\x23\x1a\x0b\x21\xe9\x6f\x48\x9c\xa8\x65\x86\x3f\x85\x3c\xc2\x28\x51\x3f\x91\xb1\xab\x33\x52\xd6\x34\x3e\xaa\x4b\xba\x80\x4b\x97\xd9\x08\x74\xd7\x66\x0a\x21\xc7\xdd\xbe\x8f\x23\x76\xcf\x41\xe5\x6b\xfc\x31\xc3\xf5\xea\x79\xf5\xdc\x7e\x3c\x3b\xc7\x96\x81\x49\x7f\xf6\x54\xd0\x1c\x18\x72\x48\x97\x6d\xd8\x60\xcc\x6c\xa0\x61\xb0\x8e\xfa\x4c\x94\x95\xa8\xf9\xda\xb1\x3f\xc0\x03\x48\x67\xa9\x19\x83\x7b\xa0\x31\x2e\x32\xfb\x7f\x31\x90\x09\x66\x6f\x21\xcc\xa2\x69\x00\x99\xb2\x29\x70\xca\x16\x6f\xac\x55\x12\x45\xd7\xd7\xe0\x48\xf9\x07\xa5\xb2\x04\x4a\xd4\xb5\xe4\x0a\xf4\x0b\x42\x56\x4b\x89\x5c\xc3\xab\x5f\x13\xb9\x7b\x5c\x3a\x12\xa3\xbc\xe6\x59\x80\x8d\x13\xc8\x99\x20\xfa\xcf\x3f\xa0\xf1\x76\xfa\x0b\xe3\xee\x61\xb9\xe4\xb9\x48\x3b\x37\x36\xc3\x28\xd2\x9b\xca\x9b\xbb\x27\x9c\x14\x28\x41\x69\x59\x67\xba\x31\x91\x33\x1f\xe7\xc1\x6a\x02\xdd\x29\xfd\x22\x45\x69\x2b\x18\x73\x5b\xc6\x96\xde\x04\x66\x3b\xd9\xa5\xea\xa3\x99\xde\x39\x2b\x0b\x7f\x8e\x8e\xf1\xf6\xa9\x95\xdc\x4d\xec\xb5\x77\x73\xba\xd7\x40\xb5\x57\x9d\x9d\xe3\xdc\xbb\x96\x8e\xdb\x06\x3e\xda\xf1\xa0\x78\x2b\xf7\xf1\x48\x57\x7c\x13\x13\x3e\xe4\x17\xd3\x19\x4f\x49\xe7\x8a\xe6\x40\xe1\x16\xf2\x74\xab\x34\x84\x6f\x92\xbf\xe0\x7f\x34\x5d\xaa\xcf\x65\xa5\x37\x71\x32\x6a\xa5\x8e\x9a\x40\x34\xe6\x4c\xf5\xbc\x9f\x6c\xce\x3f\x0b\xcd\x79\x1e\xf9\x26\x39\xc0\x45\x4e\xc9\x37\x86\x71\x57\xbb\x59\x0a\xa6\xcf\x5a\x4c\xc7\x8c\xfa\x4e\x75\xf6\xd2\x57\xdf\x47\xdb\x2b\xf7\x1e\xad\x7b\xb3\xce\x65\x44\xb5\x33\xda\xd6\xe5\x31\x08\xfc\xcd\x94\xb4\xaf\xf8\x7d\x07\x24\x4e\xa2\x19\xd9\x98\x7c\x5d\x63\x4e\x6a\xa6\xb7\xcc\x72\xca\x7c\x35\x76\x11\xfd\x54\x11\xa9\xf0\x2d\x74\x6f\x23\x7f\x21\xe9\x1e\xc8\x85\xee\x48\x5c\xaa\x47\x21\xf4\x7b\x8b\xd2\x26\xf9\x9e\xd2\x7c\x58\xa5\xfc\xc5\xb6\xbf\x3c\xc1\x95\x19\xe8\x5f\x3f\x0c\xac\x3a\x03\xee\x95\xe1\x90\x1c\xb5\x95\xb5\x5d\xfb\xe4\xcc\x06\xaa\xb4\xbf\xf7\x26\xbd\xef\x4f\xd7\x44\x0a\x5a\x9d\x4b\x8e\x53\x82\x03\xc9\xcf\x87\xa3\x3e\xec\x58\xee\x3c\x5d\xe7\xd5\x8a\xff\xcf\x01\x1e\x58\x2d\x09\x03\x63\xfe\xa6\xca\x5e\xdd\x67\x3c\x98\xdb\x42\x70\x74\x9d\x66\xa0\xbf\x5d\xb5\x76\x4b\xc8\x2f\xac\x59\x40\xf9\x49\xdd\xad\xf6\xb6\xb7\x3a\xb9\xbf\x1f\x91\xb5\xe5\x7b\xa1\x95\x8a\xc7\x5e\x83\x95\xb6\x4e\x72\x3a\x5d\xc9\xb9\x3d\xd6\xd7\x2b\x91\x50\xfa\x79\xf6\x36\x70\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x22\xb8\x1f\xc1\xba\x59\xbb\xfd\x16\x04\x3a\xde\x36\x4c\xdd\x9d\x77\x13\x39\x7f\x77\x8c\x79\x62\x28\xaa\xde\x2b\x61\x0c\xf0\x07\x55\xda\x2a\x36\xed\xd7\xbd\xb3\x00\x13\x5b\x75\x3f\x38\x6e\xce\x6d\x39\xff\x9b\xf4\xde\x16\x39\xed\x67\x03\xe3\xd9\x73\x53\xf4\x17\x21\xfb\xbc\xc7\x14\xda\xe2\xf9\x41\x1b\x72\x21\xdd\xf7\x82\xbe\xe2\x30\xf7\xf7\x8c\x4e\xed\x1c\xba\x4f\xc3\xdb\x74\x97\x2a\x1d\x41\xeb\x79\x65\x67\xfc\xbe\xfb\xae\x9f\x29\xf6\xbf\x02\x1f\x21\x52\xe1\x9b\x80\x95\x26\x13\xfd\x17\x00\x00\xff\xff\x11\x03\x2d\x1e\xcb\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5323, mode: os.FileMode(420), modTime: time.Unix(1554955843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x6b\x73\xdc\x36\x92\x9f\x3d\xbf\x02\x99\x52\xbc\x33\xde\x11\xe5\xcf\x93\xd5\x56\xf9\x1c\x27\xa5\x3a\x3b\x51\x45\xbe\xec\x07\x97\x6b\x0d\x91\xcd\x11\x62\x0e\x40\x03\xa0\x6c\xdd\xd4\xfc\xf7\x2b\x3c\x48\x00\x7c\x0c\x41\x3d\x7c\xba\x3a\xf9\x43\x32\xc2\xa3\xd1\x2f\x34\xba\x1b\x60\x97\x38\xfd\x8c\x37\x80\x76\x3b\x94\x5c\x80\x4c\x5e\x33\x9a\x93\x4d\xc5\xb1\x24\x8c\x26\xbf\xe1\x2d\xa0\xfd\x7e\x36\x23\xdb\x92\x71\x89\x16\x33\x84\x10\x9a\xe7\x5b\x39\x37\xbf\x36\x2c\xc1\x25\xe3\x20\x59\x42\xd8\x09\x14\xb0\x05\x2a\x71\x51\xf7\x12\x79\x55\x5d\x26\x29\xdb\x9e\x6c\x89\x4c\xaf\xa0\x28\xae\x4e\x52\x56\xde\x08\xc9\xab\x54\x56\x1c\xcc\xc0\xdd\xee\x18\x71\x4c\x37\x80\x92\x8b\x12\xd2\xe4\xfd\x4d\x09\xe7\x9c\x5d\x93\x0c\xb8\x50\xeb\x6b\x68\x0a\x45\xb4\xdf\xbb\x29\x40\x33\x74\x6c\x7b\xdb\x20\xfe\xc4\x05\xc9\x34\x11\x91\x80\xf6\xfb\xd9\x72\x36\xdb\xed\xd0\x51\x81\x25\x08\xf9\x27\x70\x41\x18\x45\xeb\x53\x0b\xf1\xad\x6e\x7e\x25\x25\x27\x97\x95\x04\x51\x0f\x50\xec\xd9\xed\xec\xe2\x47\x64\x85\x8e\x80\x56\x5b\x35\xef\xb2\x22\x45\xf6\x86\x56\x5b\x61\x40\xb4\x41\xef\xf7\xb3\x93\x13\xc5\x79\x3d\x43\x53\x8d\xf6\x7b\xc4\xa1\xe4\x20\x80\x4a\x81\xe4\x15\xa0\x92\x09\x41\x2e\x0b\x40\xd7\xb8\xa8\x40\xa0\x9c\x71\x84\x6b\x2c\x34\x31\x66\x7a\x83\x99\x15\xda\x3c\x99\x49\x05\xb1\x03\x5f\x48\x4e\xe8\x66\x36\x4b\x19\x15\xb5\x48\x1d\xfb\x8e\x28\xde\xc2\x0a\x1d\xe9\xd5\x14\x15\x66\xf2\x9f\x66\x71\xcb\x42\x8b\x36\x35\x2b\xb5\x31\x36\x53\xd5\x00\xf3\x6b\xbf\x4f\xec\x22\x6e\x4a\x07\xab\x53\x43\x4a\x3d\xa3\x16\x8e\x93\x8d\xfb\x3d\x53\xd8\x92\x1c\x51\x26\xad\x6c\xde\xb1\x0c\x8a\xe4\x67\x90\x38\xbd\x82\xcc\x31\xd6\xef\x7d\x43\x25\x91\x37\x96\x39\x67\x19\xe8\x3f\xdb\xa8\x37\xed\x2c\xd7\x7f\xb3\xcb\xbf\x20\x95\xc9\xec\x1a\xf3\x38\x78\xa7\xa8\xd9\x04\x49\xd3\xb8\xd3\xc4\xa8\xa1\x6b\xd4\x68\xa0\x07\xea\x0f\x10\x52\xf5\xee\xf7\xf3\x95\x1e\xfa\x1a\x4b\xd8\x30\x7e\xb3\xee\x1b\xca\x2a\x9e\x36\x42\x36\xe3\xcf\xcd\x2e\x5e\x77\x41\xdb\x1e\x37\x92\x93\x6b\x2c\xd5\xc8\xf6\x40\xd3\xb1\xdf\xaf\x66\xfb\x89\xbc\xde\xed\xfa\x46\x9c\x89\x3f\x18\x93\x63\xb2\x38\x2f\x2a\x8e\x0b\xb4\xdf\xbf\x25\x42\xfa\xd2\xc0\xa8\x50\x2d\x2c\x8f\x98\xdb\x28\x7a\xcc\x1a\x1f\x3e\xbe\x18\x1c\xa9\x08\x3e\x39\x41\x9e\x76\xc8\x8a\x53\xa3\x1a\xa4\x57\x35\x04\x22\x54\xff\xa9\xb0\x4d\x66\x79\x45\x53\xb4\x60\x91\xb8\x2c\x9b\x95\x16\xcb\x7e\xbd\xd1\x32\x33\x58\x0c\xc3\x74\xea\x37\x33\xf8\xbf\x66\xa5\xc3\x1d\xa3\x92\x11\x2a\x81\x23\xc9\x10\x46\xca\xfc\x6a\x84\xe3\x50\x9c\x4e\x92\x5a\xbc\x87\x9c\x9c\xe0\xcb\x02\x44\x4d\x93\x46\x63\x7d\x8a\x70\x59\x02\xcd\x16\x71\xc0\x77\xfb\x15\x62\x49\x92\x2c\x7d\xb6\x3c\x57\xa0\x2c\xe1\xaf\x34\x34\x0b\x54\x04\x62\x92\x4c\xff\x89\x11\x85\xaf\x66\x75\x2b\xc7\x87\xe2\x83\xc1\x65\x51\xaf\x9f\x24\x49\x3f\x4b\x46\x59\xc5\x2a\x79\x47\x4e\xa9\x23\xe3\xdf\x2b\xc5\x0a\x05\xc8\xd8\xf9\x1a\x2f\x63\x9b\xea\x75\x9a\x65\x58\x25\xf5\x84\x64\x71\x68\xb7\x2c\x0d\xfc\x7d\xa0\xa7\xac\x92\x56\x1c\x7a\xbf\xa5\x8c\x5e\x03\x97\xbe\x34\xb4\x26\xd2\x21\xba\x6f\xc7\x6e\xf5\xdf\x61\xb5\xd3\x98\x84\xfc\xdc\xe2\xcf\xb0\x38\x30\x7c\x85\x0a\xa0\x0b\xb6\x74\x2c\x24\x6a\xda\xcb\x9f\x10\x41\xff\xb0\x7d\x3f\x21\xf2\xf7\xbf\x87\x2c\xfc\x40\x3e\xa2\x53\xc4\x3e\x90\x8f\x07\x59\xf3\x33\xe4\xb8\x2a\xe4\xef\x3c\x03\x1e\x98\x99\xcc\x74\x20\xa6\x7a\x08\xdd\xa0\x9c\x40\x91\x89\x5a\x5b\x53\x46\x25\xd0\x5b\xf0\xc7\x5f\x70\xb1\x44\x1f\x3e\x1a\x37\xa0\x65\x63\xea\x66\x47\x52\xe3\xda\x98\x55\x7e\xb7\x68\x39\x3f\xa8\xed\xd5\xd4\x1e\x59\x73\xd0\x85\x47\x55\x78\xac\x1b\x16\x19\x96\xbc\x67\x17\x25\xe6\x02\x02\x76\x44\x1a\x75\xab\x64\x90\x29\xd5\x32\x60\x62\xf7\xf5\xc9\x09\xfa\xbd\x6b\xca\xd1\x57\x52\x14\x88\xd1\xe2\x46\xb3\x1c\xdb\xae\x0d\xb9\x06\x6a\x45\x92\xa0\xdf\x98\xf9\x89\xb6\x80\xa9\x40\x4a\x81\x38\xd8\x26\x01\xb7\x10\x52\xcd\x82\x85\x15\x7a\x92\x24\x46\x1e\xb1\x46\x42\x2b\xf5\x14\xfa\xef\xac\xe5\x49\x0b\x67\x65\x74\x92\xc5\x8b\x11\x1c\xd0\x7e\x7f\xd8\x74\xd4\xda\xe4\xeb\xc2\xb5\x6d\xbb\xeb\x56\xb0\xb0\x17\x4b\x44\xa8\xec\x3b\x64\x41\x26\xaf\xce\xcf\xce\x68\xce\x12\xcf\x57\x37\x7e\xbe\x55\x5c\x2f\x6c\x18\xf3\x35\xdb\x3e\xe6\x56\x0d\x51\x44\xe0\xf6\xb4\xda\x0f\x1c\x77\x69\xac\x1f\x5f\xa5\x0a\xff\xd6\x16\x3d\xbc\x35\x77\x3b\x1d\x3d\xbc\x67\xbf\x68\x35\x3d\x52\xd4\xa2\x1c\x17\x02\x74\x50\x14\x10\xa6\xf8\xa2\x57\xae\x01\x28\x7e\x7d\xfa\x4b\x30\xba\x9e\x1f\xcf\xd1\x56\x6c\x54\xf8\xa8\x7f\x5f\xea\xc6\x7f\x6b\xda\xac\x9c\xe6\x9f\xac\x2c\x7f\x83\xaf\x23\xfc\xa9\x3d\x15\x75\x36\x0f\x9f\x37\x0a\x27\x2d\xeb\x11\x80\x8b\xe5\x61\x20\x2d\x91\x3f\x3f\x34\xd6\x69\xbd\xcf\x88\xf5\x01\x3d\x59\xcd\x3c\x3b\x77\xec\xc7\x85\x8a\xef\x6a\x73\x09\xc6\xbd\x38\x12\x2d\x46\xc4\xb6\x0c\x4c\xaa\xf5\xc7\xc5\x15\xab\x8a\xec\x5f\x9c\x48\x38\xa3\x44\x12\x5c\x90\xff\x06\xae\xc4\xa9\x03\x4d\xb5\x94\x31\xbc\x2d\x15\x38\x4a\xce\xab\xcb\x82\xa4\x8a\x1a\xd4\x02\x7b\x44\x28\xd1\x56\xe4\x6b\x0f\x58\x90\x01\xf0\xf6\x5c\x92\xdb\xe9\x41\x7b\x5f\xdb\xb1\x6f\xfb\xe3\x9a\xec\xde\x8b\x09\xfa\x7a\x5d\xf7\xa1\xa8\xae\x36\x1c\x07\xb5\xe5\x9e\x9c\x74\x14\x78\xe9\xfe\x2e\x9b\x42\x58\x4e\x5a\xee\x82\x89\x97\x03\xba\xfe\x26\x50\x45\xc9\x97\xaa\x0e\x59\xd4\x9c\x89\xb4\xaa\x29\x8b\x25\x0a\x5d\x04\x13\xe6\x99\xb9\x1e\x36\xb5\x72\xd6\x26\x3c\x69\x16\x70\x83\x92\xd7\xf5\xf9\x5c\xef\xe3\x46\xca\xca\xf0\xb4\x40\xcc\x3b\x99\x99\xdb\x30\xec\x02\xa4\x87\xa5\x00\xf9\x30\x0c\x0b\x96\x59\x90\x0c\xd5\x07\x76\x1c\xd7\xe2\xd8\x85\x4e\x11\xc9\xee\x83\x29\x7d\xc7\xea\x15\xe6\x59\xca\x32\xc8\xda\x07\xac\x36\xe6\xd1\x8c\xb8\xf5\xa9\x3a\x9d\x8a\x41\xe7\xb9\x4e\x19\x0c\x38\xd1\x51\xb4\x68\x62\x1e\xb7\xb7\x3c\x91\x63\xbe\x0a\xd6\xbd\x22\xe5\xa4\x94\x2e\x0b\xf9\x33\x4b\xc3\x30\x84\xa5\x95\xb6\x74\x7a\x8c\xf2\x0b\xdd\x7e\x89\xd5\x88\x9f\x59\xda\x31\x22\x96\x73\x9f\x14\x51\x22\xfd\x0f\x9c\x7e\x96\x24\xfd\x2c\x0e\x60\xf7\x29\xc8\x47\x4d\x24\x3d\x76\x13\x6b\x1c\x87\x90\xcd\xb7\x32\xb9\x28\x39\xa1\x32\x5f\xcc\xff\xf1\xa3\x58\xff\x28\xfe\x39\x57\xf1\xb5\x3b\x18\xb4\xd8\x5c\x93\xb1\x9f\xcb\x8e\xa8\x22\xfd\xb4\x46\x66\xe6\x94\xff\x15\x28\x70\x2c\xe1\x57\x90\x12\x38\x4a\x3a\x87\xf8\xc9\x09\xfa\x15\xa4\x22\xb1\x63\x38\xda\xb1\x54\x67\x80\xdd\xeb\x1c\x52\x20\xd7\x6d\xbb\x77\x74\x80\x67\x03\x2b\x2e\x96\xe1\x3a\x75\x7e\x37\x64\xa9\x31\x7b\x9d\x53\xa1\xe5\x62\x77\x59\x70\x71\x80\x05\x17\x03\x2c\x68\x4c\x7f\xc9\x59\x09\x5c\x1d\xd9\x11\x8c\x40\x95\x50\x9a\xe0\x82\x3e\x7d\x70\xc4\xb3\x67\x00\x9b\x85\xb7\xc7\x7b\x19\xd5\x1c\x1c\xfd\x2c\x42\xa7\xc8\x83\xd0\xda\x1a\xed\x9d\x81\x69\x86\x16\x43\xdb\x63\xd9\xed\x32\x29\xdb\xa5\xe5\x67\x6f\x3c\x2e\x4c\x53\xff\x49\xa1\x26\x5d\xd5\xe3\x21\xab\xb3\x3d\xf7\x1a\x4a\x8f\xec\xe4\xa8\x08\xda\x0c\xf1\xe3\xe8\x9a\xe9\x24\xd7\x31\xaf\x99\xbc\x44\xa7\xa7\xe8\xa5\x17\xf8\x9e\x9c\x20\xca\x0a\x42\xe5\x1a\x6d\x98\xb9\x12\x13\x4d\x67\x1d\x4d\x8c\x47\xbe\x1e\x44\xd4\x73\x75\x75\xd0\x2e\x84\x13\xbb\xfa\xb1\x46\xcf\xfb\x15\x67\xd5\x59\xb3\xe5\x73\xef\xfd\x78\x5c\x94\x2a\x0e\x88\xa2\x65\xef\xa7\x18\x73\x97\x60\xb4\x02\x70\xb4\x8a\xaf\x44\xa6\x57\x28\xbf\x2f\xf2\x53\x2c\x20\x3c\x33\xd7\x41\xbf\xa1\xa3\xcb\x0c\xbd\x89\x9e\x2f\xfa\xd9\xb4\x9c\xc4\x26\x2b\x73\x51\xda\x48\xf7\x1c\x2b\x0a\x71\x59\x16\x26\xc7\x4e\x19\x45\x94\x14\xce\xe9\xc4\x28\x22\x33\x52\xe7\xaa\x27\x86\x29\x7a\xf1\x85\xdd\xa0\x87\x94\xdd\xf3\x4d\x8f\x4d\x34\x27\xdc\x35\xe7\x28\xfb\xeb\x68\xcf\xcc\xb3\x8d\x24\x47\x3f\x98\x95\xfd\x43\xf1\x4c\xbc\xf9\x52\xe1\x62\xe1\x9f\x94\x4b\x4f\xfc\x25\xa6\x24\x5d\xcc\x53\x4c\x95\x25\x2a\x35\xf3\x72\xce\xb6\x08\x23\x43\xc5\x57\x22\xaf\x50\x46\xf2\x1c\x38\x50\xd9\x5c\xc1\xcc\x83\xdc\x91\x60\x3a\xa8\x36\xab\xc7\x65\x9e\xda\x77\x9e\x6d\x5a\xc4\x80\xf1\xfd\xe1\x54\x8b\xd3\x4b\x85\x0d\x19\xe9\x17\x03\x20\x66\x8d\x0e\x85\xba\x35\xe8\xd7\x6b\x77\x17\xca\xd6\x95\x4e\x06\x50\x9a\x5b\x0c\x32\x72\x8b\xa1\x6f\x5f\x63\x1d\x36\xbb\x50\x6c\x02\x85\xe4\x88\x29\x1b\x69\x78\xf2\xec\x99\xdd\x0e\x94\x14\xb3\x67\xfb\xd9\xec\x99\x4d\x4a\x1e\x4e\xb0\xec\x67\xcf\x58\x52\xaf\x7c\x46\x25\x5b\xb0\x4a\x2e\x67\xb3\x67\x3d\x39\x73\x37\x48\x11\x4f\x40\x84\x47\x36\xa1\x76\xe7\x98\xb3\xe5\x20\x0d\x93\x99\x52\xa3\x36\x36\x7e\x37\x9b\x3d\x93\x98\x6f\x40\xae\x10\x70\x9d\xf0\x09\x9e\x3c\x24\x9a\xc3\x6c\x39\x7b\x46\x72\x3d\xe0\x07\xc7\x40\xb3\x21\x02\x7f\xf3\xbf\xa8\x3e\x9f\x24\xd3\x32\xd7\x22\x3f\xb4\xfe\x1a\xfd\x28\xe6\x7a\xe1\xe5\xd2\x08\xe1\x85\xb9\xd7\x79\x61\x70\x3a\x74\x9f\xa3\xb7\x86\x4d\xbf\x9a\xe7\x13\x3a\x5c\x26\x99\xe5\x73\x5a\x71\xb3\x0d\x69\xce\xf8\xd6\x44\x06\x42\x32\x0e\x99\xe3\xbc\x23\x33\x3a\x6e\xb4\x4b\x2d\x96\x0a\x6b\xc6\x6b\xe5\xd2\x7f\x68\xc3\xe4\x6c\xd9\x1b\xdd\xb6\xab\xb3\x05\x5f\x2a\xc2\x21\x7b\x73\x68\x60\x1d\x83\x4f\x3a\x61\xbc\x0b\xed\xf7\x1c\x53\x41\x14\xd5\x41\x5f\xf2\xe6\x5b\xc9\x04\xb8\x34\xa9\x6d\xfe\xc3\xe2\x14\x8e\x86\x2f\xc8\xbc\x73\x98\x1b\x5f\x64\xee\x99\x1a\xab\x22\x0e\xf5\x9a\x1f\x35\x28\x1b\x9b\x84\xc1\xe1\x80\xe1\x59\xfe\x14\x6a\x94\xf3\x4d\x02\x56\x9d\xb6\x1a\x12\x7b\x57\xa9\xb4\xc6\x19\x28\x2f\xf0\xf4\x68\x61\x1c\x2d\x1c\x3d\x40\xab\xed\x7c\x79\x77\x72\x0c\x5f\x86\xce\xe4\xef\x40\x96\x23\x49\x92\x2d\x4c\x12\xd0\x7b\xb2\x85\xc7\x2a\x9e\x6f\x12\x38\xc5\xc5\x7c\xe9\xb7\x16\x44\xc8\xf9\x72\x02\x85\x6f\x2c\x98\x47\x43\xa5\xa3\x85\x50\x09\x1b\xe0\x93\x04\x76\x46\xe5\x23\xa4\x24\x2f\x18\x96\x93\xe8\xf8\x45\xcd\x78\x1c\x94\x1c\x22\x8c\x43\xee\x93\x15\xeb\x5a\x39\x0e\xf4\xcf\x48\xdc\xc1\x31\x40\x9c\x77\x8a\x9c\xda\x1f\x1d\x82\x7c\x97\x3e\x72\x53\x71\xc8\xdf\xea\x1d\xd4\x6a\x7c\x87\x4b\x67\x0a\x6d\x3c\x24\xaa\x4b\xef\xc9\x45\x3f\xe5\x01\xc9\x6a\xc2\x69\x1f\x21\x2a\x74\x26\xb4\x82\x16\xd6\x21\xa7\x44\x75\xf9\x1d\xd9\x92\xbc\x2a\x0a\xf6\x15\xb2\xd7\x57\x8c\xa4\x20\x62\x54\xd7\x58\xff\x33\xaa\x5f\x6b\x4c\x3a\x03\x56\x2e\xdb\xaa\xe6\xfd\xc5\x08\xed\x20\xf0\x69\xbe\x42\xf3\x4f\x0a\xda\x7e\xa5\xbd\xa4\x57\x95\x64\x1b\x9b\x3a\xca\x0e\x6c\x83\x31\x76\x44\x31\x01\xf3\x28\x16\x9c\x63\xa9\xac\x69\xdc\xbe\x5d\xe9\x4c\x69\x7b\x8d\x4f\x3d\xcd\xef\x40\x08\xbc\x01\xd3\xab\x3a\x3d\x57\xe4\x01\xc8\xde\x48\x94\xbc\xc3\xdf\xde\x02\xdd\xc8\x2b\xf4\x32\x86\xf0\x77\xf8\x1b\xd9\x56\x5b\x33\x25\x96\x7c\xd5\xea\xd6\x51\x2d\xfa\xae\xfa\xa1\x28\x22\x74\x12\x45\x84\xde\x92\xa2\x66\x9d\x07\xa7\x08\x7f\xd3\x4f\x77\xd1\xcb\xe4\xe5\x90\x53\x1a\x7f\xf2\x58\x11\x4e\x38\x78\x1a\x09\xfe\x69\x1f\xf6\xde\x1b\xb9\x85\x80\x86\xde\x08\x9c\xa3\x0f\xfd\x95\x0a\x66\x16\x2d\xac\x97\xf7\x2c\xa5\x31\x2d\xbc\x4f\x99\x19\x25\x9d\x2e\xb3\x1a\x8b\xfb\x97\x59\x24\xca\xb7\x11\x99\x43\xfa\xfb\x88\xac\x79\xd4\x91\xa0\xce\x97\x08\xfa\xd1\x87\xfe\x12\xe0\xd0\xe7\x08\x8e\x11\x0a\xdc\xb6\x26\x56\x53\xee\xbd\xe3\x70\xe4\x9b\xc6\x58\x0f\x2f\x96\xcc\xe3\x01\x97\x2e\x82\x09\x01\xbd\xd7\x0d\xa5\x1a\xb1\x26\xaf\x68\x62\x7f\xc7\x07\xff\x5b\x82\xd7\x95\x90\x6c\x5b\x5f\x17\x38\x08\x89\xcb\x52\x6e\x71\x59\x12\xba\xd1\x1f\x24\xe8\xab\x64\x07\xe9\x9d\xe9\x4a\xec\xff\xd1\xdc\x7d\x86\xd2\x41\xa7\x95\xc3\xac\xa1\xf6\x8b\xc2\xc2\xad\x05\xc2\xee\x8d\xc5\x7d\x1c\xb7\x37\x0f\xa1\xff\xbd\x44\xff\xf4\x2e\x20\x6c\x42\x2c\x1c\xe2\x67\x42\x2d\x0c\xe8\x99\xdb\xcc\x86\xce\x2c\x2f\x6b\x17\xff\xb8\xa2\x84\x94\xe4\x24\xd5\x9c\xfd\x85\xf1\x26\xa5\x12\x5c\x16\x35\xad\xc1\xf0\xe6\x36\xd9\x64\xe9\xdc\xb7\x2c\xfa\xdb\x90\xcf\x70\x53\xa7\x8e\xc6\x2e\x6d\x87\x70\x58\x68\x40\xdd\x6b\x9f\x01\x74\x5c\x32\xf3\x7a\x85\xd8\x67\x2b\xfe\xc1\x85\x5d\xf6\xe8\x1d\x2e\x3f\xa8\xa5\x3e\xfe\xa4\xa6\x75\x38\x7d\xed\x33\xf9\xe4\x04\xfd\x0b\x50\xca\xaa\x22\xd3\xbc\xcd\x09\xcd\x10\x91\x2b\x24\x18\x2a\x40\xfe\x4d\xa0\xf4\x0a\xd2\xcf\x88\xd9\x27\xa8\xec\x2b\x70\x73\xc3\x41\x68\x06\xdf\x20\x43\xa2\x84\x14\x6d\x71\xe9\xcb\xec\x10\x9e\x6f\x15\x88\xd7\x58\x40\x0f\xc2\xf5\x73\xf9\x5e\x86\x88\x40\x86\x79\x55\x14\x9e\x8c\x44\x38\x72\x8b\xcb\x48\x69\x0d\xac\xb5\x58\x2a\x18\x1f\x8c\xb0\x3e\xc6\xca\x2a\x82\xfc\x80\x6a\x97\xd5\xac\x60\x50\x5b\xcd\x25\xcd\x80\x72\xda\xcb\x4d\x22\x10\x11\x08\xa3\x6b\xe0\x37\x08\x67\xd7\x98\xa6\x90\x21\xc5\x00\x8d\x9e\xbc\xc2\x12\xdd\xb0\xca\xde\x5a\x6b\x49\x53\x80\x0c\x5d\x56\x12\x11\x8a\x04\xdb\x82\x02\xa4\xa7\xd7\xac\x44\x95\x00\x2d\xea\xb8\xf7\x29\x36\x67\x1a\x12\x12\xaa\xbc\xfe\xdc\x23\xc7\x29\xec\x9a\x54\xbd\xbd\x7c\xd3\xc3\x76\x2d\xbb\x1d\x99\x15\x3d\x74\xdf\x76\xf8\x5a\xbf\xc7\xfc\xf5\xda\x9e\x91\x87\xb4\x81\x48\x3b\xaf\x6a\x71\xa9\x2f\xd8\x1a\xd1\x2a\x41\x1e\xbe\x00\x18\xfb\xa8\x2b\x5c\xef\x74\x8a\xa2\xee\xda\x67\xe3\xa4\xcc\xb3\xf7\xb8\xb3\x99\xa1\x50\x68\x3d\x7b\x38\xf6\x3f\x68\x6c\x33\x7d\xbe\x1e\xb5\x7c\xfe\xb3\xa5\xe3\xc1\x58\x56\xfd\xf3\xdb\xd7\xdd\xd8\x53\xc5\x9c\x01\xac\xd6\x9d\x69\x18\xa6\xaf\x07\xd2\x07\xc7\xfb\xfd\xa4\x10\xdf\x39\x94\xcd\xb4\x7d\xe3\x9b\xac\xba\xb4\xb5\x72\x01\x0e\x3b\xbf\x63\xdd\x9b\x37\x38\x48\x5d\xbd\x40\xaf\xda\xab\x7f\x41\xc7\x7a\x40\x5c\x71\x4b\x70\xd0\x92\xfb\x9d\x16\x37\xc1\x0a\x5e\xbb\xa1\xa0\x35\x32\x0a\x7a\xf0\xac\xce\xeb\xf7\xdb\x0d\xf4\xd6\xc8\x29\xd0\x6b\xf7\xbc\x0d\x5d\xb7\x6b\xe8\xfa\xf5\x71\x30\x3a\x78\x7e\x9c\xc4\x2f\x58\x72\x48\xdb\xd2\x76\xad\x35\x29\xde\xa8\x48\xb8\xc1\xe3\x39\x07\xb8\x69\x5e\xf7\xbc\x6f\x6b\x3d\x6a\x8b\x5a\xc9\xbb\x64\xaa\xbb\x6c\x93\xc1\xdd\xf5\x47\x81\xfb\x85\x14\x12\xb8\xbe\x4e\xf4\x7a\x5d\xab\x01\x1a\x8c\x8a\x83\xcb\x38\x90\x0d\xfd\x4f\x08\x74\xd2\xb5\x5a\xb8\xfe\xa8\x28\xb8\xf6\xbd\x9b\xd7\x63\x5a\x0c\xbc\xa6\x37\x0a\x96\xf7\xf4\xd6\xeb\x75\xad\x06\x66\x30\x2a\x0a\xae\x9f\x9b\x6a\x3a\x9b\xc6\x75\x37\x7f\x15\x09\xb4\xb3\x4d\xea\xb6\x75\x27\xa1\x12\x05\xd1\x4b\x38\x39\x90\x75\xe3\xba\x9b\x94\x8a\x04\xda\x45\xd3\xb6\xad\x3b\x39\x84\x18\x88\x6d\xcb\xe9\x19\xcc\x49\x76\x52\x1b\xa6\xb6\xa2\x37\x8d\x06\x37\x7f\x4c\x14\xd0\x73\x4e\xb6\x98\xdf\xb4\xd4\xdc\xb5\x1a\xb0\xc1\xa8\x28\xb8\x7f\x00\xce\xda\x06\xbd\x6e\x5b\xdb\x54\x6e\x33\x22\x12\x62\x78\x0b\x6d\x20\x9a\xb6\x75\x3b\x39\x1c\x05\xf1\x02\x52\x0e\xc1\x87\x1c\xa6\xa5\xfe\x10\xc6\xf6\x46\xc2\x6a\x6f\xeb\x0b\x6f\x5b\x5f\x4c\xda\xd6\x17\xe6\xf9\x81\x0f\x4b\xb7\x58\x58\x75\x6f\x1c\xac\xea\xd2\xbe\xc1\x74\xc0\x4c\x53\xfd\x19\x7e\x33\x20\x4e\x0b\x3b\x6f\x07\xd4\xbf\xa6\xd1\xa0\xe8\x8f\x89\x03\xda\x42\xd1\xc3\x6f\x14\x39\xbb\xc2\x70\x26\x62\xdc\x07\xef\x8f\x2a\xbf\x83\x33\x3e\xb0\xf0\xe3\xf6\xca\x4d\x18\x9f\x3c\xb9\xe4\x4f\x2e\xf9\x93\x4b\xfe\xe4\x92\x3f\xb9\xe4\xe8\xc9\x25\x7f\x72\xc9\x9f\x5c\xf2\x1a\xe2\x93\x4b\xfe\xe4\x92\x8f\xba\xe4\xbb\xee\x27\x8f\x77\xf8\xb0\xcb\xdc\xde\xc5\x17\x08\xe9\xaf\xc9\x15\x0b\xc1\x94\xb1\x98\xb4\xde\x87\x8f\x63\x9f\x70\xdc\x5b\x95\xae\x29\x78\xfd\xaf\xd6\xea\x9a\x56\xd1\xe6\x76\xe4\xdd\xaa\x6e\xd7\x94\x25\x1e\xa4\x7a\xd7\xf7\xe0\xcc\x03\x55\xf2\xba\x3d\xef\xee\x56\xcf\x6b\x74\x77\x7d\x87\xaa\x5e\xd3\x04\xf0\xff\xb5\xb6\xd7\x34\x2e\x3d\xee\x9a\x05\xe6\x8b\xe2\xf3\x02\x93\xb0\xfa\xc4\xa4\xb3\x21\x28\xf3\xf5\xb0\x9b\xde\xe2\xfa\xb8\xd4\x2e\x69\xb0\x3a\xa8\x80\xb7\x29\x9e\x35\x8d\x3b\xb7\x2f\xa1\x35\xee\x7e\xf4\x94\xcc\xea\x7e\x75\x7e\xa8\x76\x56\x12\xe5\x75\x04\x25\xb4\x7a\xf6\xc1\xb8\xfe\xf7\x96\xd2\x92\xbc\x82\xf0\x31\xe0\xfd\x57\xd3\x8a\x62\xa0\x5f\x53\x2b\x82\x17\x49\x53\x5a\x6b\x7c\xec\x62\x19\xf5\x19\xf3\x2e\x38\xe8\xc7\x27\xec\x6a\x05\x89\x2a\xe2\x64\x75\xa2\xf3\x91\x74\xc4\xf7\xbf\x0f\x51\xd1\x29\xb6\x46\x53\x80\xf6\x48\xe5\xa1\x78\x52\x6e\x53\xb0\xa9\xf9\x16\x67\xbc\xfa\x50\xf7\xb3\x21\xbf\x50\xd3\xde\x67\xd7\x8b\x07\x2a\x00\x15\x5b\xd2\xe9\xbe\xf9\xfb\xbd\xea\x3b\x3d\xef\x2b\xf0\x74\xe7\x92\x4d\x31\x14\xde\xc9\x96\xf7\x1d\xe9\xa5\x6e\x69\x61\x66\xe5\x72\x1b\x04\xfb\x8e\x62\xdd\xd2\x57\xc1\xc3\x1e\xc5\xa3\x25\x02\x1b\x66\x4f\xba\x09\xea\xff\x7e\xcd\x7d\xbe\x16\x1e\xdc\x83\xc5\x01\xc6\x6a\x03\x74\xce\x8d\xf0\x88\xff\x3f\x56\x48\xa8\x91\xf1\x83\x95\x13\x1a\x62\xe8\xe3\xac\x27\x84\xb3\x8c\x83\x68\xdc\xfe\xfe\xf2\x42\x51\x4c\x7b\xb8\x22\x43\xcf\x77\xe3\x55\x86\x22\x4b\x53\x44\xfb\x1e\xb1\xf6\xc0\x2f\x53\x11\xe5\x86\x34\x5b\x37\xa6\x58\x45\x94\x9f\xf2\x60\x25\x2b\x1e\x8c\x59\xae\x7c\x45\xcc\xac\x87\x2f\x62\x31\x8e\x45\x44\x29\x8b\x98\x5a\x2f\xbe\xca\xfe\x4f\x00\x00\x00\xff\xff\xb6\xe1\x67\xb0\xee\x64\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 25838, mode: os.FileMode(420), modTime: time.Unix(1558469891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x4d\x6b\xf3\x46\x10\xc7\xef\xfa\x14\x83\x11\x25\x29\xae\xda\xe4\xb9\x19\x72\x28\x71\x79\xc8\x21\x21\xb8\x2f\x17\xe3\xc3\xd6\x1a\xdb\xdb\xae\x57\xca\x7a\xe5\x60\x84\xbe\x7b\x59\xeb\xc5\x92\xbc\x2b\x29\x26\x86\x06\x66\x02\x01\x6b\x67\xe6\x3f\xb3\x9a\x5d\xff\x70\xcc\x96\xff\xb2\x35\x42\x9a\x42\xf0\x3b\xea\xe0\x31\x92\x2b\xbe\x4e\x14\xd3\x3c\x92\xc1\x0b\xdb\x22\x64\x99\xe7\xf1\x6d\x1c\x29\x0d\xa3\x75\x14\xb0\x38\x52\xa8\xa3\x80\x47\x3f\xa3\xc0\x2d\x4a\xcd\xc4\xc8\xf3\xf6\x4c\x81\x42\x71\x8c\xdb\x6d\x78\xbc\x9b\xe1\x9a\xef\xb4\x3a\x40\xe5\x15\xcc\x6c\xeb\x9e\xb7\x4a\xe4\x12\xb8\xe4\xfa\xe6\x16\x52\xcf\x03\x00\x47\xa6\x87\xbe\x5c\x69\x96\x87\xa7\x29\x28\x26\xd7\x08\x3e\x4a\xcd\xf5\xc1\xf4\x31\x06\xbf\xcc\x0a\x93\x87\xbc\xdb\x46\x12\xd3\x68\x1e\xfc\x13\xf0\x15\xec\x36\x51\x22\xc2\x3c\x33\xaa\xba\x27\xf8\x26\xb8\x9e\x1b\xfc\xe0\x35\xf9\x5b\xf0\xe5\x73\x14\x62\x91\xc6\xda\xc2\x3c\x4d\x1b\x71\x59\xf6\x14\xe6\x1f\x17\xf0\x00\x3f\xd8\xdb\x4b\x8f\xf9\x6a\xa5\xad\x35\xdc\x08\x94\xa7\x86\x82\x47\x85\x4c\xe3\x2d\xfc\x52\x36\x61\x2c\x7f\x38\x81\x2d\x8b\xe7\x3b\xad\xb8\x5c\x2f\x7e\xb4\x2b\x3c\xc9\x55\x04\x27\x99\x52\xaa\xd8\xc3\x98\x29\x94\x7a\x0c\x3e\x5b\x96\xbb\xd7\x56\xae\xcb\x3a\xf7\xf0\x49\x4a\xfb\x46\xe6\x02\x8d\x4d\x6c\x27\x1c\x99\x8d\x2b\xfc\xb2\x6c\x04\x13\xd7\x66\x99\x56\x9a\x9d\xd4\xea\x29\x3a\x08\xa6\x18\x2b\x5c\x32\x8d\x61\x5b\xc7\xd8\x69\x75\x02\x5a\x25\x38\xb6\xa6\x43\x69\x0d\x6e\x29\xbd\x32\xc5\xb6\xa8\x51\x4d\x71\x65\x46\xdc\xec\x9f\x3b\xaa\x7a\xb1\xee\xe8\x60\x86\x6f\x09\x57\x18\xb6\x5e\x76\x69\xe5\x72\x15\xba\x9b\xd4\x4e\xcd\x0b\xbe\x9f\x16\x0a\x57\xb3\x74\x73\x96\xc7\xd8\x7c\x61\xfe\xf2\xd1\x39\xdf\xd3\x7a\xed\xc5\xa4\xf0\x31\xf8\xe2\xee\x38\x20\x03\x3a\xb0\x95\xef\xda\x10\x71\xe7\xe8\xb7\x5e\x6b\x5f\xa5\xb6\x6a\xef\x8f\xd5\x8a\xbb\xae\xdc\xd6\x82\xee\x7b\x0a\xca\x8b\x1a\x52\x92\xad\xac\x6f\x79\x59\xf7\x7d\x0a\x50\x9e\x0d\xf1\xcd\x9c\x8b\xf3\x51\xb5\x09\xa1\x0c\x7b\xd2\x66\xdd\x89\x86\x25\xe9\xf7\xea\x90\xe9\x0f\xee\xf6\xb0\xa4\xbe\xbd\xe4\x20\x0f\x39\x92\xbf\x49\xad\x38\xee\x1c\x03\x51\x3f\x89\xf3\xc5\xe9\x2c\x5a\x32\xd9\x2f\xae\xda\x5c\xc4\x7d\x67\xab\x28\xc5\x39\x36\x1f\x94\x2f\xcd\x7c\x59\x4d\x8a\x4b\xb8\xa4\x82\x8e\x61\xfb\xe3\x10\x9f\xdc\xcd\x87\x6e\xf7\xf2\xce\x8c\x83\x29\xae\x58\x22\xf4\x5f\x4c\x24\x67\x5f\x01\x75\xab\xfb\x55\x42\xad\xe0\x1e\xc1\xfe\xe1\xe2\x2b\xc0\xb7\xaa\x83\x11\xca\x64\x3b\xea\x2a\xea\x57\x21\xa2\x77\x0c\x1f\x37\x11\x5f\xe2\xf1\x65\x7f\xf0\x42\xfa\x67\x0c\xfe\xfe\xf8\x86\xe3\xa0\x99\xac\xef\x1a\x38\xee\xc0\xbe\xff\x06\xe8\x98\xf7\xd2\xfa\xcf\xe4\x80\x7b\xdb\x8f\x83\xe7\x44\x68\x1e\x8b\xce\xd7\x58\xfa\xb8\xbe\x67\x07\x0a\x5b\x4a\xee\x88\xf8\x98\xb7\x63\xa9\x95\xc4\xe1\x65\x79\x5c\x0b\xb4\xac\x3a\x01\xef\xcf\x38\x3c\x07\xbc\xfc\xe1\x95\x01\x2f\x17\x21\xc0\x73\x28\x11\xe0\x11\xe0\x11\xe0\x5d\x20\x43\x80\x57\x55\xf1\x89\x80\x47\x7c\x07\xc4\x77\xc4\x77\xc3\xbd\xaf\xc8\x77\xaf\x4c\x2f\x37\x44\x67\x44\x67\x44\x67\xce\x6a\x89\xce\x6c\x46\x74\x46\x74\x56\x33\xa2\x33\xa2\x33\xa2\x33\x77\x92\xab\xff\xfa\x36\x45\x81\x67\xbf\xbe\xe5\x0f\xaf\xcc\x77\xb9\x08\xf1\x9d\x43\x89\xf8\x8e\xf8\x8e\xf8\xee\x02\x19\xe2\xbb\xaa\x0a\xe2\xbb\xb6\x11\xdf\x35\x8d\xf8\x6e\x78\xc4\x97\xe4\xbb\xef\xa8\x5b\xb7\xcb\x0c\xcd\x41\xdf\x5f\x1b\xef\xbe\xa3\x26\xb6\x73\x28\x11\xdb\x11\xdb\x11\xdb\x5d\x20\x43\x6c\x57\x55\x41\x6c\xd7\x36\x62\xbb\xa6\x11\xdb\x0d\x8f\xf8\xaa\x6c\xf7\xcc\xe4\xc1\xc1\x77\x66\xe9\xfa\x8c\x67\x54\x88\xf3\x1c\x4a\xc4\x79\xc4\x79\xc4\x79\x17\xc8\x10\xe7\x55\x55\x10\xe7\xb5\x8d\x38\xaf\x69\xc4\x79\xc3\x23\xfe\x37\x9c\x67\x48\x85\xe8\x0c\x88\xce\x88\xce\x9c\xd5\x12\x9d\xd9\x8c\xe8\x8c\xe8\xac\x66\x44\x67\x44\x67\x44\x67\xee\x24\x9f\xf1\x2b\x5c\xfe\xbf\xf5\x30\x4d\xcb\x4f\x99\xf7\x5f\x00\x00\x00\xff\xff\xb5\x07\x23\xe4\x6c\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18028, mode: os.FileMode(420), modTime: time.Unix(1554956824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


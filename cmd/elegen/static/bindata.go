// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x6b\xe4\x38\x17\xdd\xfb\x57\xdc\x2f\x84\x0f\x1b\x2a\xce\x66\x98\x45\x86\x2c\x42\xd3\x0d\x05\x93\x26\x24\x30\x9b\x22\x0b\xb5\xeb\xda\x11\x23\x4b\x46\x92\xd3\x5d\x18\xfd\xf7\x41\xb2\xfc\x90\xcb\xf5\x4a\xd2\xd5\xd0\xd9\xa4\xca\xd2\x7d\x9d\xa3\x7b\x74\x5d\x15\xc9\xfe\x25\x05\x42\xd3\x40\xfa\x84\x3a\xfd\x24\x78\x4e\x8b\x5a\x12\x4d\x05\x4f\xbf\x92\x12\xc1\x98\x28\xa2\x65\x25\xa4\x86\x8b\x42\xa4\xa4\x12\x12\xb5\x48\xa9\xb8\x46\x86\x25\x72\x4d\xd8\x45\x14\xbd\x12\x09\x71\x04\x00\x40\xd7\xc8\x35\xd5\x1b\x6b\xac\xee\x49\x05\xb7\x50\x92\x6a\xa5\xb4\xa4\xbc\x78\xee\x6d\xd2\xa5\xdf\x07\x8d\x33\xb3\x7f\x4d\x73\x05\x92\xf0\x02\xdb\x64\x9e\x2a\xcc\x68\x4e\x33\x97\x8c\xb2\x89\x0c\x1b\x81\xe6\xa0\x5e\x44\xcd\xd6\x8f\x58\x50\xa5\x51\x06\xbb\x21\x85\xcb\xf4\xa1\xfe\xc6\x68\x76\x2f\xd6\x18\xda\x5e\xc1\xe5\x90\x22\xdc\xdc\x42\x6a\xf7\xb0\xf4\xf3\xf0\xf0\x6a\x64\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x39\x8c\xdd\x18\xd3\x15\xb4\x08\x42\x21\x5f\x4f\xa3\x8f\x1e\x99\x28\xc0\x2c\x23\x1a\x0b\x21\xe9\x6f\x08\x9c\xa8\x65\x86\x3f\x05\x3c\xc2\x28\x51\x3f\x11\xb1\xab\x33\x42\xd6\x34\x3e\xab\x4b\xba\x80\x4b\x57\xd9\xc8\xe8\xae\xad\x14\x42\x8c\xbb\x7d\x1f\x07\xec\x9e\x83\xca\xd7\xf8\x63\x06\xeb\xd5\xf3\xea\xb9\xfd\x78\x76\x8c\x2d\x02\x93\xfe\xec\xa1\xa0\x39\x30\xe4\xdd\xf2\xb2\x4d\x1e\x8c\x99\x4d\x37\x4c\xd9\x11\x90\x89\xb2\x12\x35\x5f\x8f\x38\x18\x9c\x04\x86\x9d\xbf\x66\xec\xa2\x37\x37\xc6\x65\x69\xff\x2f\x06\x60\xc1\xec\x25\xc5\x2c\x9a\x06\x90\x29\x5b\x0e\xa7\x6c\xf1\x46\xde\x92\x28\xba\xbe\x06\x97\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x5f\x10\xb2\x5a\x4a\xe4\x1a\x5e\xfd\x9a\xc8\xdd\xe3\xd2\x15\x1b\xe5\x35\xcf\x02\xdb\x38\x81\x9c\x09\xa2\xff\xfc\x03\x1a\xef\xa7\xbf\x3c\xee\x1e\x96\x4b\x9e\x8b\xb4\x0b\x63\x2b\x8c\x22\xbd\xa9\xbc\xbb\x7b\xc2\x49\x81\x12\x94\x96\x75\xa6\x1b\x13\x39\xf7\x71\x1e\xac\x26\xd0\x9d\xd8\x2f\x52\x94\x96\xcd\x98\x5b\x4a\x5b\x78\x13\x98\xed\x6a\x57\xaa\xcf\x66\x7a\xff\xac\xac\xf9\x73\x74\x4c\xb4\x4f\xad\xfc\x6e\x62\xaf\xc3\x9b\xd3\xa3\x06\x0a\xbe\xea\xfc\x1c\x17\xde\xb5\x77\xdc\x36\xf3\xd1\x81\x07\xf5\x5b\xb9\x8f\x47\x86\xe2\x9b\x98\xf0\xa1\xbe\x98\xce\x44\x4a\xba\x50\x34\x07\x0a\xb7\x90\xa7\x5b\xd4\x10\xbe\x49\xfe\x82\xff\xd1\x74\xa9\x3e\x97\x95\xde\xc4\xc9\xa8\xa1\x3a\x68\x02\x01\x99\x73\xd5\xe3\x7e\xb2\x3b\xff\x2c\x74\xe7\x71\xe4\x9b\xe4\x00\x16\x39\x25\xdf\x18\xc6\x1d\x77\xb3\x10\x4c\x9f\xb5\x36\x1d\x32\xea\x3b\xd5\xd9\x4b\xcf\xbe\xcf\xb6\x57\xf1\x3d\xba\xf7\x66\xcd\xcb\x88\x6a\xe7\xb5\xad\x8b\x64\x10\xfb\x9b\x29\x68\x5f\xf1\xfb\x0e\x93\x38\x89\x66\x64\x63\xf2\x75\x8d\x39\xa9\x99\xde\x72\xcb\x29\xf3\x6c\xec\x02\xfa\xa9\x22\x52\xe1\x5b\xe0\xde\xb6\xfc\x85\xa0\x7b\x43\x2e\x74\x7f\x0f\xa8\x47\x21\xf4\x7b\x49\x69\x8b\x7c\x0f\x35\x1f\xc6\x94\xbf\xd8\xf6\xd3\x13\x5c\x9c\x81\xfe\xf5\x83\xc1\xaa\x73\xe0\x5e\x1f\x0e\xc9\x51\xcb\xac\xed\xda\x27\xe7\x36\x50\xa5\xfd\xbd\x37\xe9\x7d\x7f\xba\x26\x52\xd0\xea\x5c\x72\x9c\x12\x1c\x28\x7e\x3e\x1d\xf5\x61\xc7\x72\xe7\xe9\x3a\xaf\x56\xfc\x7f\xce\xe0\x81\xd5\x92\x30\x30\xe6\x6f\xaa\xec\xd5\x7d\xc6\x83\xb9\x2d\x04\x47\xf3\x34\x63\xfa\xdb\xb1\xb5\x5b\x42\x7e\x21\x67\x01\xe4\x27\x75\xb7\xda\xdb\xde\xea\xe4\xfe\x7e\x44\xd6\xd2\xf7\x42\x2b\x15\x8f\xa3\x06\x2b\x2d\x4f\x72\x3a\x5d\xc9\xb9\x3d\x36\xd6\x2b\x91\x50\xfa\x79\xf6\x36\x08\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x32\xb8\x1f\x99\x75\xb3\x76\xfb\x2d\x48\x74\xbc\x6d\x98\xba\xbb\xe8\x26\x72\xf1\xee\x18\xf3\xc0\x50\x54\x7d\x54\xc2\x18\xe0\x0f\xaa\xb4\x55\x6c\xda\xaf\xfb\x60\x81\x4d\x6c\xd5\xfd\xe0\xb8\x39\xb7\xe5\xfc\x6f\xd5\x7b\x5b\xe4\xb4\x9f\x10\x8c\x47\xcf\x4d\xd1\x5f\x84\xec\xeb\x1e\x43\x68\xc9\xf3\x83\x36\xe4\x42\xba\xef\x05\x7d\xc5\x61\xee\xef\x11\x9d\xfa\x39\x74\x9f\x86\xb7\xe9\x2e\x55\x3a\x02\xd6\xf3\xca\xce\xf8\x7d\xf7\x5d\x3f\x59\xec\x7f\x05\x3e\x42\xa4\xc2\x37\x01\x2b\x4d\x26\xfa\x2f\x00\x00\xff\xff\x51\x27\x8c\xfd\xd7\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5335, mode: os.FileMode(420), modTime: time.Unix(1543916004, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x73\xdc\x36\x92\xcf\x9a\x5f\x81\x9d\x52\xbc\x43\xef\x88\xf2\xf3\x64\xb5\x55\x3e\xc7\x49\xa9\xce\x4e\x54\x91\x2f\xfb\xe0\x72\xc5\x10\xd9\x1c\x21\xe6\x00\x34\x00\xca\xd6\x4d\xcd\x7f\xbf\xc2\x07\x09\x80\x1f\x33\xa0\x2c\xf9\x74\x75\xf2\x43\xa2\xc1\x47\xa3\xbf\xd0\xe8\x6e\x80\x5d\xe1\xec\x13\x5e\x03\xda\x6e\x51\x7a\x09\x32\x7d\xc5\x68\x41\xd6\x35\xc7\x92\x30\x9a\xfe\x8a\x37\x80\x76\xbb\xd9\x8c\x6c\x2a\xc6\x25\x5a\xcc\x10\x42\x68\x5e\x6c\xe4\xdc\xfc\x25\x6e\x69\x66\xff\x5c\xb3\x14\x57\x8c\x83\x64\x29\x61\xa7\x50\xc2\x06\xa8\xc4\x65\xd3\x4b\xe4\x75\x7d\x95\x66\x6c\x73\xba\x21\x32\xbb\x86\xb2\xbc\x3e\xcd\x58\x75\x2b\x24\xaf\x33\x59\x73\x30\x03\xb7\xdb\x13\xc4\x31\x5d\x03\x4a\x2f\x2b\xc8\xd2\x77\xb7\x15\x5c\x70\x76\x43\x72\xe0\x42\xa1\xa2\xa1\x29\x6c\xd1\x6e\xe7\xa6\x00\xcd\xd1\x89\xed\xed\x82\xf8\x03\x97\x24\xd7\xf4\x44\x02\xda\xed\x66\xc9\x6c\xb6\xdd\xa2\xe3\x12\x4b\x10\xf2\x0f\xe0\x82\x30\x8a\x56\x67\x16\xe2\x1b\xdd\xfc\x52\x4a\x4e\xae\x6a\x09\xa2\x19\xa0\x38\xb5\xdd\xda\xc5\x8f\xc9\x12\x1d\x03\xad\x37\x6a\xde\x55\x4d\xca\xfc\x35\xad\x37\xc2\x80\xe8\x82\xde\xed\x66\xa7\xa7\x4a\x08\x7a\x86\xa6\x1a\xed\x76\x88\x43\xc5\x41\x00\x95\x02\xc9\x6b\x40\x15\x13\x82\x5c\x95\x80\x6e\x70\x59\x83\x40\x05\xe3\x08\x37\x58\x68\x62\xcc\xf4\x16\x33\x2b\xbf\x79\x3a\x93\x0a\x62\x0f\xbe\x90\x9c\xd0\xf5\x6c\x96\x31\x2a\x1a\xe9\x3a\xf6\x1d\x53\xbc\x81\x25\x3a\xd6\xab\x29\x2a\xcc\xe4\x3f\xcc\xe2\x96\x85\x16\x6d\x6a\x56\xea\x62\x6c\xa6\xaa\x01\xe6\xaf\xdd\x2e\xb5\x8b\xb8\x29\x3d\xac\xce\x0c\x29\xcd\x8c\x46\x38\x4e\x36\xee\xef\x99\xc2\x96\x14\x88\x32\x69\x65\xf3\x96\xe5\x50\xa6\x3f\x81\xc4\xd9\x35\xe4\x8e\xb1\x7e\xef\x6b\x2a\x89\xbc\xb5\xcc\x39\xcf\x41\xff\xec\xa2\xde\xb6\xb3\x42\xff\x66\x57\x7f\x41\x26\xd3\xd9\x0d\xe6\x71\xf0\xce\x50\xbb\x09\xd2\xb6\x71\xab\x89\x51\x43\x57\xa8\xd5\x40\x0f\xd4\xef\x20\xa4\xea\xdd\xed\xe6\x4b\x3d\xf4\x15\x96\xb0\x66\xfc\x76\x35\x34\x94\xd5\x3c\x6b\x85\x6c\xc6\x5f\x98\x0d\xbd\xea\x83\xb6\x3d\x6e\x24\x27\x37\x58\xaa\x91\xdd\x81\xa6\x63\xb7\x5b\xce\x76\x13\x79\xbd\xdd\x0e\x8d\x38\x17\xbf\x33\x26\x0f\xc9\xe2\xa2\xac\x39\x2e\xd1\x6e\xf7\x86\x08\xe9\x4b\x03\xa3\x52\xb5\xb0\x22\x62\x6e\xab\xe8\x31\x6b\xbc\xff\xf0\x7c\x74\xa4\x22\xf8\xf4\x14\x79\xda\x21\x6b\x4e\x8d\x6a\x90\x41\xd5\x10\x88\x50\xfd\x53\x61\x9b\xce\x8a\x9a\x66\x68\xc1\x22\x71\x49\xda\x95\x16\xc9\xb0\xde\x68\x99\x19\x2c\xc6\x61\x3a\xf5\x9b\x19\xfc\x5f\xb1\xca\xe1\x8e\x51\xc5\x08\x95\xc0\x91\x64\x08\x23\x65\x7e\x35\xc2\x71\x28\x4e\x27\x49\x2d\x3e\x40\x4e\x41\xf0\x55\x09\xa2\xa1\x49\xa3\xb1\x3a\x43\xb8\xaa\x80\xe6\x8b\x38\xe0\xdb\xdd\x12\xb1\x34\x4d\x13\x9f\x2d\xcf\x14\x28\x4b\xf8\x4b\x0d\xcd\x02\x15\x81\x98\x24\xd3\x3f\x31\xa2\xf0\xc5\xac\x6e\xe5\xf8\x50\x7c\x30\xb8\x2c\x9a\xf5\xd3\x34\x1d\x66\xc9\x41\x56\xb1\x5a\x7e\x23\xa7\xd4\x91\xf1\xe7\x52\xb1\x42\x01\x32\x76\xbe\xc1\xcb\xd8\xa6\x66\x9d\x76\x19\x56\x4b\x3d\x21\x5d\xec\xdb\x2d\x89\x81\xbf\x0b\xf4\x94\xd5\xd2\x8a\x43\xef\xb7\x8c\xd1\x1b\xe0\xd2\x97\x86\xd6\x44\x3a\x46\xf7\xdd\xd8\xad\xfe\x3b\xae\x76\x1a\x93\x90\x9f\x1b\xfc\x09\x16\x7b\x86\x2f\x51\x09\x74\xc1\x12\xc7\x42\xa2\xa6\xbd\xf8\x11\x11\xf4\x4f\xdb\xf7\x23\x22\xff\xf8\x47\xc8\xc2\xf7\xe4\x03\x3a\x43\xec\x3d\xf9\xb0\x97\x35\x3f\x41\x81\xeb\x52\xfe\xc6\x73\xe0\x81\x99\xc9\x4d\x07\x62\xaa\x87\xd0\x35\x2a\x08\x94\xb9\x68\xb4\x35\x63\x54\x02\xbd\x03\x7f\xfc\x05\x17\x09\x7a\xff\xc1\xb8\x01\x1d\x1b\xd3\x34\x3b\x92\x5a\xd7\xc6\xac\xf2\x9b\x45\xcb\xf9\x41\x5d\xaf\xa6\xf1\xc8\xda\x83\x2e\x3c\xaa\xc2\x63\xdd\xb0\xc8\xb0\xe4\x1d\xbb\xac\x30\x17\x10\xb0\x23\xd2\xa8\x5b\x25\x83\x5c\xa9\x96\x01\x13\xbb\xaf\x4f\x4f\xd1\x6f\x7d\x53\x8e\xbe\x90\xb2\x44\x8c\x96\xb7\x9a\xe5\xd8\x76\xad\xc9\x0d\x50\x2b\x92\x14\xfd\xca\xcc\x9f\x68\x03\x98\x0a\xa4\x14\x88\x83\x6d\x12\x70\x07\x21\x35\x2c\x58\x58\xa1\xa7\x69\x6a\xe4\xf1\xa8\x14\x3b\xed\xa0\xd9\xda\x99\x31\x65\x6f\x54\xc3\x17\xec\x8d\x6d\xfb\x56\xbd\xb6\xb0\x17\x09\x22\x54\x0e\x9d\x98\x20\xd3\x97\x17\xe7\xe7\xb4\x60\xa9\xe7\x78\x1b\xa7\xdd\x6a\xa1\x17\x03\x1c\x72\x1c\xbb\x0e\xe3\x46\x0d\x51\x44\xe0\xee\xb4\xc6\xa9\x3b\xec\x9f\x58\xa7\xbc\xce\x14\xfe\x9d\xfd\xb6\x7f\x9f\x6d\xb7\x3a\x14\x78\xc7\x7e\xd6\x3a\x77\xac\xa8\x45\x05\x2e\x05\xe8\x08\x27\x20\x4c\xf1\x45\xaf\xdc\x00\x50\xfc\xfa\xf8\x97\x60\x74\x35\x3f\x99\xa3\x2b\xfd\xc7\x9f\x9a\x1e\x2b\x9b\xf9\x47\x33\xeb\xb9\x0a\xf8\xd2\xb7\xb5\x84\xaf\xbd\x09\x27\xf3\x8f\x56\xc8\xbf\xc2\x97\x03\x8c\x6b\xfc\x11\x75\x02\x8f\x9f\x2a\x0a\x59\xad\x04\x07\x00\x2e\x92\xfd\x40\x3a\xba\xf0\x6c\xdf\x58\xa7\xe8\x3e\x87\x56\x7b\x14\xc8\x19\x33\xcd\x97\x55\xf3\xeb\x99\xe3\xd5\x76\xb7\x9c\x79\x26\xef\xc4\x0f\x11\x95\xd4\xd4\xa6\x13\x8c\x7b\x21\x25\x5a\x1c\x10\x7a\x12\x58\x57\xeb\x9a\x8b\x6b\x56\x97\xf9\xbf\x39\x91\x70\x4e\x89\x24\xb8\x24\xff\x0d\x5c\x29\x83\x8e\x39\xd5\x52\xc6\x06\x77\x14\xe8\x38\xbd\xa8\xaf\x4a\x92\x29\x92\x51\x07\xec\x31\xa1\x44\x1b\x93\x2f\x03\x60\x41\x06\xc0\xbb\x73\x49\x61\xa7\x07\xed\x43\x6d\x27\xfe\x31\x10\xd7\x64\x77\x6e\x4c\xfc\x37\xe8\xc5\x8f\x05\x78\x8d\xd9\xd9\xab\x52\xf7\xe4\xaf\xa3\xc0\x61\xf7\xf7\xe8\x14\xc2\x0a\xd2\xf1\x1c\x4c\xe8\x1c\xd0\xf5\x77\x81\x6a\x4a\x3e\xd7\x4d\xf4\xa2\xe6\x4c\xa4\x55\x4d\x59\x24\x28\xf4\x16\x4c\xc4\x67\xe6\x7a\xd8\x34\xca\xd9\x1c\x00\x69\xbb\x80\x1b\x94\xbe\x6a\x8e\xea\x66\xb3\xb7\x52\x56\x66\xab\x03\x62\xde\x4b\xd2\xdc\x85\x61\x97\x20\x3d\x2c\x05\xc8\x87\x61\x58\xb0\xcc\x82\xe4\xa8\x39\xbb\xe3\xb8\x16\xc7\x2e\x74\x86\x48\x7e\x1f\x4c\x19\x3a\x94\xaf\x31\xcf\x33\x96\x43\xde\x3d\x9e\xf5\xb1\x10\xcd\x88\x3b\x9f\xc9\xd3\xa9\x18\xf5\xa3\x9b\xec\xc1\x88\x3f\x1d\x45\x8b\x26\xe6\x71\x3b\xce\x13\x39\xe6\xab\x60\xd3\x2b\x32\x4e\x2a\xe9\x12\x92\x3f\xb1\x2c\x8c\x48\x58\x56\x6b\x4b\xa7\xc7\x28\x7f\xd1\xed\x97\x58\x8d\xf8\x89\x65\x03\x46\x44\xa3\x0b\x9f\x47\xf1\x99\xbf\xa7\x2c\x67\xd9\x87\x79\xd7\x2c\xe8\xe6\x4b\x93\xc7\x0c\xcc\x47\x38\xec\xa3\xe2\x97\xc8\xfe\x03\x67\x9f\x24\xc9\x3e\x89\x3d\x84\x7f\x1c\xda\x52\x43\xfe\x61\x04\x93\x63\xcd\x85\xc6\xbf\xc7\x16\x8b\x7b\xb1\x91\xe9\x65\xc5\x09\x95\xc5\x62\xfe\xcf\x1f\xc4\xea\x07\xf1\xaf\xb9\x0a\xea\xdd\x11\xa4\x15\xc4\x35\x19\x4b\x9d\xf4\x94\x22\xd2\x9f\x6c\xb5\xc3\xf8\x13\xbf\x00\x05\x8e\x25\xfc\x02\x52\x02\x47\x69\xcf\x5d\x38\x3d\x45\xbf\x80\x54\x24\xf6\x4c\x54\x37\x80\xeb\x0d\xb0\x56\x85\x43\x06\xe4\xa6\x6b\x61\x8f\xf7\xf0\x6c\x64\xc5\x45\x12\xae\xd3\x24\x95\x43\x96\x1a\x03\xdb\x3b\x7f\x3a\xa1\x40\x9f\x05\x97\x7b\x58\x70\x39\xc2\x82\xf6\x90\xa9\x38\xab\x80\x2b\xe7\x20\x82\x11\xa8\x16\x4a\x13\x5c\xa4\xa9\x8f\xa8\x78\xf6\x8c\x60\xb3\xf0\xac\xc9\x20\xa3\xda\x23\x6a\x98\x45\xe8\x0c\x79\x10\x3a\x5b\xa3\xbb\x33\x30\xcd\xd1\x62\x6c\x7b\x24\xfd\x2e\x93\x27\x4e\x2c\x3f\x07\x93\x00\xc2\x34\x0d\x9f\x49\x6a\xd2\x75\x33\x1e\xf2\x26\xc5\x74\xaf\xf1\xfb\x81\x9d\x1c\x15\xb6\x9b\x21\x7e\x34\xde\x30\x9d\x14\x3a\xea\x36\x93\x13\x74\x76\x86\x5e\x78\xa1\xf7\xe9\x29\xa2\xac\x24\x54\xae\xd0\x9a\x99\x2b\x39\xd1\x76\x36\xc1\xcd\x81\x94\x87\xd9\x0b\xc8\xfb\xd7\xbd\x2f\xdb\x6b\x17\xc2\x89\x7d\xfd\x58\xa1\x67\xc3\x8a\xb3\xec\xad\xd9\xf1\xee\x77\x7e\xde\x40\x54\x2a\xe2\x88\xa2\x65\xe7\xe7\x35\x0b\x97\xd5\xb4\x02\x70\xb4\x8a\x2f\x44\x66\xd7\xa8\xb8\x2f\xf2\x33\x2c\x20\x3c\x9d\x57\x41\xbf\xa1\xa3\xcf\x0c\xbd\x89\x9e\x2d\x86\xd9\x94\x4c\x62\x93\x95\xb9\xa8\x6c\xe0\x7d\x81\x15\x85\xb8\xaa\x4a\x93\xd8\xa7\x8c\x22\x4a\x4a\xe7\xde\x62\xf4\x3c\x82\xa7\x36\x41\x3e\x31\x20\xd2\x8b\x2f\xec\x06\xdd\xa7\xec\x89\x7f\xec\xeb\xb8\x51\xb8\xbb\xd5\x83\xec\x6f\xe2\x4a\x33\xcf\x36\x92\x02\xfd\xcd\xac\xec\x1f\x8a\xe7\xe2\xf5\xe7\x1a\x97\x0b\xff\xa4\x4c\x3c\xf1\x57\x98\x92\x6c\x31\xcf\x30\x55\x96\xa8\xd2\xcc\x2b\x38\xdb\x20\x8c\x0c\x15\x5f\x88\xbc\x46\x39\x29\x0a\xe0\x40\x65\x7b\xef\x33\x0f\x72\x5c\x82\xe9\xf0\xdd\xac\xbe\x88\xe0\x6f\x32\xeb\x5e\xb4\x76\x69\x11\x23\xc6\xf7\x6f\x67\x5a\x9c\x5e\x32\x6e\xcc\x48\x3f\x1f\x01\x31\x6b\x75\x28\xd4\xad\xd1\x08\x42\x3b\xd6\x50\x75\xee\x91\x72\x80\xca\x5c\x9d\x90\x03\x57\x27\xfa\xca\x37\xd6\x35\xb4\x0b\xc5\xe6\x73\x48\x81\x98\xb2\x91\x86\x27\x47\x47\x8d\x4b\x48\xca\xd9\xd1\x6e\x36\x3b\xb2\x59\xd0\xfd\xf9\x9e\xdd\xec\x88\xa5\xcd\xca\xe7\x54\xb2\x05\xab\x65\x32\x9b\x1d\x0d\x24\xea\xdd\x20\x45\x3c\x01\x11\x1e\xd9\x84\xda\x9d\x63\xce\x96\xbd\x34\x4c\x66\x4a\x83\xda\xa1\xf1\xdb\xd9\xec\x48\x62\xbe\x06\xb9\x44\xc0\x75\x6a\x29\x78\x67\x91\x6a\x0e\xb3\x64\x76\xa4\x3c\x6e\xce\x9d\x52\x1d\x1d\x99\x0d\x11\xf8\x9b\xff\x45\xf5\xf9\x24\x99\x96\xb9\x16\xf9\xbe\xf5\x57\xe8\x07\x31\xd7\x0b\x27\x89\x11\xc2\x73\x73\x99\xf4\xdc\xe0\xb4\xef\x12\x49\x6f\x0d\x9b\x26\x36\x6f\x36\x74\x60\x4e\x72\xcb\xe7\xac\xe6\x66\x1b\xd2\x82\xf1\x8d\x89\x41\x84\x64\x1c\x72\xc7\x79\x47\x66\x74\x84\x6a\x97\x5a\x24\x0a\x6b\xc6\x1b\xe5\xd2\x3f\xb4\x61\x72\xb6\xec\xb5\x6e\xdb\x36\x91\xc5\xe7\x9a\x70\xc8\x5f\xef\x1b\xd8\x44\xfb\x93\x4e\x18\xef\x16\xfd\x1d\xc7\x54\x10\x45\x75\xd0\x97\xbe\xfe\x5a\x31\x01\x2e\x9d\x6b\x9b\x7f\xb7\x38\x85\xa3\x55\x5c\xa5\xdd\xbb\xb9\xf1\x45\xe6\x9e\xa9\xb1\x2a\xe2\x50\x6f\xf8\xd1\x80\xb2\xb1\x49\x18\x86\x8e\x18\x9e\xe4\xc7\x50\xa3\x9c\x6f\x12\xb0\xaa\xbd\x5a\x0c\xdb\x8d\xda\x38\x0b\xe5\xc5\xb8\x1e\x31\x8c\xa3\x85\x23\x08\x68\xbd\x99\x27\xdf\x4e\x8f\x61\xcc\xd8\xa1\xfc\x3d\xe8\x72\x34\x49\xb2\x81\x49\x22\x7a\x47\x36\xf0\x68\x05\xf4\x55\x02\xa7\xb8\x9c\x27\x7e\x6b\x49\x84\x9c\x27\x13\x48\x7c\x6d\xc1\x3c\x1e\x32\x1d\x31\x84\x4a\x58\x03\x9f\x24\xb2\x73\x2a\x1f\x23\x29\x45\xc9\xb0\x9c\x44\xc8\xcf\x6a\xc6\x23\x21\x65\x1f\x65\x1c\x8a\x01\xba\x86\x11\x4d\xdd\x99\x30\x82\x32\x74\x50\x85\x3b\xef\x0f\x0e\xc5\x1b\xbd\x19\x3a\x8d\x6f\x71\xe5\xec\x9a\x8d\x6e\x44\x7d\xe5\xbd\xda\x18\x76\xfd\x1c\x8e\x8e\x4a\x51\x5f\x1d\x26\x29\x8a\x2c\x3f\x02\x19\x25\x30\x7d\x59\x96\xec\x0b\xe4\xaf\xae\x19\xc9\x40\xc4\x68\x93\x31\xca\xe7\x54\x3f\xdd\x98\x64\x9a\x97\x2e\xdf\xaa\xe6\xfd\xc5\x08\xed\x21\xf0\x71\xbe\x44\xf3\x8f\x0a\xda\x6e\xa9\xbd\x97\x97\xb5\x64\x6b\x9b\xd2\xc9\xf7\x68\xe6\xb7\x88\xd9\x21\x81\x79\x14\x0f\x2e\xb0\x54\x36\x2e\x6e\x2f\x2d\x75\x46\xb3\xbb\xc6\xc7\x81\xe6\xb7\x20\x04\x5e\x83\xe9\x55\x9d\x9e\x8f\xf0\x10\x74\xaf\x25\x4a\xdf\xe2\xaf\x6f\x80\xae\xe5\x35\x7a\x11\x43\xf9\x5b\xfc\x95\x6c\xea\x8d\x99\x12\x4b\xbf\x6a\x75\xeb\xa8\x16\x7d\xdb\xfd\x60\x24\x11\x3a\x89\x24\x42\xef\x48\x52\xbb\xce\xc3\x93\x84\xbf\xea\xb7\xbc\xe8\x45\xfa\x62\xcc\x61\x8c\x3f\x10\xac\x10\x27\x9c\x07\xad\x0c\xff\xb0\x2f\x7d\xef\x8f\x5e\x7b\x01\x10\x8b\x74\xf4\x69\xbc\x54\x91\xc6\xa2\x83\x76\x72\xdf\x72\x3a\xa4\x88\xf7\x29\x35\xa3\xa7\xd3\xa5\xd6\x60\xf1\x00\x52\x8b\xc4\xf9\x2e\x42\x73\x58\x7f\x27\xa1\xb5\xcf\x3b\x52\xd4\xfb\x3c\x41\x3f\xff\xd0\x9f\x07\xec\xfb\x46\xc1\x71\x42\x81\xdb\x34\xd4\x6a\xd2\xbd\x17\x1d\x8e\x7e\xd3\x18\xeb\x7c\x45\xd3\x79\x32\xe2\x6d\x45\x70\x21\x20\xf8\xa6\x25\x55\x63\xd6\x26\xfe\x4c\x70\xee\x18\xe1\x7f\x61\xf0\xaa\x16\x92\x6d\x9a\x7c\xbe\x83\x90\xba\x34\xe2\x06\x57\x15\xa1\x6b\xfd\x99\x82\xbe\x55\x76\x90\xde\x9a\xae\xd4\xfe\x1f\xcd\xdd\xc7\x29\x3d\x74\x3a\x49\xc6\x06\xea\xb0\x2c\x2c\xdc\x46\x22\x6c\x8c\xc7\x36\xf3\xac\x89\x05\xce\xd3\x85\xbc\xad\xc0\x4f\x44\xea\x54\x72\x37\x7b\xb0\x8a\x73\xcd\xda\x27\x77\x63\x80\x22\xe1\x38\x20\xf6\x9e\x7c\xf2\xbc\xdd\xb0\xbe\x0c\xa9\x8f\xbd\xe7\x08\x3d\xfc\x04\xfd\xcb\xbb\xee\xb0\xe9\xb7\x70\x88\x9f\x77\xb5\x30\x60\x60\x6e\x3b\x1b\x7a\xb3\xbc\x1c\x61\xfc\xa3\x91\x0a\x32\x52\x90\x4c\xab\xc9\xcf\x8c\xb7\x09\x9c\xe0\x6a\xaa\x6d\x0d\x86\xb7\xb7\xe4\x26\x27\xe8\x3e\xd7\xd1\x9f\xbf\x7c\x82\xdb\x26\x51\x75\xe8\x8a\x78\x0c\x87\x85\x06\xd4\xbf\x64\x1a\x41\xc7\xa5\x4e\x6f\x96\x88\x7d\xb2\xba\x3c\xba\xb0\xcb\x55\xbd\xc5\xd5\x7b\xb5\xd4\x87\x1f\xd5\xb4\x1e\xa7\x6f\x7c\x26\x9f\x9e\xa2\x7f\x03\xca\x58\x5d\xe6\x9a\xb7\x05\xa1\x39\x22\x72\x89\x04\x43\x25\xc8\xbf\x0b\x94\x5d\x43\xf6\x09\x31\xfb\xca\x96\x7d\x01\x6e\x74\x97\xd0\x1c\xbe\x42\x8e\x44\x05\x19\xda\xe0\xca\x97\xd9\x3e\x3c\xdf\x28\x10\xaf\xb0\x80\x01\x84\x9b\x2f\x02\x06\x19\x22\x02\x19\x16\x75\x59\x7a\x32\x12\xe1\xc8\x0d\xae\x22\xa5\x35\xb2\xd6\x22\x51\x30\xde\x1b\x61\x7d\x88\x95\x55\x04\xf9\x01\xd5\x2e\x87\x5a\xc3\xa8\xb6\x9a\x2b\xa1\x11\xe5\xb4\x57\xa9\x44\x20\x22\x10\x46\x37\xc0\x6f\x11\xce\x6f\x30\xcd\x20\x47\x8a\x01\x1a\x3d\x79\x8d\x25\xba\x65\xb5\xbd\x23\xd7\x92\xa6\x00\x39\xba\xaa\x25\x22\x14\x09\xb6\x01\x05\x48\x4f\x6f\x58\x89\x6a\x01\x5a\xd4\x71\xef\x6e\x6c\x86\x36\x24\x24\x54\x79\xfd\x45\x4b\x81\x33\xd8\xb6\x17\x03\xd6\xe0\xea\x61\xdb\xce\x21\x14\x99\x83\xdd\x77\xbb\xb7\xff\x11\xc1\x80\xf9\x1b\xb4\x3d\x07\x9e\x17\x07\x22\xed\xbd\x35\xc6\x95\xbe\xce\x6b\x45\xab\x04\xb9\xff\xba\xe1\xd0\x77\x6b\xe1\x7a\x67\x53\x14\x75\xdb\x3d\xe8\x27\xe5\xb9\xbd\x47\xab\xed\x0c\x85\x42\xe7\x91\xc5\x89\xff\xcd\x66\x97\xe9\xf3\xd5\x41\xcb\xe7\x3f\xc7\x3a\x19\x0d\xd0\xd5\x3f\xbf\x7d\xd5\x0f\xa8\x55\x20\x1d\xc0\xea\xdc\xd0\x86\xc9\x87\xd5\x48\x52\xe4\x64\xb7\x9b\x94\xb8\x70\xfe\x71\x3b\x6d\xd7\x3a\x5a\xcb\x3e\x6d\x9d\x0c\x87\xc3\xce\xef\x58\x0d\x66\x43\xf6\x52\xd7\x2c\x30\xa8\xf6\xea\x5f\xd0\xb1\x1a\x11\x57\xdc\x12\x1c\xb4\xe4\x7e\xa3\xe5\x6d\xb0\x82\xd7\x6e\x28\xe8\x8c\x8c\x82\x1e\x3c\x17\xf4\xfa\xfd\x76\x03\xbd\x33\x72\x0a\xf4\x26\xda\xe8\x42\xd7\xed\x1a\xba\x7e\x55\x1d\x8c\x0e\x9e\x55\xa7\xf1\x0b\x56\x1c\xb2\xae\xb4\x5d\x6b\x43\x8a\x37\x2a\x12\x6e\xf0\x28\xd0\x01\x6e\x9b\x57\x03\x8f\xeb\x3a\x2f\xea\xa2\x56\xf2\xae\xb4\x9a\x2e\xdb\x64\x70\x77\xfd\x51\xe0\x7e\x26\xa5\x04\xae\x2f\x2f\xbd\x5e\xd7\x6a\x80\x06\xa3\xe2\xe0\x32\x0e\x64\x4d\xff\x13\x02\x9d\x74\xad\x16\xae\x3f\x2a\x0a\xae\x7d\x5d\xe7\xf5\x98\x16\x03\xaf\xed\x8d\x82\xe5\x3d\x29\xf6\x7a\x5d\xab\x81\x19\x8c\x8a\x82\xeb\xe7\xdb\xda\xce\xb6\x71\xd5\xcf\xc9\x45\x02\xed\x6d\x93\xa6\x6d\xd5\x4b\x11\x45\x41\xf4\x72\x68\x0e\x64\xd3\xb8\xea\xe7\xd9\x22\x81\xf6\xd1\xb4\x6d\xab\x5e\x4e\x24\x06\x62\xd7\x72\x7a\x06\x73\x92\x9d\xd4\x86\xa9\xab\xe8\x6d\xa3\xc1\xcd\x1f\x13\x05\xf4\x82\x93\x0d\xe6\xb7\x1d\x35\x77\xad\x06\x6c\x30\x2a\x0a\xee\xef\x80\xf3\xae\x41\x6f\xda\x56\x36\x3f\xdd\x8e\x88\x84\x18\xde\x79\x1b\x88\xa6\x6d\xd5\xcd\x78\x47\x41\xbc\x84\x8c\x43\xf0\x81\x8a\x69\x69\xbe\x02\xb2\xbd\x91\xb0\xba\xdb\xfa\xd2\xdb\xd6\x97\x93\xb6\xf5\xa5\x79\xec\xe0\xc3\xd2\x2d\x16\x56\xd3\x1b\x07\xab\xbe\xb2\x2f\x3e\x1d\x30\xd3\xd4\x54\x1a\x68\x07\xc4\x69\x61\xef\xa5\x82\xfa\xd7\x36\x1a\x14\xfd\x31\x71\x40\x3b\x28\x7a\xf8\x1d\x44\xce\xae\x30\x9e\x89\x38\xec\x83\x0f\x47\x95\xdf\xc1\x19\x1f\x59\xf8\x71\x7b\xe5\x26\x8c\x4f\x9f\x5c\xf2\x27\x97\xfc\xc9\x25\x7f\x72\xc9\x9f\x5c\x72\xf4\xe4\x92\x3f\xb9\xe4\x4f\x2e\x79\x03\xf1\xc9\x25\x7f\x72\xc9\x0f\xba\xe4\xdb\xfe\x07\x96\xdf\xf0\x19\x99\xb9\xbd\x8b\xaf\x01\x33\x5c\x76\x2c\x16\x82\x29\xee\x31\x69\xbd\xf7\x1f\x0e\x7d\x30\x72\x6f\x85\xc8\xa6\xe0\xf5\xbf\x5a\x8e\x6c\x5a\xd1\x9e\xbb\x91\x77\xa7\xd2\x64\x53\x96\x78\x90\x02\x65\xdf\x83\x33\x0f\x54\xac\xec\xee\xbc\xfb\xb6\x92\x65\x07\x77\xd7\x77\x28\x5c\x36\x4d\x00\xff\x5f\xcb\x97\x4d\xe3\xd2\xe3\xae\xc5\x60\xbe\x5f\xbe\x28\x31\x09\xab\x6a\x4c\x3a\x1b\x82\x4a\x66\x0f\xbb\xe9\x2d\xae\x8f\x4b\xed\xd2\x16\xab\xbd\x0a\x78\x97\x92\x62\xd3\xb8\x73\xf7\xc2\x62\x87\xdd\x8f\x81\x42\x62\xfd\x6f\xdc\xf7\x55\x14\x4b\xa3\xbc\x8e\xa0\xb0\xd8\xc0\x3e\x38\xac\xff\x83\x05\xc6\x24\xaf\x21\x7c\xda\xf8\x1d\x6b\x8c\x45\x71\xd6\xaf\x34\x16\xc1\xa4\xb4\x2d\x38\x76\x78\xec\x22\x89\xfa\x9a\x7a\x1b\x78\x00\x87\x27\x6c\x1b\xcd\x89\xaa\x5a\x65\x95\xa5\xf7\xad\x76\xc4\x67\xc8\x0f\x51\xc2\x2a\xb6\x28\x55\x80\xf6\x81\x52\x4b\xf1\xa4\xdc\xa5\x42\x15\x29\xa2\xcb\x2d\xf5\x3f\x5c\xf2\x2b\x53\xed\x7c\x76\x3d\x7f\xa0\x8a\x57\xb1\x35\xac\xee\x9b\xbf\xdf\xab\xa0\xd5\xb3\xa1\x8a\x56\xdf\x5c\xa3\x2a\x86\xc2\x6f\x32\xf2\x43\x67\x7d\xa5\x5b\x3a\x98\x59\xb9\xdc\x05\xc1\xa1\x33\x5a\xb7\x0c\x15\x12\xb1\x67\xf4\xc1\xc2\x89\x2d\xb3\x27\x5d\x11\xb5\x7b\xa6\x5b\xd8\xc2\x3e\x7d\x0e\x4f\xf4\xd1\x1a\x05\x87\x4a\x14\xf4\x0e\x94\xf0\xec\xff\x3f\x56\xcf\xa8\x95\xf1\x83\x55\x35\x1a\x63\xe8\xe3\x2c\x6b\x84\xf3\x9c\x83\x68\xe3\x81\xe1\x2a\x47\x51\x4c\x7b\xb8\x5a\x47\xcf\xb6\x87\x8b\x1d\x45\x56\xc8\x88\xf6\x3d\x62\xed\x81\x5f\x2d\x23\xca\x0d\x69\xb7\x6e\x4c\xcd\x8c\x28\x3f\xe5\xc1\x2a\x67\x3c\x18\xb3\x5c\x15\x8d\x98\x59\x0f\x5f\x4b\xe3\x30\x16\x11\x15\x35\x62\x4a\xce\xf8\x2a\xfb\x3f\x01\x00\x00\xff\xff\x7d\x8f\xa4\x18\xf5\x65\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 26101, mode: os.FileMode(420), modTime: time.Unix(1553292575, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1541454909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x4b\x6b\xe4\x38\x10\xbe\xeb\x57\xd4\x86\xb0\xd8\xd0\x71\x2e\xcb\x1e\xb2\xe4\x10\x86\x19\x68\xd8\x0c\x21\x81\xbd\x34\x39\x68\xdc\x65\x47\xac\x2c\x19\x49\xce\x4c\x63\xf4\xdf\x17\xc9\xf2\x43\x8e\xd3\x8f\xd9\x24\x0b\x9b\x4b\xda\x56\x3d\xbf\x2a\x7d\x55\xae\x69\xfe\x37\x2d\x11\xda\x16\xb2\x07\x34\xd9\x27\x29\x0a\x56\x36\x8a\x1a\x26\x45\xf6\x95\x56\x08\xd6\x12\xc2\xaa\x5a\x2a\x03\x67\xa5\xcc\x68\x2d\x15\x1a\x99\x31\x79\x89\x1c\x2b\x14\x86\xf2\x33\x42\x9e\xa9\x82\x84\x00\x00\xb0\x2d\x0a\xc3\xcc\xce\x29\xeb\x5b\x5a\xc3\x35\x54\xb4\xde\x68\xa3\x98\x28\x1f\x07\x9d\x6c\x1d\xe4\xa0\xf5\x6a\xee\xaf\x6d\x2f\x40\x51\x51\x62\x17\xcc\x43\x8d\x39\x2b\x58\xee\x83\xd1\x2e\x90\x51\x10\x58\x01\xfa\x49\x36\x7c\x7b\x8f\x25\xd3\x06\x55\x24\x0d\x19\x9c\x67\x77\xcd\x37\xce\xf2\x5b\xb9\xc5\x58\xf7\x02\xce\xc7\x10\xe1\xea\x1a\x32\x27\xc3\xb3\xcf\xe3\xcb\x8b\x89\xc2\x59\xdb\x06\x81\x7b\xd4\xc6\x1d\x5b\x7b\x76\xe5\x62\x98\x9a\xb1\xb6\x4f\x68\x15\xb9\x42\xb1\x9d\x7b\x9f\xbc\xb2\x24\xc2\x2c\xa7\x06\x4b\xa9\xd8\xff\x10\x38\xd9\xa8\x1c\xdf\x05\x3c\xca\x19\xd5\xef\x88\xd8\xc5\x07\x42\xd6\xb6\x21\xaa\x73\xb6\x82\x73\x9f\xd9\x44\xe9\xa6\xcb\x14\x62\x8c\x7b\xb9\xb7\x03\x76\x4f\xa3\x8a\x2d\xfe\x58\xc0\x7a\xf3\xb8\x79\xec\x7e\x7e\x38\xc6\x0e\x81\xd9\xfd\x1c\xa0\x60\x05\x70\x14\xfd\xf1\xba\x0b\x1e\xac\x5d\x0c\x37\x0e\xd9\x17\x20\x97\x55\x2d\x1b\xb1\x9d\xd4\x60\x34\x12\x29\xf6\xf6\xda\xa9\x89\x41\xdd\x5a\x1f\xa5\xfb\xbf\x1a\x81\x05\xbb\xb7\x28\x76\xd5\xb6\x80\x5c\xbb\x74\x04\xe3\xab\x9f\xac\x5b\x4a\xc8\xe5\x25\xf8\xe0\xff\x42\xa5\x1d\x98\x0a\x4d\xa3\x84\x06\xf3\x84\x90\x37\x4a\xa1\x30\xf0\x1c\xce\x64\xe1\x5f\x57\x3e\x59\x52\x34\x22\x8f\x74\x93\x14\x0a\x2e\xa9\xf9\xfd\x37\x68\x83\x9d\x61\x78\xdc\xdc\xad\xd7\xa2\x90\x59\xef\xc6\x65\x48\x88\xd9\xd5\xc1\xdc\x2d\x15\xb4\x44\x05\xda\xa8\x26\x37\xad\x25\xde\x7c\x52\x44\xa7\x29\xf4\x1d\xfb\x45\xc9\xca\x55\x33\x11\xae\xa4\x1d\xbc\x29\x2c\xde\x6a\x9f\x6a\x88\x66\x3e\x7f\x36\x4e\xfd\x91\x1c\xe3\xed\x53\x47\xbf\xbb\x24\xf0\xf0\xee\x74\xaf\x11\x83\x6f\x7a\x3b\xc7\xb9\xf7\xd7\x3b\xe9\x2e\xf3\xd1\x8e\x47\xf6\xdb\xf8\x9f\x47\xba\x12\xbb\x84\x8a\x31\xbf\x84\x2d\x78\x4a\x7b\x57\xac\x00\x06\xd7\x50\x64\x2f\x4a\x43\xc5\x2e\xfd\x03\x7e\x61\xd9\x5a\x7f\xae\x6a\xb3\x4b\xd2\xc9\x85\xea\xa1\x89\x08\x64\xc9\xd4\x80\xfb\xc9\xe6\xc2\xbb\xd8\x5c\xc0\x51\xec\xd2\x03\x58\x14\x8c\x7e\xe3\x98\xf4\xb5\x5b\x84\x60\xfe\xae\xd3\xe9\x91\xd1\xdf\x99\xc9\x9f\x86\xea\x87\x68\x07\x16\xdf\xc3\x7b\x3f\xcd\x79\x39\xd5\xdd\xbe\xf6\x62\x90\x8c\x64\x7f\x35\x07\xed\x2b\x7e\x7f\x45\x25\x49\xc9\x02\x6d\xcc\x1e\xb7\x58\xd0\x86\x9b\x17\x66\x05\xe3\xa1\x1a\xaf\x02\xdd\xd1\xe5\x7e\x8c\x23\x3a\x8e\x6e\xd5\x30\x6e\x36\xbd\x01\xbf\x94\x1e\x6a\xf2\xae\x48\xae\x17\x1e\xbc\xd9\xa8\xd7\xf7\x57\x74\xd6\x51\xa1\x45\x66\x0d\xd6\xdd\x9e\xf4\xb8\xfe\x3a\x90\xfc\x72\x38\xfa\xcd\x3a\x4c\x48\x33\xcc\x2e\x7d\x2f\xa5\xf9\x6f\x3a\xf0\xd7\x25\x85\x3b\xde\x28\xca\xc1\xda\x3f\x99\x76\x03\xe1\x70\x27\xbe\x5d\x63\x4e\xc1\x3e\xa9\x53\xf4\xde\x56\xd1\x27\xf7\xca\x3d\xf2\xae\x70\x4f\xac\xd6\xc9\xd4\x6b\x74\xd2\x55\x48\xcd\xf9\x5f\x2d\xc9\x38\x5f\xee\x8b\xac\x0a\x13\xf7\x3a\x72\xe9\x26\xaf\x5b\x09\xc2\xe1\x74\x1b\xf0\x62\x93\x08\x6e\x27\x6a\xfd\x36\xd0\x3d\x45\x81\x4e\xc5\xc6\xbd\xa0\xf7\x6e\x89\xf7\x77\xc3\x79\x00\x86\xa1\x1e\xbc\x52\xce\x01\x7f\x30\x6d\xdc\xed\x67\xc3\x79\x70\x16\xe9\x24\x8e\x29\x0e\x0e\xc4\x25\x91\x8f\xdf\xfb\xf7\x5e\x8e\xd3\x3e\x72\x6c\x40\xcf\xcf\xf9\x2f\x52\x0d\x79\x4f\x21\x74\xc5\x0b\xab\x00\x14\x52\xf9\xe7\x92\x3d\xe3\xb8\x99\x0c\x88\xce\xed\x1c\xe2\xe6\x98\x99\x5f\xe3\xa3\x23\x60\xfd\x58\xc2\x99\x6e\xe4\xff\xea\xa3\x6a\xff\x92\x7e\x04\x49\xc5\xbb\x8a\xa3\x26\x4b\xfe\x09\x00\x00\xff\xff\xec\x98\x22\xd7\x79\x11\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 4473, mode: os.FileMode(420), modTime: time.Unix(1537418981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x5b\x6f\xdc\x36\xf6\x7f\x9f\x4f\xc1\xff\xc0\x4d\x67\x82\xb1\x9c\xe7\xe9\xdf\x05\xb2\x4e\x52\x18\x1b\xb7\x46\x1c\xa4\x0f\x41\x50\xd3\xd2\xd1\x98\x8d\x86\x9c\x50\x94\x63\xef\x40\xdf\x7d\xc1\x9b\x44\xea\x32\xa2\xc6\x76\xd6\x8b\xb5\x1f\x5a\xfb\xf0\xf0\xc7\x73\xe3\xe1\x21\x45\x66\x83\xe3\xaf\x78\x05\x68\xbb\x45\xd1\x05\x88\xe8\x84\xd1\x94\xac\x0a\x8e\x05\x61\x34\xfa\x1d\xaf\x01\x95\xe5\x64\x42\xd6\x1b\xc6\x05\x9a\x4d\x10\x42\x68\x9a\xae\xc5\x54\xff\x96\xdf\xd1\x78\x3a\xd1\xbf\xaf\x58\x84\x37\x8c\x83\x60\x11\x61\x47\x90\xc1\x1a\xa8\xc0\x99\xe6\xdc\x6e\x11\xc7\x74\x05\x28\xba\xd8\x40\x1c\x7d\xbc\xdb\xc0\x39\x67\x37\x24\x01\x9e\xa3\xc3\xb2\xd4\x10\x52\x0a\x54\x96\x55\x17\xa0\x89\x6a\xec\x82\xf8\x84\x33\x92\x28\x31\x47\x00\xcd\x27\x93\xed\x16\x1d\x64\x58\x40\x2e\x3e\x01\xcf\x09\xa3\x68\x79\x6c\x20\xdf\x2b\xf2\x6b\x21\x38\xb9\x2a\x04\xe4\x96\x41\x4a\x50\x8d\x7e\x40\x16\xe8\x00\x68\xb1\x96\xfd\xae\x0a\x92\x25\x6f\x69\xb1\xce\x35\x44\x13\xba\x2c\x27\x47\x47\x52\x00\xd5\x43\xa9\x8d\xca\x12\x71\xd8\x70\xc8\x81\x8a\x1c\x89\x6b\x40\x1b\x96\xe7\xe4\x2a\x03\x74\x83\xb3\x02\x72\x94\x32\x8e\xb0\x95\x42\x29\xa3\xbb\x57\x92\x19\xbf\x4c\xa3\x89\x90\x88\x2d\xfc\x5c\x70\x42\x57\x93\x49\xcc\x68\x6e\xbd\xb6\xdd\x1e\x5a\x0d\x28\x5e\xc3\x02\x1d\xa8\xd1\xa4\x16\xba\xf3\x27\x3d\xb8\x31\xa1\x11\x9b\xea\x91\x9a\x12\xeb\xae\x92\x41\xff\x56\x96\x91\x35\x75\xd5\xa5\x25\xd5\xb1\x56\xc5\xf6\xf0\x9c\xa3\x7c\x53\xff\x3e\x91\xd2\x92\x14\x51\x26\x8c\x6f\xce\x58\x02\x59\xf4\x06\x04\x8e\xaf\x21\xa9\x0d\xeb\xb6\xbe\xa5\x82\x88\x3b\x63\x9c\xd3\x04\xd4\x9f\x4d\xd1\x2b\x3a\x4b\xd5\xdf\xec\xea\x6f\x88\x45\x34\xb9\xc1\x3c\x0c\xef\x18\x55\xb1\x1d\x55\xc4\xad\x52\x46\xb2\x2e\x51\x15\x81\x0e\xd4\x07\xc8\x85\x6c\x2d\xcb\xe9\x42\xb1\x9e\x60\x01\x2b\xc6\xef\x96\x5d\xac\xac\xe0\x71\xe5\x64\xcd\x7f\xae\x27\xea\xb2\x0d\x6d\x5a\x6a\x4e\x4e\x6e\xb0\x90\x9c\x4d\x46\xdd\x50\x96\x8b\x49\x39\xd2\xd6\xdb\x6d\x17\xc7\x69\xfe\x81\x31\x31\xe4\x8b\xf3\xac\xe0\x38\x43\x65\xf9\x9e\xe4\xc2\xf5\x06\x46\x99\xa4\xb0\x34\xa0\x6f\x15\xe8\x21\x63\x7c\xfe\xf2\xb2\x97\x53\x2a\x7c\x74\x84\x9c\xe8\x10\x05\xa7\x3a\x34\x48\x67\x68\xe4\x88\x50\xf5\xa7\x94\x36\x9a\xa4\x05\x8d\xd1\x8c\x05\xca\x32\xaf\x46\x9a\xcd\xbb\xe3\x46\xf9\x4c\x4b\xd1\x8f\x59\x87\xdf\x44\xcb\x7f\xc2\x36\xb5\xec\x18\x6d\x18\xa1\x02\x38\x12\x0c\x61\x14\xcb\x36\x29\x70\x98\x88\xe3\x55\x92\x83\x77\xa8\x93\x12\x7c\x95\x41\x6e\x75\x52\x62\x2c\x8f\x11\xde\x6c\x80\x26\xb3\x30\xf0\x6d\xb9\x40\x2c\x8a\xa2\xb9\x6b\x96\x17\x12\xca\x28\xfe\x5a\xa1\x19\xd0\xdc\x73\x93\x60\xea\x4f\x8c\x28\x7c\xd7\xa3\x1b\x3f\x3e\x96\x1d\xb4\x2c\x33\x3b\x7e\x14\x45\xdd\x26\x19\x34\x15\x2b\xc4\x3d\x2d\x25\x97\x8c\xbf\x16\xd2\x14\x12\x48\xe7\x79\x2b\x97\xce\x4d\x76\x9c\x6a\x18\x56\x08\xd5\x21\x9a\xed\x9a\x2d\x73\x8d\x5f\x7a\x71\xca\x0a\x61\xdc\xa1\xe6\x5b\xcc\xe8\x0d\x70\xe1\x7a\x43\x45\x22\xed\xd3\x7b\x3f\x73\xcb\xff\xf6\x87\x9d\x92\xc4\xb7\xe7\x0e\xce\x6d\xe9\x9a\x8d\x08\x58\x3b\x76\xdb\x69\x31\xc9\xbb\xdb\x26\x6f\x20\xc5\x45\x26\xfe\xe0\x09\x70\x2f\xbf\x24\xba\x01\x31\xd9\x42\xe8\x0a\xa5\x04\xb2\x24\xb7\x61\x1a\x33\x2a\x80\xee\x61\x18\x77\xc0\xd9\x1c\x7d\xfe\xa2\xd7\xff\x46\x72\xb1\xe4\x5a\xb9\x46\x45\xf5\x87\x11\xab\x2e\x80\x9a\xe5\x8c\xad\xaf\xaa\x15\xce\x5f\xa3\xfc\xf5\x5c\x9b\x48\x9b\xc4\x02\xb8\xd6\xb8\x31\xb4\xfb\x6a\x6f\xb0\x67\x73\x44\xa8\xe8\x4a\xa8\x20\xa2\xd7\xe7\xa7\xa7\x34\x65\x91\x53\x97\xe9\x9a\xce\xc8\x2a\x97\x40\xbb\x1c\x0e\xd4\x15\xcd\x7a\x62\x2d\x59\xa4\x12\xb8\xd9\xcd\xae\xf9\xc3\xcb\x97\xa9\xd9\x8a\x58\xca\xdf\xf0\xca\x6e\x6f\x6c\xb7\xaa\x52\xfc\xc8\xde\xc9\x50\x42\x07\x52\x5b\x94\xe2\x2c\x07\x55\x00\x7b\x8a\x49\xbb\xa8\x91\x2d\x80\xb4\xd7\xe5\xdf\x39\xa3\xcb\xe9\xe1\x14\x5d\xa9\x5f\xfe\x52\xfa\x18\xdf\x4c\x2f\x75\x2f\x59\xe6\x47\x67\x85\x80\xdb\x16\xff\xe1\xf4\xd2\xf8\xf8\x77\xf8\x3e\x60\x37\xbb\x5a\xc9\xfc\xdc\x9f\x73\xa4\xac\x2a\x06\x06\x00\x67\xf3\xdd\x20\x8d\x50\x78\xb1\x8b\xb7\x9e\x13\xae\x81\x96\x3b\xe2\x67\x31\x71\x42\xfe\xd0\xdd\x1b\x48\x7f\xc8\x64\x92\x33\xee\xec\x25\xd0\x6c\xc0\x9d\x73\x6f\x76\x99\x9a\x2c\xbf\x66\x45\x96\xfc\xc9\x89\x80\x53\x4a\x04\xc1\x19\xf9\x17\x70\xe9\x66\xb5\xd9\x90\x43\xe9\x39\xd8\x08\x8d\x83\xe8\xbc\xb8\xca\x48\x2c\xb5\x41\x0d\xd8\x03\x42\x89\x4a\x8f\xdf\x3b\x60\x41\x78\xe0\xcd\xbe\x24\x35\xdd\x3d\x7a\x17\xed\xd0\x4d\x03\x61\x24\x33\x27\x43\x0a\xff\xce\xf2\xad\xaf\xb2\xb7\x09\x65\x67\xb4\x3c\x50\xa1\x86\xbc\x4a\xcd\x9d\x7d\x63\x14\x4b\x49\x63\xe5\xd0\x7b\x26\x4f\xaf\x9f\x73\x54\x50\xf2\xad\xb0\x65\xab\xec\x33\x52\x57\xd9\x65\x36\x47\xfe\x6a\xa1\x4b\x7d\xdd\xd7\x91\xc6\x06\xa7\x5d\xed\xa2\x6a\x80\x9a\x29\x3a\xd1\x85\x00\x24\x76\x1e\x57\x5e\x96\x09\xa9\x01\x31\x9d\x4e\x1a\x41\xb0\x8f\xc1\x2e\x40\x38\x52\xe6\x20\x1e\xc7\x60\xde\x30\x33\x92\x18\xa3\xcd\x03\xad\x16\x66\x2e\x74\x8c\x48\xf2\x10\x46\xe9\x5a\x6e\xaf\x31\x4f\x62\x96\x40\xd2\x5c\x78\x55\xc2\x0f\x36\xc4\xde\xab\xed\x78\x2d\x7a\xeb\x28\xbb\x6d\xec\xa9\xa7\x82\x74\x51\xca\x3c\xed\xc2\x69\xa4\xc5\xdc\x10\xb4\xad\x79\xcc\xc9\x46\xd4\x27\x51\x6f\x58\xec\x57\xa4\x2c\x2e\x54\xa6\x53\x3c\xb2\x1a\xae\xe7\x4b\x68\x44\xbc\x61\x71\x47\x12\x51\xe2\xc2\xb7\x5e\x79\xa6\x9f\x29\x4b\x58\xfc\x65\xda\x4c\x0b\x8a\x7c\xa1\x0f\xb0\xbc\xf4\xe1\xb3\x5d\x4a\x7b\xe5\xf1\x3f\x70\xfc\x55\x90\xf8\x6b\xbe\x43\xf1\xcb\xae\x29\xd5\x55\xf9\x05\x18\x39\x34\x5d\x28\xf9\x5b\x66\x31\xb2\xa7\x6b\x11\x5d\x6c\x38\xa1\x22\x9d\x4d\xff\xff\xa7\x7c\xf9\x53\xfe\xeb\x54\xee\xe6\xea\x25\x48\x05\x48\x4d\xd2\x99\x7a\xde\x0a\x8a\xc0\x4a\xb1\x8a\x0e\x5d\x4f\xfc\x06\x14\x38\x16\xf0\x1b\x08\x01\x1c\x45\xad\x72\xe1\xe8\x08\xfd\x06\x42\xaa\xd8\x4a\x51\x6e\xf4\x74\x32\x98\xac\xc2\x21\x06\x72\xd3\xcc\xb0\x07\x3b\x6c\xd6\x33\xe2\x6c\xee\x8f\x63\x4f\x13\x7d\x93\xea\x04\xdb\x5a\x7f\x1a\x45\x7e\xdb\x04\x17\x3b\x4c\x70\xd1\x63\x82\x6a\x91\x59\x91\x1b\xa0\x0f\x6c\x85\x9e\x41\x67\x4e\xd2\xe8\xb4\x47\xb5\x12\x75\x5b\x02\x1d\x23\x07\xa1\x31\x03\x9a\x13\x00\xd3\x04\xcd\xfa\x66\xc1\xbc\xdd\xa4\xcf\x01\xe7\xc6\x6c\x1f\xd9\xc5\x06\xf3\x1c\xbc\x50\xc9\x35\xe9\x5e\x4b\x8f\x05\xee\x3d\x03\x68\x56\xfc\x9a\x7d\x60\x8f\xd0\xae\xe2\x03\x66\x93\x93\xb4\x5b\xa6\x5e\xa2\x17\xd2\x07\x3e\x5d\x6e\x18\x1a\x65\x6f\x4f\xa6\x97\xcb\xb7\xfe\xb4\xa1\xaa\x18\x92\x80\xb6\x60\x5c\x70\x0e\x54\x20\x42\x53\xc6\xd7\x3a\x61\xe7\x82\x71\x48\xe4\x4a\xac\x8f\xbe\xf4\x1e\xb2\xe0\x10\xbe\x9c\x9b\xa1\xa4\x4d\x39\x67\xdc\x9a\x50\xfd\x91\xfb\x87\x28\x6f\x15\x6d\x6b\xd3\xf0\xb7\x82\x70\x48\xde\xee\x62\xec\xfa\x6e\x33\x68\x57\xe7\xac\xf9\x23\xc7\x34\x27\x52\x6b\xaf\x2d\x7a\x7b\xbb\x61\x39\xd4\xbb\x5a\x43\xfe\x60\x64\xf2\xb9\xe5\x22\xa4\x26\xc9\x54\x27\xe3\xa9\x6d\x96\x6d\x9c\xfb\xa2\x5b\x7b\x58\x28\x93\xc8\xfd\x35\xbb\x67\x8e\xcd\x7f\x51\x78\xff\x77\x8c\x28\xc9\x9c\xc8\x6a\x98\xaa\x3a\x4e\xf2\xe9\x0b\xd9\xd9\x1e\x2c\xf9\x05\x41\xa7\x32\x82\xac\x61\x94\x2a\x1f\xc9\x1a\x9e\xa2\x22\x70\x2b\x80\x53\x9c\x8d\x52\xe6\xad\xe9\xf4\x14\x15\x22\x54\xc0\x0a\xf8\x28\x7d\x4e\xa9\x78\x8a\xaa\xa4\x19\xc3\x62\x94\x22\xef\x64\x8f\x27\xa2\xca\x2e\xcd\x38\xa4\x1d\x7a\x75\x0b\x1a\xd5\x59\xb2\x47\x64\x68\x88\x0a\x23\xac\xcd\x38\x9a\x79\x72\xbd\x27\xb9\x98\xce\x1b\xc4\x33\xbc\x99\xce\xad\xc0\xe6\xd8\x3a\x2f\xae\x9c\x53\xeb\xee\x75\xbf\x96\xb1\xd6\x32\x2f\xae\x86\x55\x0a\x52\xab\x56\x6d\x87\x82\xd1\xeb\x2c\x63\xdf\x21\x39\xb9\x66\x24\xae\xbf\x30\xef\x8a\x26\x9d\x76\x4f\xa9\x3a\xf2\x6f\x04\x93\xce\xe2\xb3\x9e\x98\x5a\xd4\xdb\x35\xd9\xef\x6f\x46\x68\x4b\x80\xcb\xe9\x02\x4d\x2f\x25\x5a\xb9\x50\x4b\xf8\xeb\x42\xb0\x95\xa9\x08\x93\x1d\x91\x79\x1f\x37\xd7\x42\x60\x1e\x64\x83\x73\x2c\x4b\x53\x1a\x36\x97\x16\x6a\x43\xd4\x1c\xe3\x52\xab\xe7\xac\x8b\x8f\xa1\xd9\x4a\xa0\xe8\x0c\xdf\xbe\x07\xba\x12\xd7\xe8\x55\x88\x6e\x67\xf8\x96\xac\x8b\xb5\xee\x12\xaa\xa1\xa4\xd6\xe3\x48\x8a\x3a\xe8\x7e\x34\x95\x08\x1d\xa5\x12\xa1\x7b\xaa\x54\x8d\xf3\xf8\x2a\xe1\x5b\x75\xcb\x03\xbd\x8a\x5e\xf5\x15\x49\xe1\x29\xdf\x38\x71\x44\xc6\xaf\x7c\xf8\xc9\xdc\x01\x79\x38\x7d\xcd\x09\x41\xa8\xd0\xc1\xeb\xed\x42\x56\xd7\xb3\x86\xd8\xf3\x87\xf6\xd3\x50\x20\x3e\xa4\xd7\x74\x9c\x8e\xf7\x9a\x95\xe2\x11\xbc\x16\x28\xf3\x3e\x4e\xab\xa5\xfe\x41\x4e\xab\xbe\xff\x44\xee\x01\xb8\xf3\x7d\x48\x7d\x69\xee\xbc\xbe\xd6\xb2\x84\x84\x5b\x5b\x6d\x95\xea\xce\x27\x9f\x5a\x7f\x4d\x0c\x2d\xaf\x82\xf5\x3c\xec\xa9\xa7\x02\xac\xe0\x29\x7c\x53\xa9\xaa\x24\xab\xae\xdb\xe9\x0d\x69\x6d\x08\xf7\xee\xd9\x49\x91\x0b\xb6\xb6\x97\x09\x6a\x84\xa8\x1a\xe0\x60\x8d\x37\x1b\x42\x57\xea\x02\x9b\x3a\x76\xae\x91\xce\x74\x53\x64\xfe\x8f\xa6\xf5\x6d\xc4\x96\x38\x8e\x93\x48\x5a\xa3\x76\xfb\xc2\xe0\x5a\x8f\xb0\x87\xb3\x71\x97\xc9\x49\x8a\x32\xa0\x8d\xba\x77\x8e\x7e\x45\xaf\xaa\xa1\xcc\x51\x87\xcf\x62\x46\x70\x31\xa0\xa3\x6f\xd5\x1b\x5a\xbd\xec\x59\x2c\xc9\xc2\xbf\xc9\xc9\x16\x92\x92\x58\x99\xf6\x1d\xe3\xd5\x46\xdf\x3b\x08\xaa\xa8\x1e\x7b\x75\xf4\xac\x8f\xd4\xea\xcb\x8f\xea\x32\xe1\x57\xb8\xb3\x07\x1a\x43\xe7\xae\x7d\x32\xcc\x14\x90\xfd\x68\x53\x67\x98\x1e\x71\xb6\x95\xf1\x6e\x16\x88\x7d\x35\xfe\xef\x1d\xb8\x3e\xd3\x38\xc3\x9b\xcf\x72\xa8\x2f\xbf\xc8\x6e\x2d\x4b\xdf\xb8\x46\x3e\x3a\x42\x7f\x02\x8a\x59\x91\x25\xca\xb6\x29\xa1\x09\x22\x62\x81\x72\x86\x32\x10\x3f\xe7\x28\xbe\x86\xf8\x2b\x62\xe6\xfa\x19\xfb\x0e\x1c\xc5\x38\x07\x44\x68\x02\xb7\x90\xa0\x7c\x03\x31\x5a\xe3\x8d\xeb\xb3\x5d\x72\xbe\x97\x10\x27\x38\x87\x0e\x81\xed\xfd\xaa\x4e\x83\xe4\x9e\x0f\xd3\x22\xcb\x1c\x1f\xe5\x3e\xe7\x1a\x6f\x02\xbd\xd5\x33\xd6\x6c\x2e\x31\x3e\x6b\x67\x7d\x09\xf5\x55\x80\xfa\x9e\xd6\x93\xe1\xab\x1e\x1e\x7f\xeb\xde\x07\xde\xa8\x5b\x1f\x95\x19\x64\x08\xef\x42\x1b\xbe\x62\xea\x8f\x77\x3c\xc6\x0a\xdb\x66\xe6\x1d\x75\xd8\xe6\x5c\x33\xa8\x7a\x48\x11\x1a\xc7\xe2\xde\xf5\xea\xe6\x72\x33\x5d\x0e\x4e\x2b\xff\xb0\xb5\x6f\x4f\x24\x7f\x5c\xfa\xb2\xbd\xb5\x91\x3b\x9b\xe6\x71\x6a\x67\x77\xb5\xdf\x5b\xf6\xec\x43\x0f\xcb\x72\xd4\x5e\xb1\x2e\x58\xaa\x6e\x65\xb5\xf2\x2d\xda\xba\x35\x36\x95\xb5\x74\x6e\xc3\xb2\x73\x03\xba\x53\x3b\x3b\x40\xe7\xd7\x76\xf9\xe3\x35\x2c\x7b\xdc\x15\x36\x04\x07\xe5\xb9\x3f\x68\x76\xe7\x8d\xe0\xd0\xb5\x06\x0d\xce\x20\x74\xef\x03\xaf\xd3\xee\xd2\x35\x7a\x83\x73\x0c\xba\x2d\xff\x9a\xe8\x8a\xae\xd0\xd5\x3d\x18\x8f\xdb\xbb\x08\x13\x85\x0f\xb8\xe1\x10\x37\xbd\x5d\x53\xad\x2a\x0e\x57\x20\xae\xf7\x19\xb7\x06\xae\xc8\xcb\x8e\xcf\xa1\x8d\x6f\xa0\x41\x23\x39\xe7\xea\xb6\xc9\x90\xb4\xec\x75\x7b\x10\xdc\x3b\x92\x09\xe0\xea\xcb\x8c\xd3\x5a\x53\x35\xa8\xc7\x15\x86\xcb\x38\x90\x15\xfd\x27\x78\x31\x59\x53\x0d\xae\xcb\x15\x84\x6b\xbe\x87\x3a\x2d\x9a\xa2\xf1\xaa\xd6\x20\x2c\xe7\x12\x88\xd3\x5a\x53\x35\xa6\xc7\x15\x84\xeb\x1e\x80\x54\x8d\x15\x71\xd9\x3e\x24\x09\x04\x6d\x4d\x13\x4b\x5b\xb6\xf6\xec\x41\x88\xce\xa1\x46\x0d\x69\x89\xcb\xf6\xc1\x47\x20\x68\x5b\x4c\x43\x5b\xb6\x36\xa9\x21\x88\xcd\xcc\xe9\x24\xcc\x51\x79\x52\x25\xa6\x66\xa0\x57\x44\x2d\x9b\xcb\x13\x04\x7a\xce\xc9\x1a\xf3\xbb\x46\x98\xd7\x54\x0d\xeb\x71\x05\xe1\x7e\x00\x9c\x34\x13\xba\xa5\x2d\xcd\x81\x61\xc5\x11\x88\xe8\x7f\x78\xd3\x88\x9a\xb6\x6c\x1e\x41\x06\x21\x5e\xb4\xa6\xe2\x85\x33\x15\x2f\x46\x4d\xc5\x0b\xfd\x95\xd4\xc5\x52\x14\x83\x65\x5b\xc3\xb0\x8a\x2b\xf3\xc1\xbd\x06\xd3\x24\xfb\x90\xa7\x62\x08\x8b\x9c\xd6\x27\x4e\xf9\x53\x11\xb5\x88\x2e\x4f\x18\x68\x43\x44\x47\xbe\x41\xe1\xcc\x08\xfd\x5b\xd3\xe1\xba\xb9\x7b\x9b\xf1\x03\x0a\xe8\x9e\x81\x9f\x76\x25\xad\xf7\x75\xd1\x73\x19\xfd\x5c\x46\x3f\x97\xd1\xcf\x65\xf4\x73\x19\x8d\x9e\xcb\xe8\xe7\x32\xfa\xb9\x8c\xb6\x88\xcf\x65\x74\x00\xe0\x7f\x63\x19\xbd\x6d\x5f\x3d\xbf\xc7\xcd\x5b\xfd\x09\x66\xe7\x85\xd7\x80\x97\xf8\xa1\x08\xfa\x41\xe3\xa8\xf1\x3e\x7f\x79\x39\xc0\xff\x60\x6f\xf3\xc7\xc8\xf5\x1f\x7d\xa1\x3f\x46\xd0\x7d\xd5\xdb\xeb\xb5\xfe\x98\x21\x1e\xe5\xcd\xfe\x8f\xb0\xcc\x23\xbd\xdf\xdf\xdf\x76\xf7\x7b\xc5\x3f\x38\xbb\x7e\xc0\x5b\xfe\x71\x0e\xf8\x9f\x7b\xd1\x3f\xce\x3c\x4f\xfb\x79\xda\xbe\xef\xfa\xc7\xd9\x60\xff\xd7\xfd\xc3\xeb\x61\xc7\x6b\xfe\xf6\x3b\x95\x5d\xcf\xfa\xa3\xa0\x65\xd0\x7b\xdd\xdf\xe1\x9f\x61\xbf\x74\xbe\xf2\x17\xbc\x00\xff\x92\xd1\x8f\x7b\xe8\x1f\x64\x58\xf7\xb9\x7f\x80\x8d\xa2\xea\xd5\xff\x30\xef\x6c\x8e\x86\xd2\x5d\x7d\xf9\x39\xfc\x39\xd0\xd6\x06\x4e\xd0\xfb\x72\x13\x2b\xad\x67\xe6\xc3\xe3\x3c\xca\x63\xf3\xd0\xe7\xe3\x9e\xd8\x03\x8f\xa2\xc3\x55\xb9\xc7\x5b\xf2\x97\x8f\xf4\x98\x3c\xf4\x79\xf8\x43\x1b\xe4\x47\xbd\x15\x7f\xd1\xf5\x58\xfc\xde\xcf\xbf\x43\x34\xbc\x57\x52\xfe\xc8\xde\x15\x59\xe6\xe4\x07\x75\x9d\xa8\x21\x95\xf1\xc9\x3e\xc2\x69\xfc\xc1\x47\x82\xa6\xa2\x18\xfc\x47\x46\xf6\xfb\x1a\x40\x52\xd4\xf5\x08\xb0\x7d\x53\x90\x15\xa2\xef\xc1\xe6\xcb\x2e\x04\xb3\xfc\x3a\x7e\x2f\xbb\xaa\x96\x7a\xb9\xfe\x77\x00\x00\x00\xff\xff\x8b\xae\x19\xcd\xe2\x51\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 20962, mode: os.FileMode(420), modTime: time.Unix(1539631845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


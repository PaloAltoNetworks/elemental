// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\xcd\x6a\xe4\x38\x10\xbe\xfb\x29\x6a\x43\x58\x6c\xe8\x38\x97\x65\x0f\x59\x72\x08\xc3\x0c\x34\x6c\x86\x90\xc0\x5e\x9a\x1c\x34\xee\xb2\x23\x56\x96\x8c\x24\x67\xa6\x31\x7a\xf7\x45\xb2\xfc\x23\xc7\x71\x77\x27\x99\x5e\x98\x5c\xd2\x96\xea\xf7\x2b\xd5\xa7\x52\x45\xb2\x7f\x49\x81\xd0\x34\x90\x3e\xa0\x4e\x3f\x09\x9e\xd3\xa2\x96\x44\x53\xc1\xd3\xaf\xa4\x44\x30\x26\x8a\x68\x59\x09\xa9\xe1\xac\x10\x29\xa9\x84\x44\x2d\x52\x2a\x2e\x91\x61\x89\x5c\x13\x76\x16\x45\xcf\x44\x42\x1c\x01\x00\xd0\x2d\x72\x4d\xf5\xce\x2a\xab\x5b\x52\xc1\x35\x94\xa4\xda\x28\x2d\x29\x2f\x1e\x7b\x9d\x74\xed\xe5\xa0\x71\x6a\xf6\xaf\x69\x2e\x40\x12\x5e\x60\x1b\xcc\x43\x85\x19\xcd\x69\xe6\x82\x51\x36\x90\x41\x10\x68\x0e\xea\x49\xd4\x6c\x7b\x8f\x05\x55\x1a\x65\x20\x0d\x29\x9c\xa7\x77\xf5\x37\x46\xb3\x5b\xb1\xc5\x50\xf7\x02\xce\x87\x10\xe1\xea\x1a\x52\x2b\xc3\xd2\xcf\xc3\xe2\xc5\x48\xe1\xac\x69\xbc\xc0\x3d\x2a\x6d\xb7\x8d\x39\xbb\xb2\x31\x8c\xcd\x18\xd3\x25\xb4\x0a\x5c\x21\xdf\x4e\xbd\x8f\x96\x4c\x14\x60\x96\x11\x8d\x85\x90\xf4\x17\x04\x4e\xd4\x32\xc3\x9f\x02\x1e\x61\x94\xa8\x9f\x88\xd8\xc5\x09\x21\x6b\x1a\x1f\xd5\x39\x5d\xc1\xb9\xcb\x6c\xa4\x74\xd3\x66\x0a\x21\xc6\x9d\xdc\xc7\x01\xbb\x70\x50\xf9\x16\x7f\xcc\x60\xbd\x79\xdc\x3c\xb6\x3f\x4f\x8e\xb1\x45\x60\xd2\x9f\x3d\x14\x34\x07\x86\xbc\xdb\x5e\xb7\xc1\x83\x31\xb3\xe1\x86\x21\xbb\x02\x64\xa2\xac\x44\xcd\xb7\xa3\x1a\x0c\x46\x02\xc5\xce\x5e\x33\x36\xd1\xab\x1b\xe3\xa2\xb4\xff\x57\x03\xb0\x60\x16\x8b\x62\x56\x4d\x03\xc8\x94\x4d\x87\x53\xb6\x7a\x63\xdd\x92\x28\xba\xbc\x04\x17\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x9f\x10\xb2\x5a\x4a\xe4\x1a\x9e\xfd\x9e\xc8\xdd\x72\xe9\x92\x8d\xf2\x9a\x67\x81\x6e\x9c\x40\xce\x04\xd1\x7f\xfe\x01\x8d\xb7\xd3\x5f\x1e\x37\x77\xeb\x35\xcf\x45\xda\xb9\xb1\x19\x46\x91\xde\x55\xde\xdc\x2d\xe1\xa4\x40\x09\x4a\xcb\x3a\xd3\x8d\x89\x9c\xf9\x38\x0f\x76\x13\xe8\x4e\xec\x17\x29\x4a\x5b\xcd\x98\xdb\x92\xb6\xf0\x26\x30\xdb\xd5\x2e\x55\x1f\xcd\xf4\xfe\xd9\x58\xf5\xc7\xe8\x10\x6f\x9f\x5a\xfa\xdd\xc5\x9e\x87\x77\xc7\x7b\x0d\x18\x7c\xd3\xd9\x39\xcc\xbd\x6b\xef\xb8\x6d\xe6\x83\x1d\x0f\xec\xb7\x71\x3f\x0f\x74\xc5\x77\x31\xe1\x43\x7e\x31\x9d\xf1\x94\x74\xae\x68\x0e\x14\xae\x21\x4f\x5f\x94\x86\xf0\x5d\xf2\x17\xfc\x46\xd3\xb5\xfa\x5c\x56\x7a\x17\x27\xa3\x86\xea\xa0\x09\x08\x64\xce\x54\x8f\xfb\xd1\xe6\xfc\x5a\x68\xce\xe3\xc8\x77\xc9\x1e\x2c\x72\x4a\xbe\x31\x8c\xbb\xda\xcd\x42\x30\x5d\x6b\x75\x3a\x64\xd4\x77\xaa\xb3\xa7\xbe\xfa\x3e\xda\x9e\xc5\x17\x78\xef\xcd\x9c\x97\x11\xd5\xce\x6b\x2f\x2e\x92\x81\xec\xaf\xa6\xa0\x7d\xc5\xef\xaf\xa8\xc4\x49\x34\x43\x1b\x93\xcf\x2d\xe6\xa4\x66\xfa\x85\x59\x4e\x99\xaf\xc6\x6b\x40\x3f\x54\x44\x2a\x7c\x0b\xdc\x2f\x35\xff\x47\xd0\xbd\x22\x17\xba\xbf\x07\xd4\xbd\x10\xfa\xbd\x45\x69\x93\x7c\x4f\x69\x3e\xac\x52\xfe\x62\x5b\x2e\x4f\x70\x71\x06\xfc\xd7\x0f\x06\x9b\xce\x80\x7b\x3e\xec\xa3\xa3\xb6\xb2\xb6\x6b\x1f\x9c\xd9\x80\x95\x96\x7b\x6f\xd2\xfb\xfe\x74\x4d\xa8\xa0\xe5\xb9\xe4\x30\x26\xd8\x93\xfc\x7c\x38\xea\xc3\x8e\xe5\xab\xa7\xeb\xb4\x5c\xf1\xfb\x9c\xc2\x1d\xab\x25\x61\x60\xcc\xdf\x54\xd9\xab\xfb\x94\x07\x73\x0c\xf6\x51\x27\x45\x2d\x1e\x15\x75\xf4\x59\xb9\x47\xd6\x16\xee\x89\x56\x2a\x1e\x7b\x0d\x76\xda\x0a\xc9\xe9\x4d\x2d\xe7\x64\xac\x2f\xfb\x76\x2e\xfd\x6c\x74\x1d\xb8\xb4\x33\x92\x1d\xde\xfc\xe6\x78\x6e\x73\x62\xa3\x08\x6e\x47\x6a\xdd\xdc\xd6\x7e\x05\x81\x8e\xc5\x86\x09\xae\xf3\x6e\x22\xe7\xef\x86\x31\x0f\x0c\x45\xd5\x7b\x25\x8c\x01\xfe\xa0\x4a\xdb\xee\xa7\xfd\xbe\x77\x16\xe8\xc4\x96\x29\xf6\x8e\x2e\x73\x22\xa7\x7f\xa1\x2d\x36\xc7\x71\xcf\x51\xe3\xd1\x73\x13\xd9\x17\x21\xfb\xbc\xc7\x10\xda\xe2\xf9\xa1\x0d\x72\x21\xdd\x77\x41\x9f\x71\x98\x21\x7b\x44\xa7\x76\xf6\x71\x73\xc8\xcc\xaf\xf1\xd1\x01\xb0\x9e\x96\x70\xc6\x6f\xa7\x77\x3d\x7f\x97\x9f\x53\x07\x90\x54\x38\x55\x5a\x6a\x32\xd1\x7f\x01\x00\x00\xff\xff\xd9\x16\x83\x1c\x23\x13\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 4899, mode: os.FileMode(420), modTime: time.Unix(1539634375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1c\xdb\x6e\xdc\x36\xf6\x7d\xbe\x82\x1d\xb8\xe9\x4c\x30\x96\xf3\x3c\x5d\x17\xc8\x3a\x4e\x61\x6c\xdc\x1a\x71\x90\x3e\x04\x41\x4d\x4b\xd4\x98\x89\x86\x54\x48\xca\xb1\x77\xa0\x7f\x5f\xf0\x26\x91\x94\x34\x43\xf9\x92\xf5\x62\x9d\x87\xd6\x73\x78\x78\xee\x3c\x3c\xbc\x88\x25\x4c\xbf\xc2\x15\x02\x9b\x0d\x48\xce\x91\x48\x8e\x28\xc9\xf1\xaa\x62\x50\x60\x4a\x92\x3f\xe0\x1a\x81\xba\x9e\x4c\xf0\xba\xa4\x4c\x80\xd9\x04\x00\x00\xa6\xf9\x5a\x4c\xf5\x5f\xfc\x96\xa4\xd3\x89\xfe\x7b\x45\x13\x58\x52\x86\x04\x4d\x30\x3d\x40\x05\x5a\x23\x22\x60\xa1\x31\x37\x1b\xc0\x20\x59\x21\x90\x9c\x97\x28\x4d\x3e\xdc\x96\xe8\x8c\xd1\x6b\x9c\x21\xc6\xc1\x7e\x5d\x6b\x12\x52\x0a\x50\xd7\x4d\x17\x44\x32\xd5\xd8\x47\xe2\x23\x2c\x70\xa6\xc4\x1c\x41\x68\x3e\x99\x6c\x36\x60\xaf\x80\x02\x71\xf1\x11\x31\x8e\x29\x01\xcb\x43\x43\xf2\x9d\x02\xbf\x16\x82\xe1\xcb\x4a\x20\x6e\x11\xa4\x04\x0d\xf7\x3d\xbc\x00\x7b\x88\x54\x6b\xd9\xef\xb2\xc2\x45\x76\x4c\xaa\x35\xd7\x24\x42\xd2\x75\x3d\x39\x38\x90\x02\xa8\x1e\x4a\x6d\x50\xd7\x80\xa1\x92\x21\x8e\x88\xe0\x40\x5c\x21\x50\x52\xce\xf1\x65\x81\xc0\x35\x2c\x2a\xc4\x41\x4e\x19\x80\x56\x0a\xa5\x8c\xee\xde\x48\x66\xfc\x32\x4d\x26\x42\x52\xec\xd0\xe7\x82\x61\xb2\x9a\x4c\x52\x4a\xb8\xf5\xda\x66\xb3\x6f\x35\x20\x70\x8d\x16\x60\x4f\x71\x93\x5a\xe8\xce\x1f\x35\x73\x63\x42\x23\x36\xd1\x9c\x42\x89\x75\x57\x89\xa0\xff\xaa\xeb\xc4\x9a\xba\xe9\xd2\x91\xea\x50\xab\x62\x7b\x78\xce\x51\xbe\x69\xff\x9e\x48\x69\x71\x0e\x08\x15\xc6\x37\xa7\x34\x43\x45\xf2\x06\x09\x98\x5e\xa1\xac\x35\xac\xdb\x7a\x4c\x04\x16\xb7\xc6\x38\x27\x19\x52\x3f\x43\xd1\x1b\x38\xcd\xd5\x6f\x7a\xf9\x05\xa5\x22\x99\x5c\x43\x16\x47\xef\x10\x34\xb1\x9d\x34\xc0\x8d\x52\x46\xa2\x2e\x41\x13\x81\x0e\xa9\xf7\x88\x0b\xd9\x5a\xd7\xd3\x85\x42\x3d\x82\x02\xad\x28\xbb\x5d\xf6\xa1\xd2\x8a\xa5\x8d\x93\x35\xfe\x99\x1e\xa8\xcb\x2e\x69\xd3\xd2\x62\x32\x7c\x0d\x85\xc4\x0c\x11\x75\x43\x5d\x2f\x26\xf5\x48\x5b\x6f\x36\x7d\x18\x27\xfc\x3d\xa5\x62\x97\x2f\xce\x8a\x8a\xc1\x02\xd4\xf5\x3b\xcc\x85\xeb\x0d\x08\x0a\x09\xa1\x79\x44\xdf\x26\xd0\x63\x78\x7c\xfa\xfc\x72\x10\x53\x2a\x7c\x70\x00\x9c\xe8\x10\x15\x23\x3a\x34\x70\x6f\x68\x70\x80\x89\xfa\x29\xa5\x4d\x26\x79\x45\x52\x30\xa3\x91\xb2\xcc\x1b\x4e\xb3\x79\x7f\xdc\x28\x9f\x69\x29\x86\x69\xb6\xe1\x37\xd1\xf2\x1f\xd1\xb2\x95\x1d\x82\x92\x62\x22\x10\x03\x82\x02\x08\x52\xd9\x26\x05\x8e\x13\x71\xbc\x4a\x92\x79\x8f\x3a\x39\x86\x97\x05\xe2\x56\x27\x25\xc6\xf2\x10\xc0\xb2\x44\x24\x9b\xc5\x11\xdf\xd4\x0b\x40\x93\x24\x99\xbb\x66\x79\x21\x49\x19\xc5\x5f\x2b\x6a\x86\x28\xf7\xdc\x24\xa8\xfa\x09\x01\x41\xdf\x35\x77\xe3\xc7\xc7\xb2\x83\x96\x65\x66\xf9\x27\x49\xd2\x6f\x92\x9d\xa6\xa2\x95\xb8\xa7\xa5\xe4\x94\xf1\xf7\x42\x9a\x42\x12\xd2\x79\xde\xca\xa5\x73\x93\xe5\xd3\xb0\xa1\x95\x50\x1d\x92\xd9\xb6\xd1\x32\xd7\xf4\x6b\x2f\x4e\x69\x25\x8c\x3b\xd4\x78\x4b\x29\xb9\x46\x4c\xb8\xde\x50\x91\x48\x86\xf4\xbe\x9b\xb9\xe5\x7f\x87\xc3\x4e\x49\xe2\xdb\x73\x0b\xe6\xa6\x76\xcd\x86\x05\x5a\x3b\x76\xdb\x6a\x31\x89\xbb\xdd\x26\x6f\x50\x0e\xab\x42\xfc\xc9\x32\xc4\xbc\xfc\x92\xe9\x06\x40\x65\x0b\x26\x2b\x90\x63\x54\x64\xdc\x86\x69\x4a\x89\x40\xe4\x0e\x86\x71\x19\xce\xe6\xe0\xd3\x67\x3d\xff\x07\xc9\xc5\x82\x5b\xe5\x82\x8a\xea\x4f\x23\x56\x5b\x00\x85\xe5\x8c\xad\xaf\x9a\x19\xce\x9f\xa3\xfc\xf9\x5c\x9b\x48\x9b\xc4\x12\x70\xad\x71\x6d\x60\xf7\xd5\xde\xd0\x9e\xcd\x01\x26\xa2\x2f\xa1\x22\x91\xbc\x3e\x3b\x39\x21\x39\x4d\x9c\xba\x4c\xd7\x74\x46\x56\x39\x05\xda\xe9\x70\x47\x5d\x11\xd6\x13\x6b\x89\x22\x95\x80\x61\x37\x3b\xe7\xef\x9e\xbe\x4c\xcd\x56\xa5\x52\xfe\xc0\x2b\xdb\xbd\xb1\xd9\xa8\x4a\xf1\x03\x7d\x2b\x43\x09\xec\x49\x6d\x41\x0e\x0b\x8e\x54\x01\xec\x29\x26\xed\xa2\x38\x5b\x02\xd2\x5e\x17\x5f\x38\x25\xcb\xe9\xfe\x14\x5c\xaa\x3f\xfe\x56\xfa\x18\xdf\x4c\x2f\x74\x2f\x59\xe6\x27\xa7\x95\x40\x37\x1d\xfc\xfd\xe9\x85\xf1\xf1\x1f\xe8\xfb\x0e\xbb\xd9\xd9\x4a\xe6\xe7\xe1\x9c\x23\x65\x55\x31\xb0\x83\xe0\x6c\xbe\x9d\x48\x10\x0a\x2f\xb6\xe1\xb6\x63\xc2\x35\xd0\x72\x4b\xfc\x2c\x26\x4e\xc8\xef\xbb\x6b\x03\xe9\x0f\x99\x4c\x38\x65\xce\x5a\x02\xcc\x76\xb8\x73\xee\x8d\x2e\x53\x93\xf1\x2b\x5a\x15\xd9\x5f\x0c\x0b\x74\x42\xb0\xc0\xb0\xc0\xff\x46\x4c\xba\x59\x2d\x36\x24\x2b\x3d\x06\x83\xd0\xd8\x4b\xce\xaa\xcb\x02\xa7\x52\x1b\x10\x90\xdd\xc3\x04\xab\xf4\xf8\xbd\x87\x2c\x12\x1e\xf1\xb0\x2f\xce\x4d\x77\x0f\xde\x07\xdb\x77\xd3\x40\x1c\xc8\x8c\xc9\x98\xc2\xbf\xb7\x7c\x1b\xaa\xec\x6d\x42\xd9\x1a\x2d\x0f\x54\xa8\x01\xaf\x52\x73\x47\xdf\x18\xc5\x72\x1c\xcc\x1c\x7a\xcd\xe4\xe9\xf5\x0b\x07\x15\xc1\xdf\x2a\x5b\xb6\xca\x3e\x23\x75\x95\x5d\x66\x73\xe0\xcf\x16\xba\xd4\xd7\x7d\x1d\x69\x6c\x70\xda\xd9\x2e\x69\x18\xb4\x48\xc9\x91\x2e\x04\x50\x66\xc7\x71\xe3\x65\x99\x90\x02\x12\xd3\xe9\x24\x08\x82\xbb\x18\xec\x1c\x09\x47\x4a\x8e\xc4\xe3\x18\xcc\x63\x33\xc3\x99\x31\xda\x3c\xd2\x6a\x71\xe6\x02\x87\x00\x67\x0f\x61\x94\xbe\xe9\xf6\x0a\xb2\x2c\xa5\x19\xca\xc2\x89\x57\x25\xfc\x68\x43\xdc\x79\xb6\x1d\xaf\xc5\x60\x1d\x65\x97\x8d\x03\xf5\x54\x94\x2e\x4a\x99\xa7\x5d\x38\x8d\xb4\x98\x1b\x82\xb6\x95\xa7\x0c\x97\xa2\xdd\x89\x7a\x43\x53\xbf\x22\xa5\x69\xa5\x32\x9d\xc2\x91\xd5\x70\x3b\x5e\x62\x23\xe2\x0d\x4d\x7b\x92\x88\x12\x17\x7d\x1b\x94\x67\xfa\x89\xd0\x8c\xa6\x9f\xa7\x61\x5a\x50\xe0\x73\xbd\x81\xe5\xa5\x0f\x1f\xed\x42\xda\x8b\xa7\xff\x84\xe9\x57\x81\xd3\xaf\x7c\x8b\xe2\x17\x7d\x43\xaa\xaf\xf2\x8b\x30\x72\x6c\xba\x50\xf2\x77\xcc\x62\x64\xcf\xd7\x22\x39\x2f\x19\x26\x22\x9f\x4d\xff\xf1\x33\x5f\xfe\xcc\x7f\x9b\xca\xd5\x5c\x3b\x05\xa9\x00\x69\x41\x3a\x53\xcf\x3b\x41\x11\x59\x29\x36\xd1\xa1\xeb\x89\xdf\x11\x41\x0c\x0a\xf4\x3b\x12\x02\x31\x90\x74\xca\x85\x83\x03\xf0\x3b\x12\x52\xc5\x4e\x8a\x72\xa3\xa7\x17\xc1\x64\x15\x86\x52\x84\xaf\xc3\x0c\xbb\xb7\xc5\x66\x03\x1c\x67\x73\x9f\x8f\xdd\x4d\xf4\x4d\xaa\x13\x6c\x67\xfe\x09\x8a\xfc\xae\x09\xce\xb7\x98\xe0\x7c\xc0\x04\xcd\x24\xb3\xc2\xd7\x88\x3c\xb0\x15\x06\x98\xce\x9c\xa4\xd1\x6b\x8f\x66\x26\xea\xb7\x04\x38\x04\x0e\x85\x60\x04\x84\x03\x00\x92\x0c\xcc\x86\x46\xc1\xbc\xdb\xa4\xf7\x01\xe7\xc6\x6c\x1f\xe8\x79\x09\x19\x47\x5e\xa8\x70\x0d\xba\xd7\xd4\x63\x09\x7b\x05\x9a\x06\xb9\xeb\xfb\xb0\xee\xd7\x18\x3b\x56\x0a\xdd\x5a\x3e\x62\x4c\x39\xa9\xbb\x63\xf0\x25\x78\x21\x3d\xe1\xc3\xe5\xb2\x21\x28\x7e\x83\x85\xf2\x19\x14\xe9\x15\x80\x65\x59\xe8\x2d\x3c\x42\x09\x20\xb8\x68\xeb\x19\x08\x5e\x46\x28\x64\xb6\xc2\x46\x56\xc0\x8a\xf9\xcc\xb8\x6a\x9b\x89\xe7\x6e\x9e\x57\x0b\x05\xde\x9e\xa2\xec\x34\x99\x5d\x48\xe8\x7e\x06\x88\x73\xf0\x93\xe6\xec\x66\xc1\x13\x7e\xfc\xad\x82\xc5\xcc\x4d\x8d\x73\xc7\x5d\x25\x24\x38\x9d\x4d\x53\x48\x64\x4c\x96\xca\x78\x39\xa3\x6b\x00\x81\xd6\xe2\x3b\x16\x57\x20\xc3\x79\x8e\x18\x22\xa2\xd9\xe1\x9d\x7a\x3b\x38\x9c\xaa\xf5\x9a\xe6\x3e\x8b\xb0\xef\x7c\x12\x1e\xa9\x84\xba\xf0\x81\x61\xf8\xd3\xa1\x72\xa7\xb3\xc1\x34\x34\x5c\x5f\xf2\xbe\xf8\x31\x62\x87\xf1\xd3\xfe\xe8\xec\x65\x98\x73\x32\x55\x12\xe3\x0c\xe9\xe1\x98\x56\x4c\xdb\x83\xe4\x94\xad\xf5\xec\xcf\x05\x65\x28\x93\x65\x9d\x0e\x1e\xbd\x21\x51\x31\x14\x5f\x1b\x1a\x56\x72\x80\x32\x46\x99\x8d\x12\xf5\x83\xfb\x3b\x72\xc7\x0a\xb6\xb1\x73\xfa\xb7\x0a\x33\x94\x1d\x6f\x43\xec\x3b\x04\x8c\x88\xb5\x66\x46\xff\xc0\x20\xe1\x58\x6a\xed\xb5\x25\xc7\x37\x25\xe5\xa8\xdd\x22\x31\xe0\xf7\x46\x26\x1f\x5b\x56\x34\x2a\xe3\x4e\xf5\xcc\x3e\x75\x7c\x8e\x18\xf3\x45\xb7\xf6\xb0\xa4\x4c\x55\xe0\x17\x80\x03\x11\x30\xff\x55\xd1\xeb\xc4\x4b\x60\xaa\x66\x6f\xd2\x87\x2f\x64\xe7\x79\x1b\x2c\x4e\x75\xd9\xab\x8c\xc0\x6b\x34\x4a\x95\x0f\x78\x8d\x9e\xa2\x22\xe8\x46\x20\x46\x60\x31\x4a\x99\x63\xd3\xe9\x29\x2a\x84\x89\x40\x2b\xc4\x46\xe9\x73\x42\xc4\x53\x54\x25\x2f\x28\x14\xa3\x14\x79\x2b\x7b\x3c\x11\x55\xb6\x69\xc6\x50\xde\xa3\x57\xbf\xa0\x49\x9b\x25\x07\x44\x46\x81\xa8\x68\x84\xb5\x29\x03\x33\x4f\xae\x77\x98\x8b\xe9\x3c\x00\x9e\xc2\x72\x3a\xb7\x02\x9b\x33\x10\x5e\x5d\x3a\x47\x20\xfd\xb3\x52\x2b\x63\xab\x25\xaf\x2e\x77\xab\x14\xa5\x56\xab\xda\x16\x05\x93\xd7\x45\x41\xbf\xa3\xec\xe8\x8a\xe2\x14\xf1\x98\x68\xd2\x69\xf7\x84\xa8\xf3\xa3\x20\x98\x74\x16\x9f\x0d\xc4\xd4\xa2\x5d\xfb\xcb\x7e\x5f\x28\x26\x1d\x01\x2e\xa6\x0b\x30\xbd\x90\xd4\xea\x85\xaa\x04\x5f\x57\x82\xae\xcc\xf2\x22\xdb\x12\x99\xf7\x71\x73\x2b\x04\x64\x51\x36\x38\x83\x72\x9d\x43\xe2\xc6\xd2\x42\xad\xae\x43\x1e\x17\x5a\x3d\x67\x5e\x7c\x0c\xcd\x56\x02\x24\xa7\xf0\xe6\x1d\x22\x2b\x71\x05\x5e\xc5\xe8\x76\x0a\x6f\xf0\xba\x5a\xeb\x2e\xb1\x1a\x4a\x68\xcb\x47\x42\xd4\xa9\xc9\xa3\xa9\x84\xc9\x28\x95\x30\xb9\xa3\x4a\x0d\x9f\xc7\x57\x09\xde\xa8\x2b\x43\xe0\x55\xf2\x6a\xa8\x48\x8a\x4f\xf9\xc6\x89\x23\x32\x7e\xe3\xc3\x8f\xe6\x42\xd1\xc3\xe9\x6b\xb6\x9b\x62\x85\x8e\x9e\x6f\x17\xb2\xba\x9e\x05\x62\xcf\x1f\xda\x4f\xbb\x02\xf1\x21\xbd\xa6\xe3\x74\xbc\xd7\xac\x14\x8f\xe0\xb5\x48\x99\xef\xe2\xb4\x56\xea\x1f\xe4\xb4\xe6\x30\x31\x71\x17\xcf\xce\x61\xa3\xba\xb6\xd0\x7b\x17\xb2\x63\x09\x49\x6e\x6d\xb5\x55\xaa\x3b\xe7\x87\xad\xfe\x1a\x18\x5b\x5e\x45\xeb\xb9\x3f\x50\x4f\x45\x58\xc1\x53\xf8\xba\x51\x55\x49\xd6\xec\x3a\xe8\x05\x69\x6b\x08\xf7\x22\xe3\x51\xc5\x05\x5d\xdb\x9b\x29\x2d\x85\xa4\xdd\xc3\x58\xc3\xb2\xc4\x64\xa5\x6e\x43\xaa\x33\x8c\x96\xd2\xa9\x6e\x4a\xcc\xff\xc1\xb4\xbd\xda\xda\x11\x27\xd8\xe1\xb0\x54\xfb\x7d\x61\xe8\x5a\x8f\xd0\x87\xb3\x71\x9f\xc9\x71\x0e\x0a\x44\x82\xba\x77\x0e\x7e\x03\xaf\x1a\x56\x66\xc7\xcc\x47\x71\x37\x4a\x0c\x0d\xd4\xd3\xb7\xe9\x8d\x3a\xbd\xec\xc6\x3e\x2e\xe2\x0f\x78\x65\x0b\xce\x71\xaa\x4c\xfb\x96\xb2\x66\xa1\xef\xed\x2a\x36\x50\x0f\xbd\x39\xc7\xd0\xfb\xb3\xed\x4d\x5a\x75\x33\xf5\x2b\xba\xb5\x1b\x1a\xbb\x36\xf1\x87\x64\x98\x29\x42\xf6\x04\xb0\xcd\x30\x03\xe2\x6c\x1a\xe3\x5d\x2f\x00\xfd\x6a\xfc\x3f\xc8\xb8\xdd\xd3\x38\x85\xe5\x27\xc9\xea\xf3\xaf\xb2\x5b\xc7\xd2\xd7\xae\x91\x0f\x0e\xc0\x5f\x08\xa4\xb4\x2a\x32\x65\xdb\x1c\x93\x0c\x60\xb1\x00\x9c\x82\x02\x89\x5f\x38\x48\xaf\x50\xfa\x15\x50\x73\x97\x91\x7e\x47\x0c\xa4\x90\x23\x80\x49\x86\x6e\x50\x06\x78\x89\x52\xb0\x86\xa5\xeb\xb3\x6d\x72\xbe\x93\x24\x8e\x20\x47\x3d\x02\xdb\xcb\x7a\xbd\x06\xe1\x9e\x0f\xf3\xaa\x28\x1c\x1f\x71\x1f\x73\x0d\xcb\x48\x6f\x0d\xf0\x9a\xcd\x25\x8d\x4f\xda\x59\x9f\x63\x7d\x15\xa1\xbe\xa7\xf5\x64\xf7\xbd\x21\x0f\xbf\x73\x89\x08\x96\x6a\x73\xb7\x31\x83\x0c\xe1\x6d\xd4\x76\xdf\x57\xf6\xf9\x1d\x8e\xb1\xc2\x26\xcc\xbc\xa3\x36\xdb\x9c\x3b\x2b\x4d\x0f\x29\x42\x70\xc6\xe2\xdd\xd5\x0f\xa7\x9b\xe9\x72\xe7\xb0\xf2\xf7\xec\x87\xd6\x44\xf2\x9f\x0b\x5f\x76\x97\x36\x72\x65\xe3\xd1\x0a\x6e\xa9\xf8\xeb\xbd\xe5\xc0\x3a\x74\xbf\xae\x47\xad\x15\xdb\x82\xa5\xe9\x56\x37\x33\xdf\xa2\xab\x5b\xb0\xa8\x6c\xa5\x73\x1b\x96\xbd\x0b\xd0\xad\xda\x59\x06\xbd\x57\x37\xe4\x3f\xaf\x61\x39\xe0\xae\x38\x16\x0c\x29\xcf\xfd\x49\x8a\x5b\x8f\x83\x03\xd7\x1a\x04\x98\x51\xd4\xbd\xdb\x02\x4e\xbb\x0b\xd7\xd4\x03\xcc\x31\xd4\x6d\xf9\x17\x52\x57\x70\x45\x5d\x5d\xaa\xf2\xb0\xbd\x5b\x55\x49\x3c\xc3\x92\xa1\x34\xf4\x76\x0b\xb5\xaa\x38\x58\x91\x74\xbd\x3b\x01\x2d\xe1\x06\xbc\xec\x39\x5b\x0f\x0e\xd4\xa3\x38\x39\xfb\xea\xb6\xc9\x80\xb4\xec\x6d\x7b\x14\xb9\xb7\xb8\x10\x88\xa9\x03\x3e\xa7\xb5\x85\x6a\xa2\x1e\x56\x1c\x5d\xca\x10\x5e\x91\x7f\x21\x2f\x26\x5b\xa8\xa1\xeb\x62\x45\xd1\x35\x87\xeb\x4e\x8b\x86\x68\x7a\x4d\x6b\x14\x2d\xe7\x46\x91\xd3\xda\x42\x35\x4d\x0f\x2b\x8a\xae\xbb\x01\xd2\x34\x36\xc0\x65\x77\x93\x24\x92\x68\x67\x98\x58\xd8\xb2\xb3\x66\x8f\xa2\xe8\x6c\x6a\xb4\x24\x2d\x70\xd9\xdd\xf8\x88\x24\xda\x15\xd3\xc0\x96\x9d\x45\x6a\x0c\xc5\x30\x73\x3a\x09\x73\x54\x9e\x54\x89\x29\x0c\xf4\x06\xa8\x65\x73\x71\xa2\x88\x9e\x31\xbc\x86\xec\x36\x08\xf3\x16\xaa\xc9\x7a\x58\x51\x74\xdf\x23\x98\x85\x09\xdd\xc2\x96\x66\xc3\xb0\xc1\x88\xa4\xe8\x1f\xbc\x69\x8a\x1a\xb6\x0c\xb7\x20\xa3\x28\x9e\x77\x86\xe2\xb9\x33\x14\xcf\x47\x0d\xc5\x73\x7d\x4a\xea\xd2\x52\x10\x43\xcb\xb6\xc6\xd1\xaa\x2e\xcd\xed\x8d\x96\x98\x06\xd9\xaf\xc2\x1a\x84\xb8\xc8\xe9\x1c\x71\xca\x7f\x0d\x50\x8b\xe8\xe2\xc4\x11\x0d\x44\x74\xe4\xdb\x29\x9c\xe1\x30\xbc\x34\xdd\x5d\x37\xf7\x2f\x33\x7e\x40\x01\x3d\xc0\xf8\x69\x57\xd2\x7a\x5d\x97\x3c\x97\xd1\xcf\x65\xf4\x73\x19\xfd\x5c\x46\x3f\x97\xd1\xe0\xb9\x8c\x7e\x2e\xa3\x9f\xcb\x68\x4b\xf1\xb9\x8c\x8e\x20\xf8\xbf\x58\x46\x6f\xba\xdf\x31\xdc\xe3\x1a\xb7\x3e\x82\xd9\x7a\x0d\x36\xe2\x59\x87\x58\x0a\xfa\xeb\xd8\x51\xfc\x3e\x7d\xde\x75\x4d\xf7\xc1\x1e\x7a\x18\x23\xd7\x7f\xf5\xb9\x87\x31\x82\xde\x55\xbd\x3b\x3d\xfd\x30\x86\xc5\xa3\x3c\x00\xf1\x23\x2c\xf3\x48\x8f\x41\xdc\xdd\x76\xf7\x7b\x12\x62\xe7\xe8\xfa\x01\x0f\x43\x8c\x73\xc0\xff\xdd\xf3\x10\xe3\xcc\xf3\xb4\xbf\x75\xbc\xeb\x23\x11\xe3\x6c\x70\xf7\xa7\x22\x76\xcf\x87\x3d\x4f\x43\x74\x3f\x7a\xda\xf6\x46\x44\x12\x35\x0d\x7a\x4f\x45\xf4\xf8\x67\xb7\x5f\x7a\x9f\x8c\x10\xac\x42\xfe\x25\xa3\x1f\xf7\x6a\x44\x94\x61\xdd\xb7\x23\x22\x6c\x94\x34\x4f\x48\xec\xc6\x9d\xcd\xa3\xbe\xa9\xda\x78\x33\xd2\xee\x0e\x1b\x1b\x38\x51\x8f\x15\x98\x58\xe9\x7c\xb1\x15\xf1\x31\xd2\x63\xbc\x5c\x10\xfb\x16\x81\x27\xf6\x8e\x2f\xec\xe3\x55\xb9\xc7\xc3\x04\x2f\x1f\xe9\x65\x82\xd8\xb7\x06\x1e\xda\x20\x3f\xea\xe1\x81\x17\x7d\x2f\x0f\xdc\xfb\x2d\x81\x18\x0d\xef\x95\x94\x3f\xd0\xb7\x55\x51\x38\xf9\x41\x5d\x27\x0a\xa4\x32\x3e\xb9\x8b\x70\x9a\xbe\x37\xb0\x24\xa0\xef\x7b\x53\x53\x55\xec\x7c\xb5\xe6\x6e\x27\x02\x38\x07\x7d\xdf\x03\xf6\x7c\x50\x58\x89\xc1\x4f\x0a\xb7\x7f\x51\xe8\x7c\x45\xd8\xad\x5c\xda\x29\xfb\x3f\x01\x00\x00\xff\xff\x53\x8a\x27\x5f\x33\x54\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 21555, mode: os.FileMode(420), modTime: time.Unix(1539634116, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


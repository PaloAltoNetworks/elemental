// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x6b\xe4\x38\x17\xdd\xfb\x57\xdc\x2f\x84\x0f\x1b\x2a\xce\x66\x98\x45\x86\x2c\x42\xd3\x0d\x05\x93\x26\x24\x30\x9b\x22\x0b\xb5\xeb\xda\x11\x23\x4b\x46\x92\xd3\x5d\x18\xfd\xf7\x41\xb2\xfc\x90\xcb\xf5\x4a\xd2\xd5\xd0\xd9\xa4\xca\xd2\x7d\x9d\xa3\x7b\x74\x5d\x15\xc9\xfe\x25\x05\x42\xd3\x40\xfa\x84\x3a\xfd\x24\x78\x4e\x8b\x5a\x12\x4d\x05\x4f\xbf\x92\x12\xc1\x98\x28\xa2\x65\x25\xa4\x86\x8b\x42\xa4\xa4\x12\x12\xb5\x48\xa9\xb8\x46\x86\x25\x72\x4d\xd8\x45\x14\xbd\x12\x09\x71\x04\x00\x40\xd7\xc8\x35\xd5\x1b\x6b\xac\xee\x49\x05\xb7\x50\x92\x6a\xa5\xb4\xa4\xbc\x78\xee\x6d\xd2\xa5\xdf\x07\x8d\x33\xb3\x7f\x4d\x73\x05\x92\xf0\x02\xdb\x64\x9e\x2a\xcc\x68\x4e\x33\x97\x8c\xb2\x89\x0c\x1b\x81\xe6\xa0\x5e\x44\xcd\xd6\x8f\x58\x50\xa5\x51\x06\xbb\x21\x85\xcb\xf4\xa1\xfe\xc6\x68\x76\x2f\xd6\x18\xda\x5e\xc1\xe5\x90\x22\xdc\xdc\x42\x6a\xf7\xb0\xf4\xf3\xf0\xf0\x6a\x64\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x39\x8c\xdd\x18\xd3\x15\xb4\x08\x42\x21\x5f\x4f\xa3\x8f\x1e\x99\x28\xc0\x2c\x23\x1a\x0b\x21\xe9\x6f\x08\x9c\xa8\x65\x86\x3f\x05\x3c\xc2\x28\x51\x3f\x11\xb1\xab\x33\x42\xd6\x34\x3e\xab\x4b\xba\x80\x4b\x57\xd9\xc8\xe8\xae\xad\x14\x42\x8c\xbb\x7d\x1f\x07\xec\x9e\x83\xca\xd7\xf8\x63\x06\xeb\xd5\xf3\xea\xb9\xfd\x78\x76\x8c\x2d\x02\x93\xfe\xec\xa1\xa0\x39\x30\xe4\xdd\xf2\xb2\x4d\x1e\x8c\x99\x4d\x37\x4c\xd9\x11\x90\x89\xb2\x12\x35\x5f\x8f\x38\x18\x9c\x04\x86\x9d\xbf\x66\xec\xa2\x37\x37\xc6\x65\x69\xff\x2f\x06\x60\xc1\xec\x25\xc5\x2c\x9a\x06\x90\x29\x5b\x0e\xa7\x6c\xf1\x46\xde\x92\x28\xba\xbe\x06\x97\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x5f\x10\xb2\x5a\x4a\xe4\x1a\x5e\xfd\x9a\xc8\xdd\xe3\xd2\x15\x1b\xe5\x35\xcf\x02\xdb\x38\x81\x9c\x09\xa2\xff\xfc\x03\x1a\xef\xa7\xbf\x3c\xee\x1e\x96\x4b\x9e\x8b\xb4\x0b\x63\x2b\x8c\x22\xbd\xa9\xbc\xbb\x7b\xc2\x49\x81\x12\x94\x96\x75\xa6\x1b\x13\x39\xf7\x71\x1e\xac\x26\xd0\x9d\xd8\x2f\x52\x94\x96\xcd\x98\x5b\x4a\x5b\x78\x13\x98\xed\x6a\x57\xaa\xcf\x66\x7a\xff\xac\xac\xf9\x73\x74\x4c\xb4\x4f\xad\xfc\x6e\x62\xaf\xc3\x9b\xd3\xa3\x06\x0a\xbe\xea\xfc\x1c\x17\xde\xb5\x77\xdc\x36\xf3\xd1\x81\x07\xf5\x5b\xb9\x8f\x47\x86\xe2\x9b\x98\xf0\xa1\xbe\x98\xce\x44\x4a\xba\x50\x34\x07\x0a\xb7\x90\xa7\x5b\xd4\x10\xbe\x49\xfe\x82\xff\xd1\x74\xa9\x3e\x97\x95\xde\xc4\xc9\xa8\xa1\x3a\x68\x02\x01\x99\x73\xd5\xe3\x7e\xb2\x3b\xff\x2c\x74\xe7\x71\xe4\x9b\xe4\x00\x16\x39\x25\xdf\x18\xc6\x1d\x77\xb3\x10\x4c\x9f\xb5\x36\x1d\x32\xea\x3b\xd5\xd9\x4b\xcf\xbe\xcf\xb6\x57\xf1\x3d\xba\xf7\x66\xcd\xcb\x88\x6a\xe7\xb5\xad\x8b\x64\x10\xfb\x9b\x29\x68\x5f\xf1\xfb\x0e\x93\x38\x89\x66\x64\x63\xf2\x75\x8d\x39\xa9\x99\xde\x72\xcb\x29\xf3\x6c\xec\x02\xfa\xa9\x22\x52\xe1\x5b\xe0\xde\xb6\xfc\x85\xa0\x7b\x43\x2e\x74\x7f\x0f\xa8\x47\x21\xf4\x7b\x49\x69\x8b\x7c\x0f\x35\x1f\xc6\x94\xbf\xd8\xf6\xd3\x13\x5c\x9c\x81\xfe\xf5\x83\xc1\xaa\x73\xe0\x5e\x1f\x0e\xc9\x51\xcb\xac\xed\xda\x27\xe7\x36\x50\xa5\xfd\xbd\x37\xe9\x7d\x7f\xba\x26\x52\xd0\xea\x5c\x72\x9c\x12\x1c\x28\x7e\x3e\x1d\xf5\x61\xc7\x72\xe7\xe9\x3a\xaf\x56\xfc\x7f\xce\xe0\x81\xd5\x92\x30\x30\xe6\x6f\xaa\xec\xd5\x7d\xc6\x83\xb9\x2d\x04\x47\xf3\x34\x63\xfa\xdb\xb1\xb5\x5b\x42\x7e\x21\x67\x01\xe4\x27\x75\xb7\xda\xdb\xde\xea\xe4\xfe\x7e\x44\xd6\xd2\xf7\x42\x2b\x15\x8f\xa3\x06\x2b\x2d\x4f\x72\x3a\x5d\xc9\xb9\x3d\x36\xd6\x2b\x91\x50\xfa\x79\xf6\x36\x08\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x32\xb8\x1f\x99\x75\xb3\x76\xfb\x2d\x48\x74\xbc\x6d\x98\xba\xbb\xe8\x26\x72\xf1\xee\x18\xf3\xc0\x50\x54\x7d\x54\xc2\x18\xe0\x0f\xaa\xb4\x55\x6c\xda\xaf\xfb\x60\x81\x4d\x6c\xd5\xfd\xe0\xb8\x39\xb7\xe5\xfc\x6f\xd5\x7b\x5b\xe4\xb4\x9f\x10\x8c\x47\xcf\x4d\xd1\x5f\x84\xec\xeb\x1e\x43\x68\xc9\xf3\x83\x36\xe4\x42\xba\xef\x05\x7d\xc5\x61\xee\xef\x11\x9d\xfa\x39\x74\x9f\x86\xb7\xe9\x2e\x55\x3a\x02\xd6\xf3\xca\xce\xf8\x7d\xf7\x5d\x3f\x59\xec\x7f\x05\x3e\x42\xa4\xc2\x37\x01\x2b\x4d\x26\xfa\x2f\x00\x00\xff\xff\x51\x27\x8c\xfd\xd7\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5335, mode: os.FileMode(420), modTime: time.Unix(1539813059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5b\x73\xdb\xb6\xd2\xef\xfa\x15\xa8\xc6\x4d\xa9\x54\xa6\xf3\xac\xd4\x9d\xc9\x97\x4b\xc7\xf3\x25\x8d\x27\xce\xa4\x0f\x1e\x4f\x0d\x93\x4b\x19\x0d\x05\x30\x00\x68\xc7\x47\xa3\xff\x7e\x06\x17\x92\x00\x2f\x12\xe8\x4b\x8e\xcf\x1c\xe7\xa1\x95\x17\xc0\x62\x6f\x58\xec\x2e\x40\x14\x38\xf9\x8a\x97\x80\xd6\x6b\x14\x9f\x80\x8c\x5f\x33\x9a\x91\x65\xc9\xb1\x24\x8c\xc6\x7f\xe2\x15\xa0\xcd\x66\x32\x21\xab\x82\x71\x89\xa2\x09\x42\x08\x4d\xb3\x95\x9c\x9a\x5f\xe2\x86\x26\xf6\xe7\x92\xc5\xb8\x60\x1c\x24\x8b\x09\x3b\x80\x1c\x56\x40\x25\xce\x4d\xeb\x7a\xbd\x8f\x38\xa6\x4b\x40\xf1\x49\x01\x49\xfc\xf9\xa6\x80\x63\xce\xae\x48\x0a\x5c\xa8\x19\x34\x0a\x45\x04\xda\x6c\x9a\x21\x40\x53\xb4\x6f\x5b\xdb\x28\xbe\xe0\x9c\xa4\x9a\xcc\x40\x44\x9b\xcd\x64\x36\x99\xac\xd7\x68\x2f\xc7\x12\x84\xfc\x02\x5c\x10\x46\xd1\xe2\xd0\x62\x7c\xaf\xc1\xaf\xa4\xe4\xe4\xa2\x94\x20\xaa\x0e\x4a\x00\xeb\xb5\x9d\x7c\x8f\xcc\xd1\x1e\xd0\x72\xa5\xc6\x5d\x94\x24\x4f\xdf\xd2\x72\x25\x0c\x8a\x36\xea\xcd\x66\x72\x70\xa0\x64\xab\x47\x68\xae\xd1\x66\x83\x38\x14\x1c\x04\x50\x29\x90\xbc\x04\x54\x30\x21\xc8\x45\x0e\xe8\x0a\xe7\x25\x08\x94\x31\x8e\x70\x45\x85\x66\xc6\x0c\xaf\x29\xb3\x6a\x99\xc6\x13\xa9\x30\x76\xf0\x0b\xc9\x09\x5d\x4e\x26\x09\xa3\xa2\x52\x5a\x23\xbe\x3d\x8a\x57\x30\x47\x7b\x7a\x36\xc5\x85\x19\xfc\xc5\x4c\x6e\x45\x68\xc9\xa6\x66\xa6\x36\xc5\x66\xa8\xea\x60\x7e\x6d\x36\xb1\x9d\xa4\x19\xd2\xa1\xea\xd0\xb0\x52\x8d\xa8\x94\xd3\xe8\xa6\xf9\x3d\x51\xd4\x92\x0c\x51\x26\xad\x6e\x3e\xb0\x14\xf2\xf8\x0d\x48\x9c\x5c\x42\xda\x08\xd6\x6d\x7d\x4b\x25\x91\x37\x56\x38\x47\x29\xe8\x3f\xdb\xa4\xd7\x70\x96\xe9\xbf\xd9\xc5\x3f\x90\xc8\x78\x72\x85\x79\x18\xbe\x43\x54\xdb\x76\x5c\x03\xd7\x9a\x19\xd5\x75\x81\x6a\x0b\x74\x50\x7d\x02\x21\x55\xeb\x66\x33\x9d\xeb\xae\xaf\xb1\x84\x25\xe3\x37\x8b\xbe\xae\xac\xe4\x49\xad\x64\xd3\xff\xd8\xac\xd3\x45\x17\xb5\x6d\x69\x7a\x72\x72\x85\xa5\xea\xd9\xee\x68\x1a\x36\x9b\xf9\x64\x33\x52\xd6\xeb\x75\x5f\x8f\x23\xf1\x89\x31\xb9\x4b\x17\xc7\x79\xc9\x71\x8e\x36\x9b\xf7\x44\x48\x57\x1b\x18\xe5\x0a\xc2\xb2\x80\xb1\xb5\xa1\x87\xcc\x71\x7a\xf6\x7c\xb0\xa7\x62\xf8\xe0\x00\x39\xd6\x21\x4b\x4e\x8d\x69\x90\x5e\xd3\x10\x88\x50\xfd\xa7\xa2\x36\x9e\x64\x25\x4d\x50\xc4\x02\x69\x99\xd5\x33\x45\xb3\x7e\xbb\xd1\x3a\x33\x54\x0c\xe3\x6c\xcc\x6f\x62\xe8\x7f\xcd\x8a\x86\x76\x8c\x0a\x46\xa8\x04\x8e\x24\x43\x18\x25\xaa\x4d\x11\x1c\x46\xe2\x78\x96\xd4\xe4\x3d\xec\x64\x04\x5f\xe4\x20\x2a\x9e\x34\x19\x8b\x43\x84\x8b\x02\x68\x1a\x85\x21\x5f\x6f\xe6\x88\xc5\x71\x3c\x73\xc5\xf2\x4c\xa1\xb2\x8c\xbf\xd2\xd8\x2c\x52\xe1\xa9\x49\x32\xfd\x27\x46\x14\xae\xcd\xec\x56\x8f\x0f\x25\x07\x43\x4b\x54\xcd\x1f\xc7\x71\xbf\x48\x76\x8a\x8a\x95\xf2\x8e\x92\x52\x5b\xc6\xdf\x73\x25\x0a\x85\xc8\xf8\xf9\x8a\x2e\xe3\x9b\xaa\x79\xea\x69\x58\x29\xf5\x80\x38\xda\xb6\x5a\x66\x06\xff\xc6\xb3\x53\x56\x4a\xab\x0e\xbd\xde\x12\x46\xaf\x80\x4b\x57\x1b\xda\x12\xe9\x10\xdf\xb7\x13\xb7\xfa\xef\xb0\xd9\x69\x4a\x7c\x79\xae\xf0\x57\x88\xb6\x74\x9f\xa3\x1c\x68\xc4\x66\x8d\x08\x89\x1a\xf6\xe2\x25\x22\xe8\x37\xdb\xf6\x12\x91\x5f\x7f\xf5\x45\x78\x4a\xce\xd0\x21\x62\xa7\xe4\x6c\xab\x68\xde\x40\x86\xcb\x5c\x7e\xe4\x29\x70\xcf\xcd\xa4\xa6\x01\x31\xd5\x42\xe8\x12\x65\x04\xf2\x54\x54\xd6\x9a\x30\x2a\x81\xde\x42\x3e\xee\x84\xd1\x0c\x9d\x9e\x99\x30\xa0\xe5\x63\x2a\x70\xc3\x52\x1d\xda\x98\x59\x3e\x5a\xb2\x9a\x38\xa8\x1d\xd5\x54\x11\x59\xbd\xd1\xf9\x5b\x95\xbf\xad\x1b\x11\x19\x91\x7c\x66\x27\x05\xe6\x02\x3c\x71\x04\x3a\x75\x6b\x64\x90\x2a\xd3\x32\x68\x42\xd7\xf5\xc1\x01\xfa\xd8\x75\xe5\xe8\x9a\xe4\x39\x62\x34\xbf\xd1\x22\xc7\xb6\x69\x49\xae\x80\x5a\x95\xc4\xe8\x4f\x66\x7e\xa2\x15\x60\x2a\x90\x32\x20\x0e\x16\x24\xe0\x16\x4a\xaa\x44\x10\x59\xa5\xc7\x71\x6c\xf4\xf1\xa8\x0c\x3b\x6e\x91\x59\xfb\x99\x21\x63\xaf\x4c\xc3\x55\xec\x95\x85\xdd\xd5\xae\x2d\xee\x68\x86\x08\x95\x7d\x3b\x26\xc8\xf8\xd5\xf1\xd1\x11\xcd\x58\xec\x04\xde\x26\x68\xb7\x56\xe8\xe4\x00\xbb\x02\xc7\x76\xc0\xb8\x52\x5d\x14\x13\xb8\x3d\xac\x0a\xea\x76\xc7\x27\x36\x28\x2f\x13\x45\x7f\x6b\xbd\x6d\x5f\x67\xeb\xb5\x4e\x05\x3e\xb3\x77\xda\xe6\xf6\x14\xb7\x28\xc3\xb9\x00\x9d\xe1\x78\x8c\x29\xb9\xe8\x99\x2b\x04\x4a\x5e\xe7\xff\x08\x46\x17\xd3\xfd\x29\xba\xd0\x3f\xfe\xd6\xfc\x58\xdd\x4c\xcf\xcd\x28\x95\xc6\xc5\x1f\x4a\x09\xdf\x3b\xfd\xf7\xa7\xe7\x56\xc7\x7f\xc2\xf5\x0e\xb9\x55\xe1\x88\xda\x80\x87\x37\x15\x45\xab\xb6\x81\x1d\x08\xa3\xd9\x76\x24\x2d\x53\x78\xb6\xad\x6f\x63\xe7\xae\x80\x16\x5b\xec\x67\x3e\x71\x9c\xd9\xbe\x9b\xfc\x29\x7d\xa8\xe5\x24\x18\x77\x92\x45\x14\xed\x50\xe7\xcc\xf3\x9b\x36\xe8\x16\x97\xac\xcc\xd3\xbf\x38\x91\x70\x44\x89\x24\x38\x27\xff\x02\xae\xd4\xac\xb3\x49\x35\x95\xf1\xae\x2d\xd3\xd8\x8b\x8f\xcb\x8b\x9c\x24\x8a\x1b\xd4\x42\xbb\x47\x28\xd1\x6e\xe2\xba\x07\x2d\x48\x0f\x79\x7b\x2c\xc9\xec\x70\x0f\xde\x07\xdb\x77\x1d\x7c\x18\xc8\xae\xc9\x90\xcc\xae\x37\x3e\x1f\x4a\xdd\x2a\x87\xb2\xd5\x5a\xee\x29\x12\x47\x5e\x28\xee\xae\xbe\x31\x8c\x65\xa4\x15\x13\x98\xa4\xd8\xe3\xeb\x17\x81\x4a\x4a\xbe\x95\x55\x5e\xa2\xc6\x8c\xe4\x55\x0d\x89\x66\xc8\x8f\x03\x4c\x2e\x67\xc6\x3a\xd4\x54\xc6\x59\xb9\xf6\xb8\x9e\xa0\xe9\x14\xbf\xae\x36\xe1\x6a\x1d\xd7\x5a\x56\x0e\xa9\x85\x62\xda\x29\xbf\xdc\x46\x60\x27\x20\x1d\x2a\x05\xc8\x87\x11\x98\x37\x4d\x44\x52\x54\xed\xca\x61\x52\x0b\x13\x17\x3a\x44\x24\xbd\x0f\xa1\xf4\x6d\xb7\x97\x98\xa7\x09\x4b\x21\x6d\x6f\xbc\xda\xe1\x07\x0b\xe2\xd6\xbb\xed\x78\x2e\x06\x23\xe4\xaa\x2e\x30\x10\x29\x07\xf1\xa2\x99\x79\xdc\x21\xf1\x48\x89\xb9\x26\x58\xb5\x8a\x84\x93\x42\x36\xa5\xc6\x37\x2c\xf1\x73\x0d\x96\x94\xda\xd3\xe9\x3e\x2a\x12\x6c\xd6\x4b\xa8\x45\xbc\x61\x49\x8f\x13\xd1\xe4\xc2\xb7\x41\x7a\xa6\xa7\x94\xa5\x2c\x39\x9b\xb6\xdd\x82\x06\x9f\x98\x0a\xa5\xe7\x3e\xfc\x6e\xe7\x4a\x5e\x22\xf9\x3f\x9c\x7c\x95\x24\xf9\x2a\xb6\x30\x7e\xde\xb7\xa4\xfa\x22\xbf\x00\x21\x87\xba\x0b\x4d\x7f\x47\x2c\x96\xf6\x6c\x25\xe3\x93\x82\x13\x2a\xb3\x68\xfa\xdb\xcf\x62\xf1\xb3\xf8\x7d\xaa\xd2\xf5\x66\x0b\xd2\x06\xd2\x80\x8c\xa7\x9e\x75\x8c\x22\x30\x52\xac\xad\xc3\xc4\x13\x7f\x00\x05\x8e\x25\xfc\x01\x52\x02\x47\x71\x27\x5c\x38\x38\x40\x7f\x80\x54\x2c\x76\x5c\x54\x3b\x35\xeb\x74\xb0\x5e\x85\x43\x02\xe4\xaa\xed\x61\xf7\xb6\xc8\x6c\x60\xc6\x68\xe6\xcf\x53\x95\x8b\x7d\x91\x1a\x07\xdb\xd9\x7f\x5a\x41\x7e\x57\x04\x27\x5b\x44\x70\x32\x20\x82\x7a\x93\x31\xb9\xe0\xfd\x4a\x61\x60\xd2\xc8\x71\x1a\xbd\xf2\xa8\x77\xa2\x7e\x49\xa0\x43\xe4\x60\x68\xad\x80\xf6\x02\xc0\x34\x45\xd1\xd0\x2a\x98\x75\x9b\x4c\xa1\x77\x66\xc5\xd6\x9b\xc5\x0b\x03\xea\xdf\x7a\xd4\xa0\xcb\xaa\x3f\xa4\x55\x8d\xe8\x5e\x13\xf0\x1d\x0b\x36\x28\xef\x36\x5d\xdc\x74\xba\x12\x3a\xc9\x74\xda\x6c\x06\xcf\xd0\xe1\x21\x7a\xe1\xe4\xce\x07\x07\x88\xb2\x9c\x50\xb9\x40\x4b\x66\x8e\xca\x44\xdd\x58\xa5\x27\x3b\x6a\x16\xc6\xe4\x91\xf3\xaf\x7d\xe0\xb5\x75\xf9\xfb\x03\xbb\xf6\xb1\x40\xcf\xfa\x0d\x67\xde\x99\xb3\x15\xc4\x6f\xdc\xc4\x5f\x14\x2a\xb1\x08\xe2\x65\xe3\x16\x26\xb3\xa6\x2c\x69\x15\xd0\xf0\x2a\xae\x89\x4c\x2e\x51\x76\x5f\xec\x27\x58\x80\xbf\x09\x2f\xbc\x76\xc3\x47\x57\x18\x7a\x11\x3d\x8b\xfa\xc5\x34\x1b\x25\x26\xab\x73\x51\xd8\xd4\xf9\x18\x2b\x0e\x71\x51\xe4\xa6\x32\x4f\x19\x45\x94\xe4\x4d\x14\x8b\xd1\xf3\x00\x99\xda\x0a\xf7\xc8\xbc\x47\x4f\x1e\xd9\x05\xba\xcd\xd8\x67\xee\xee\xae\xd3\x43\xd1\x1c\x8e\xee\x14\x7f\x95\x3e\x9a\x71\x16\x48\x32\xf4\x93\x99\xd9\xdd\xfb\x8e\xc4\xdb\x6f\x25\xce\x23\x77\x43\x9c\x39\xea\x2f\x30\x25\x49\x34\x4d\x30\x55\x9e\xa8\xd0\xc2\xcb\x38\x5b\x21\x8c\x0c\x17\xd7\x44\x5e\xa2\x94\x64\x19\x70\xa0\xb2\x3e\xb8\x99\x7a\x45\x2a\xc1\x74\x96\x6e\x66\x8f\x02\xe4\x3b\x9b\xb4\x4f\x4a\xdb\xbc\x88\x01\xe7\xfb\xd3\xa1\x56\xa7\x53\x4d\x1b\x72\xd2\xcf\x07\x50\x4c\x6a\x1b\xf2\x6d\x6b\x30\x51\x50\x59\x80\x39\x01\xd7\xc9\x10\x49\xc1\x38\xe2\xa4\xe4\x46\x26\x34\x63\x7c\x65\xe2\x3e\x21\x19\x87\x54\x05\xf4\xc6\x80\x4c\x29\xaa\xe4\x10\x9e\x15\xd8\xa9\x54\xee\xcc\x39\xe3\x95\xa5\xe8\x3f\xb4\x95\x34\x86\xf5\x56\xc3\xd6\x55\x34\xf7\xad\x24\x1c\xd2\xb7\xdb\x3a\x56\x19\xd6\xa8\xe5\xee\x9c\x49\x7e\xe6\x98\x0a\xa2\xb8\xf6\xda\xe2\xb7\xdf\x0b\x26\xa0\x29\x8e\x59\xf0\x27\x4b\x93\xdf\x5b\xc5\xb2\x7a\xaf\x9d\x9a\x8d\x61\xea\xe8\x1d\x38\xf7\x49\xaf\xe4\x51\xa1\xb2\xf1\xa0\x1f\xfa\x0f\x58\xc1\xec\xa5\xc6\xd7\xb1\x99\x96\xa8\xea\x83\x1a\x1f\x3e\x57\x83\x67\x8d\xb9\x38\x79\x45\x2f\x33\x92\xac\x60\x14\x2b\x9f\xc9\x0a\x1e\x23\x23\xf0\x5d\x02\xa7\x38\x1f\xc5\xcc\x5b\x3b\xe8\x31\x32\x44\xa8\x84\x25\xf0\x51\xfc\x1c\x51\xf9\x18\x59\xc9\x72\x86\xe5\x28\x46\xde\xa9\x11\x8f\x84\x95\x6d\x9c\x71\xc8\x7a\xf8\xea\x27\x34\x6e\xbc\xe4\x00\xc9\xd0\x22\x15\x46\x48\x9b\x71\x14\x79\x74\xbd\x27\x42\x4e\x67\x2d\xe0\x07\x5c\x4c\x67\x15\xc1\x36\xf8\x12\xe5\x85\x73\x2a\xdc\xbf\x33\x35\x34\x36\x5c\x8a\xf2\x62\x37\x4b\x41\x6c\xb9\x01\xd2\x20\x83\xf1\xab\x3c\x67\xd7\x90\xbe\xbe\x64\x24\x01\x11\x62\x4d\xc6\xed\x1e\x51\x7d\x34\xdc\x32\x26\xe3\xc5\x87\xc2\xb9\x79\x53\xf5\x51\xe3\xfe\x61\x84\x76\x08\x38\x9f\xce\xd1\xf4\x5c\x61\xdb\xcc\x75\x50\xfd\xaa\x94\x6c\x69\x13\xcb\x74\x8b\x65\xde\x45\xcd\x0d\x11\x98\x07\xc9\xe0\x18\xab\x0c\x97\x86\xad\xa5\xb9\xae\xab\xb4\xe7\x38\x37\xec\x39\xfb\xe2\x43\x70\xb6\x94\x28\xfe\x80\xbf\xbf\x07\xba\x94\x97\xe8\x45\x08\x6f\x1f\xf0\x77\xb2\x2a\x57\x66\x48\x28\x87\x0a\xda\xcc\xa3\x20\xfa\xbc\xec\xc1\x58\x22\x74\x14\x4b\x84\xde\x92\xa5\x7a\x9e\x87\x67\x09\x7f\xd7\xb7\x01\xd1\x8b\xf8\xc5\x50\x90\x14\xee\xf2\xad\x12\x47\x78\xfc\x5a\x87\x5f\xec\x5d\xc1\xfb\xe3\xd7\x16\x1a\x43\x89\x0e\xde\x6f\xe7\x2a\xba\x8e\x5a\x64\xcf\xee\x5b\x4f\xbb\x0c\xf1\x3e\xb5\x66\xec\x74\xbc\xd6\x2a\x2a\x1e\x40\x6b\x81\x34\xdf\x46\x69\x0d\xd5\x3f\x48\x69\xf5\x31\x72\x8c\x3a\x17\x9c\xf5\x31\xb3\xbe\x60\xbc\xed\x96\x73\x23\x09\x85\x6e\x55\x71\xab\x59\x77\x4e\x8e\x1b\xfe\x0d\x30\x34\xbc\x0a\xe6\x73\x7f\x20\x9e\x0a\x90\x82\xc7\xf0\x55\xcd\xaa\xa6\xac\xae\x3c\x98\x84\xb4\x11\x84\x7b\x47\xf9\x75\x29\x24\x5b\x55\x05\xc5\x06\x43\xdc\xd4\x31\x56\xb8\x28\x08\x5d\xea\x8b\xce\xfa\xf4\xaa\xc1\xf4\xc1\x34\xc5\xf6\xff\x68\xda\xdc\x5a\xef\x90\xd3\xaa\x72\x54\x58\xfb\x75\x61\xf1\x56\x1a\x61\x43\x32\xb6\xa5\x2f\xcd\x2c\x70\x1e\x47\xf2\xa6\x00\xb7\x12\xa2\x6b\x59\xed\x8c\x79\x11\x16\x7c\xd5\x97\x76\x86\x10\x05\xe2\x69\x90\xd8\xf3\xb8\xd1\xe3\x36\xfd\xf6\xd2\x67\x3e\xb6\xd0\xea\xc7\xf0\x33\xf4\xbb\x53\x6f\xb5\xc5\x35\xbf\x8b\x5b\xf8\xb1\x38\xa0\x67\x6c\x3d\x1a\x3a\xa3\xaa\xe3\x29\x92\x87\x5f\x53\x50\x2d\x24\x23\x89\x36\x93\x77\x8c\xd7\x45\x0b\xaf\x36\x5e\x43\xbd\xee\xf5\x69\x9c\x29\x78\x37\x17\xfe\xf5\x05\xfa\xaf\x70\x53\x15\x67\x76\x1d\x45\x0d\xd1\x10\x69\x44\xdd\x2a\xf7\x00\x39\x4d\xa5\xfb\x6a\x8e\xd8\x57\x6b\xcb\x83\x13\x37\xf5\x99\x0f\xb8\x38\x55\x53\x9d\xbd\x54\xc3\x3a\x92\xbe\x72\x85\x7c\x70\x80\xfe\x02\x94\xb0\x32\x4f\xb5\x6c\x33\x42\x53\x44\xe4\x1c\x09\x86\x72\x90\xbf\x08\x94\x5c\x42\xf2\x15\x31\x7b\x4f\x8f\x5d\x03\x37\xb6\x4b\x68\x0a\xdf\x21\x45\xa2\x80\x04\xad\x70\xe1\xea\x6c\x1b\x9d\xef\x15\x8a\xd7\x58\x40\x0f\xc1\xd5\x9d\xe2\x5e\x81\x08\x4f\x87\x59\x99\xe7\x8e\x8e\x84\xdf\x73\x85\x8b\x40\x6d\x0d\xcc\x15\xcd\x14\x8e\x53\xa3\xac\xb3\x50\x5d\x05\xb0\xef\x71\x3d\xa9\xeb\x86\x25\x0c\x5a\xab\xa9\x49\x0f\x18\xa7\x3d\xcb\x21\x02\x11\x81\x30\xba\x02\x7e\x83\x70\x7a\x85\x69\x02\x29\x52\x02\xd0\xe4\xc9\x4b\x2c\xd1\x0d\x2b\xed\x59\x9c\xd6\x34\x05\x48\xd1\x45\x29\x11\xa1\x48\xb0\x15\x28\x44\x7a\x78\x25\x4a\x54\x0a\xd0\xaa\x0e\x3b\xdf\xb7\x55\x49\x9f\x11\xdf\xe4\xf5\x9d\xf8\x0c\x27\xb0\xae\x4f\x13\xad\xc3\xd5\xdd\xd6\xad\x4d\x28\xb0\xee\xb8\xed\x78\x61\xfb\x61\x65\x8f\xfb\xeb\xf5\x3d\x3b\x2e\x28\x7a\x2a\xed\xdc\x56\xc4\x85\x3e\x4f\xa8\x55\xab\x14\xb9\x0d\xdb\xee\x2f\x5f\xfc\xf9\x0e\xc7\x18\xea\xba\xbd\xd1\x8f\xaa\xed\x3a\x97\xe3\xea\x11\x8a\x84\xd6\x61\xee\xbe\xfb\xd5\x57\x5b\xe8\xd3\xc5\x4e\xcf\xe7\x5e\xfb\xd8\x1f\x4c\xc1\xd5\x3f\x17\xbe\xe8\x66\xd2\x2a\x91\xf6\x70\xb5\x8e\x88\xfc\xf2\xc2\x62\xa0\xec\xb1\xbf\xd9\x8c\x2a\x4d\x34\xf1\x71\x3d\x6c\x53\x07\x5a\xf3\x2e\x6f\xad\x1a\x46\x43\x9d\xdb\xb0\xe8\xad\x77\x6c\xe5\xae\x9a\xa0\xd7\xec\xd5\x3f\xaf\x61\x31\xa0\xae\xb0\x29\x38\x68\xcd\x7d\xa4\xf9\x8d\x37\x83\x03\x37\x1c\xb4\x7a\x06\x61\xf7\xae\x25\x39\xed\x2e\xdc\x60\x6f\xf5\x1c\x83\xbd\xca\x36\xda\xd8\x35\x5c\x63\xd7\xb7\x37\xbd\xde\xde\xf5\xcd\x38\x7c\xc2\x82\x43\xd2\xd6\x76\x03\xad\x58\x71\x7a\x05\xe2\xf5\x2e\x1f\x35\x88\x6b\xf0\xa2\xe7\x12\x4f\xeb\xe6\x4e\xd0\x4c\xce\x31\x4e\xd5\x64\x41\x86\xf6\xa6\x3d\x08\xdd\x3b\x92\x4b\xe0\xfa\x74\xdf\x69\x6d\xa0\x06\xa9\xd7\x2b\x0c\x2f\xe3\x40\x96\xf4\xff\xc1\xb3\xc9\x06\x6a\xf1\xba\xbd\x82\xf0\xda\x5b\x3c\x4e\x8b\x81\x18\x7c\x75\x6b\x10\x2e\xe7\xea\xa2\xd3\xda\x40\x0d\x4e\xaf\x57\x10\x5e\xb7\xde\x56\x37\xd6\xc0\x45\xb7\x26\x17\x88\xb4\xb3\x4c\x2a\xd8\xa2\x53\x22\x0a\xc2\xe8\xd4\xd0\x1a\x94\x15\x70\xd1\xad\xb3\x05\x22\xed\x92\x69\x61\x8b\x4e\x4d\x24\x04\x63\xdb\x73\x3a\x0e\x73\x94\x9f\xd4\x8e\xa9\x6d\xe8\x35\xd0\xd0\xe6\xf6\x09\x42\x7a\xcc\xc9\x0a\xf3\x9b\x96\x99\x37\x50\x83\xd6\xeb\x15\x84\xf7\x13\xe0\xb4\xed\xd0\x2b\xd8\xc2\xd6\xa7\xeb\x1e\x81\x18\xfd\x73\x5e\x83\xd1\xc0\x16\xed\x8a\x77\x10\xc6\x93\xce\x52\x3c\x71\x96\xe2\xc9\xa8\xa5\x78\x62\x0e\xe5\x5d\x5c\x1a\x62\x71\x55\xad\x61\xb8\xca\x0b\x7b\x4d\xac\x41\x66\x40\xd5\xf7\xc5\x75\x87\x30\xcb\xe9\x9c\xa8\xab\x7f\x35\xd0\x90\xe8\xf6\x09\x43\xda\x22\xd1\xa1\x6f\x27\x71\x76\x86\xe1\xea\xc1\xee\xb8\xb9\x3f\x13\xfc\x01\x01\xf4\xc0\xc4\x8f\x3b\x92\x36\xa9\x77\xfc\x14\x46\x3f\x85\xd1\x4f\x61\xf4\x53\x18\xfd\x14\x46\xa3\xa7\x30\xfa\x29\x8c\x7e\x0a\xa3\x2b\x8c\x4f\x61\x74\x00\xc2\xff\xc6\x30\x7a\xdd\xfd\x60\xea\x0e\xdf\x8b\x98\x53\xb2\xf0\xd7\x1a\xfa\x1f\x08\x0a\xc5\x60\x3e\xc3\x1f\x35\xdf\xe9\xd9\xae\x9b\xe1\xf7\xf6\x64\xd0\x18\xba\xfe\xa3\x0f\x07\x8d\x7b\x5e\xe3\x76\xec\xdd\xea\x11\xa1\x31\x53\x3c\xc8\x53\x42\x3f\x42\x32\x0f\xf4\xac\xd0\xed\x65\x77\xb7\xc7\x85\x76\xae\xae\x1f\xf0\xc4\xd0\x38\x05\xfc\xaf\x3e\x34\x34\x4e\x4a\x8f\xfb\xdb\x6a\xf3\xa1\xe2\x71\x8e\x89\xff\x95\xfc\xa8\xbd\xc1\x7b\x73\xe8\x61\x17\xbd\xa5\xf5\x71\x99\x5d\x5c\x53\xb5\xd5\x00\x6f\xf3\xf8\xcf\x38\xe9\xdc\xfe\x09\xa0\xdd\xe1\x47\xcf\x93\x3f\xdd\x8f\x59\xb7\xbd\xfd\x13\x07\x45\x1d\xde\x13\x40\x3d\xeb\x60\xb7\xfd\xf7\x3e\x05\x24\x79\x09\xfe\x15\xc2\x1f\xf7\x1a\x50\x90\x60\xdd\x37\x81\x02\x64\x14\xd7\x4f\x03\xed\xee\x1b\xcd\x82\xbe\x9a\x5c\x7b\x01\xc0\xee\x01\xeb\xca\x70\x82\x1e\xa1\xb1\xb6\xd2\xf9\x26\x33\xe0\x73\xc3\x87\x78\x91\x26\xf4\x8d\x19\x8f\xec\x1d\x2f\xa7\x84\xb3\x72\x9b\x07\x67\x48\x16\xfc\x7a\x4a\xf7\x0b\x20\xf7\xa1\x99\x8d\x2b\xae\xe7\x0f\xf4\x80\x4d\xe8\x93\x34\xf7\x2d\xdf\x1f\xf5\x3e\xcd\xb3\xbe\x07\x6a\xee\xfc\xe4\x4c\x08\x87\x77\xf2\xf1\x7d\x5b\x7d\xa1\x21\x2d\xca\xac\x5e\x6e\x43\x60\xdf\x16\xad\x21\x7d\x0f\x06\xd8\x2d\x7a\xe7\x13\x67\xb5\xb0\x47\x9d\xea\xd4\x6b\xa6\xfd\x01\xbb\xbd\x61\xec\x6f\xe8\x83\xdf\x22\xef\xfa\x14\xb9\xb3\x9f\x78\x5b\x7f\x13\x74\xfd\x3b\x00\x00\xff\xff\xa8\x0c\xf7\x56\x45\x5c\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 23621, mode: os.FileMode(420), modTime: time.Unix(1540868108, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


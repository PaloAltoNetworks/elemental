// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz) // #nosec
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1637795759, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\xdf\x6b\xe3\x38\x10\x7e\xf7\x5f\x31\x57\xca\x61\x43\xea\xbe\x1c\xf7\xd0\xa3\x0f\x65\xd9\x85\xc0\x75\x29\x2d\xdc\x4b\xe8\x83\xd6\x19\xa7\xe2\x64\xc9\x48\x72\x77\x83\xd1\xff\xbe\x48\x96\x7f\xc8\x71\x52\xa7\xed\x66\xa1\x7d\x69\x22\x69\xe6\x1b\x7d\xa3\xf9\x34\x4a\x49\xb2\xff\xc9\x06\xa1\xae\x21\x7d\x40\x9d\x7e\x12\x3c\xa7\x9b\x4a\x12\x4d\x05\x4f\xbf\x92\x02\xc1\x98\x28\xa2\x45\x29\xa4\x86\xb3\x8d\x48\x49\x29\x24\x6a\x91\x52\x71\x89\x0c\x0b\xe4\x9a\xb0\xb3\x28\x7a\x26\x12\xe2\x08\x00\x80\xae\x91\x6b\xaa\xb7\xd6\x58\xdd\x92\x12\xae\xa1\x20\xe5\x4a\x69\x49\xf9\xe6\xb1\xb3\x49\x97\x7e\x1d\xd4\xce\xcc\xfe\xd5\xf5\x05\x48\xc2\x37\xd8\x04\xf3\x50\x62\x46\x73\x9a\xb9\x60\x94\x0d\xa4\x5f\x08\x34\x07\xf5\x24\x2a\xb6\xbe\xc7\x0d\x55\x1a\x65\xb0\x1a\x52\x38\x4f\xef\xaa\x6f\x8c\x66\xb7\x62\x8d\xa1\xed\x05\x9c\xf7\x21\xc2\xd5\x35\xa4\x76\x0d\x4b\x3f\xf7\x83\x17\x03\x83\xb3\xba\xf6\x0b\xee\x51\x69\x3b\x6d\xcc\xd9\x95\x8d\x61\xe8\xc6\x98\x76\x43\x8b\x00\x0a\xf9\x7a\x8c\x3e\x18\x32\x51\xc0\x59\x46\x34\x6e\x84\xa4\x1f\x90\x38\x51\xc9\x0c\x7f\x09\x79\x84\x51\xa2\x7e\x21\x63\x17\x27\xa4\xac\xae\x7d\x54\xe7\x74\x01\xe7\x6e\x67\x03\xa3\x9b\x66\xa7\x10\x72\xdc\xae\x7b\x3f\x62\x0f\x1c\x54\xbe\xc6\x1f\x13\x5c\xaf\x1e\x57\x8f\xcd\xc7\x93\x73\x6c\x19\x18\xd5\x67\x47\x05\xcd\x81\x21\x87\x74\xd9\x84\x0d\xc6\x0c\xc2\x0b\x43\x74\x84\x67\xa2\x28\x45\xc5\xd7\x8e\xf3\xde\x28\x34\x19\x1a\x75\x06\xc6\xb8\x38\xec\xff\x45\x4f\x1d\x98\x83\xb4\x9b\x45\x5d\x03\x32\x65\x03\xe6\x94\x2d\x5e\x99\x99\x24\x8a\x2e\x2f\xc1\x51\xf0\x1f\x4a\x65\xe9\x92\xa8\x2b\xc9\x15\xe8\x27\x84\xac\x92\x12\xb9\x86\x67\x3f\x27\x72\x37\x5c\x38\xca\xa2\xbc\xe2\x59\x60\x1b\x27\x90\x33\x41\xf4\xdf\x7f\x41\xed\xfd\x74\xd7\xc3\xcd\xdd\x72\xc9\x73\x91\xb6\x30\x76\x87\x51\xa4\xb7\xa5\x77\x77\x4b\x38\xd9\xa0\x04\xa5\x65\x95\xe9\xda\x44\xce\x7d\x9c\x07\xb3\x09\xb4\x67\xf2\x8b\x14\x85\xcd\x57\xcc\x6d\xd2\x9a\xf3\x93\xc0\x64\xdd\xba\xad\xfa\x68\xc6\x37\xcc\xca\x9a\x3f\x46\x73\xd0\x3e\x35\x02\xbb\x8d\xbd\xd2\x6e\x8f\x47\x0d\x34\x7a\xd5\xfa\x99\x07\xef\x0a\x38\x6e\xca\x75\x36\x70\xaf\x6f\x2b\xf7\x71\x26\x14\xdf\xc6\x84\xf7\xfb\x8b\xe9\x04\x52\xd2\x42\xd1\x1c\x28\x5c\x43\x9e\xee\xa4\x86\xf0\x6d\xf2\x0f\xfc\x41\xd3\xa5\xfa\x5c\x94\x7a\x1b\x27\x83\x12\x6a\xa9\x09\x24\x62\xca\x55\xc7\xfb\xd1\xee\xfc\x58\xe8\xce\xf3\xc8\xb7\xc9\x0b\x5c\xe4\x94\x7c\x63\x18\xb7\xb9\x9b\xa4\x60\x3c\xd6\xd8\xb4\xcc\xa8\xef\x54\x67\x4f\x5d\xf6\x7d\xb4\x9d\x4e\x1f\x50\xb6\x57\xab\x5a\x46\x54\xd3\x91\xed\x5c\x15\xbd\x9c\x5f\x8d\x49\xfb\x8a\xdf\xf7\x98\xc4\x49\x34\x21\x1b\xa3\xaf\x6b\xcc\x49\xc5\xf4\x8e\x5b\x4e\x99\xcf\xc6\x3e\xa2\x1f\x4a\x22\x15\xbe\x86\xee\x5d\xcb\xdf\x48\xba\x37\xe4\x42\xb7\x24\x2e\xd5\xbd\x10\xfa\xad\x49\x69\x36\xf9\x96\xd4\xbc\x5b\xa6\xfc\x85\x76\x38\x3d\xc1\x4d\x1e\xe8\x5f\x77\xf5\xaf\x5a\x07\xee\x81\xf0\x92\x1c\x35\x99\xb5\x55\xfb\xe0\xdc\x06\xaa\x74\xb8\xf6\x46\xb5\xef\x4f\xd7\x48\x0a\x1a\x9d\x4b\xe6\x29\xc1\x0b\x9b\x9f\x0e\x47\xbd\xdb\xb1\xdc\x7b\xba\x4e\xab\x15\x7f\x4e\x19\xdc\xb1\x4a\x12\x06\xc6\xfc\x4b\x95\xbd\xba\x4f\x78\x30\x77\x85\x60\x76\x9e\x26\x4c\x3f\x5c\xb6\xf6\x4b\xc8\x6f\xcc\x59\x40\xf9\x51\xd5\xad\x0e\x96\xb7\x3a\xba\xbe\xef\x91\x35\xe9\x7b\xa2\xa5\x8a\x87\xa8\xc1\x4c\x93\x27\x39\xee\xae\xe4\xd4\x9a\x16\x0b\x76\xc0\x6e\x18\xf3\xd1\x51\xb4\x60\xab\xfd\xcf\x4c\x0f\x30\xb2\xb0\xae\x9f\x89\x84\xc2\xb7\xca\xd7\x01\x80\x6d\x99\x6d\x2f\xef\x27\x87\x6d\xbc\x5b\x36\xd8\xdc\xed\xc0\xac\x6d\xe3\x9b\x6f\x01\x07\xc3\x65\x7d\x43\xdf\xa2\x9b\xc8\xe1\x05\x31\x76\xa8\x84\x31\xc0\x1f\x54\x69\x7b\x19\xd0\x6e\xde\x83\xcd\x64\x62\x48\xc5\xd4\x92\xd3\x3f\xc9\x0f\x56\xdf\x71\xbf\x3f\x18\xcf\x9e\x6b\xd0\xbf\x08\xd9\xed\x7b\x48\xa1\x4d\x9e\xef\xe1\x21\x17\xd2\x7d\xdf\xd0\x67\xec\x9f\x14\x1d\xa3\x63\x3f\x2f\x5d\xd5\xe1\x45\xbd\x4f\xf0\x66\xd0\x7a\x5a\x45\x6b\x03\xaf\xdf\xfa\x7b\xc7\xe1\xd7\xf5\x0c\xfd\x0b\x1f\x19\x56\xf5\x4c\xf4\x33\x00\x00\xff\xff\x03\x1b\x0d\x41\x14\x15\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5396, mode: os.FileMode(420), modTime: time.Unix(1637795759, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\x69\x73\xdb\x38\xb2\x9f\xa3\x5f\x81\x51\x79\x12\x2a\x2b\xd3\xf9\xac\x59\x6f\x55\x62\x27\xf3\x5c\x2f\x87\x2b\xce\xce\x56\xbd\x54\x6a\x0d\x93\xa0\x8c\x09\x05\x70\x00\xd0\xc7\x53\xf1\xbf\xbf\xc2\x41\x12\xe0\x25\x50\x96\x32\x9e\xb7\xf6\x87\x19\x1b\x47\xa3\x2f\x34\xba\x1b\x60\x27\x83\xd1\x77\xb8\x44\x60\xbd\x06\xe1\x05\x12\xe1\x09\x25\x09\x5e\xe6\x0c\x0a\x4c\x49\xf8\x11\xae\x10\x28\x8a\xc9\x04\xaf\x32\xca\x04\x08\x26\x00\x00\x30\x4d\x56\x62\xaa\x7f\x5b\xd2\x10\x66\x94\x21\x41\x43\x4c\x8f\x50\x8a\x56\x88\x08\x98\x96\xbd\x58\x5c\xe7\x57\x61\x44\x57\x47\xcb\x94\x5e\xc1\x94\xe3\x25\x39\x5a\x2d\xe9\xd1\x15\xa7\xa4\x3d\x68\x85\x45\x74\x8d\xd2\xf4\xfa\x28\xa2\xd9\x3d\x17\x2c\x8f\x44\xce\x90\x1e\xb8\x5e\x1f\x02\x06\xc9\x12\x81\xf0\x22\x43\x51\xf8\xe5\x3e\x43\xe7\x8c\xde\xe0\x18\x31\x2e\x91\x54\xd0\x24\x1d\xa0\x28\xea\x29\x88\xc4\xe0\xd0\xf4\x36\x41\xfc\x06\x53\x1c\x2b\x4a\x3d\x01\x15\xc5\x64\x36\x99\xac\xd7\xe0\x20\x85\x02\x71\xf1\x1b\x62\x1c\x53\x02\x16\xc7\x06\xe2\x7b\xd5\xfc\x5a\x08\x86\xaf\x72\x81\x78\x39\x40\xf2\x70\xbd\x36\x8b\x1f\xe0\x39\x38\x40\x24\x5f\xc9\x79\x57\x39\x4e\xe3\xb7\x24\x5f\x71\x0d\xa2\x09\xba\x28\x26\x47\x47\x52\x3c\x6a\x86\xa2\x1a\x14\x05\x60\x28\x63\x88\x23\x22\x38\x10\xd7\x08\x64\x94\x73\x7c\x95\x22\x70\x03\xd3\x1c\x71\x90\x50\x06\x60\x89\x85\x22\x46\x4f\xaf\x30\x33\x92\x9d\x86\x13\x21\x21\xb6\xe0\x73\xc1\x30\x59\x4e\x26\x11\x25\xbc\x94\x7b\xcd\xbe\x03\x02\x57\x68\x0e\x0e\xd4\x6a\x92\x0a\x3d\xf9\x37\xbd\xb8\x61\xa1\x41\x9b\xe8\x95\x9a\x18\xeb\xa9\x72\x80\xfe\xad\x28\x42\xb3\x48\x3d\xa5\x85\xd5\xb1\x26\xa5\x9c\x51\x0a\xa7\x96\x4d\xfd\xfb\x44\x62\x8b\x13\x40\xa8\x30\xb2\xf9\x40\x63\x94\x86\xa7\x48\xc0\xe8\x1a\xc5\x35\x63\xed\xde\xb7\x44\x60\x71\x6f\x98\x73\x16\x23\xf5\x67\x13\xf5\xaa\x9d\x26\xea\x6f\x7a\xf5\x3b\x8a\x44\x38\xb9\x81\xcc\x0f\xde\x31\xa8\x76\x4a\x58\x35\xae\x15\x31\x72\xe8\x02\x54\x1a\x68\x81\xfa\x8c\xb8\x90\xbd\x45\x31\x9d\xab\xa1\x27\x50\xa0\x25\x65\xf7\x8b\xae\xa1\x34\x67\x51\x25\x64\x3d\xfe\x5c\x6f\xf5\x45\x1b\xb4\xe9\xa9\x47\x32\x7c\x03\x85\x1c\xd9\x1c\xa8\x3b\x8a\x62\x3e\x29\x46\xf2\x7a\xbd\xee\x1a\x71\xc6\x3f\x53\x2a\x36\xc9\xe2\x3c\xcd\x19\x4c\x41\x51\xbc\xc7\x5c\xd8\xd2\x80\x20\x95\x2d\x34\xf1\x98\x5b\x29\xba\xcf\x1a\x5f\xbf\xbd\xec\x1d\x29\x09\x3e\x3a\x02\x96\x76\x88\x9c\x11\xad\x1a\xb8\x53\x35\x38\xc0\x44\xfd\x29\xb1\x0d\x27\x49\x4e\x22\x10\x50\x4f\x5c\x66\xd5\x4a\xc1\xac\x5b\x6f\x94\xcc\x34\x16\xfd\x30\x6b\xf5\x9b\x68\xfc\x4f\x68\x56\xe3\x0e\x41\x46\x31\x11\x88\x01\x41\x01\x04\xd2\xfc\x2a\x84\xfd\x50\x1c\x4f\x92\x5c\xbc\x83\x9c\x04\xc3\xab\x14\xf1\x92\x26\x85\xc6\xe2\x18\xc0\x2c\x43\x24\x0e\xfc\x80\xaf\x8b\x39\xa0\x61\x18\xce\x6c\xb6\x3c\x97\xa0\x0c\xe1\xaf\x15\x34\x03\x94\x3b\x62\x12\x54\xfd\x09\x01\x41\xb7\x7a\x75\x23\xc7\x7d\xf1\x41\xe3\x12\x94\xeb\x87\x61\xd8\xcd\x92\x8d\xac\xa2\xb9\x78\x20\xa7\xe4\x91\xf1\xef\xb9\x64\x85\x04\xa4\xed\x7c\x89\x97\xb6\x4d\xe5\x3a\xd5\x32\x34\x17\x6a\x42\x18\x0c\xed\x96\x99\x86\x5f\x38\x7a\x4a\x73\x61\xc4\xa1\xf6\x5b\x44\xc9\x0d\x62\xc2\x96\x86\xd2\x44\xd2\x47\xf7\x76\xec\x96\xff\xed\x57\x3b\x85\x89\xcb\xcf\x15\xfc\x8e\x82\x81\xe1\x73\x90\x22\x12\xd0\x59\xcd\x42\x2c\xa7\xbd\xfa\x05\x60\xf0\x77\xd3\xf7\x0b\xc0\x7f\xfb\x9b\xcb\xc2\xaf\xf8\x1b\x38\x06\xf4\x2b\xfe\x36\xc8\x9a\x53\x94\xc0\x3c\x15\x9f\x58\x8c\x98\x63\x66\x62\xdd\x01\xa8\xec\xc1\x64\x09\x12\x8c\xd2\x98\x97\xda\x1a\x51\x22\x10\xd9\x82\x3f\xf6\x82\xc1\x0c\x7c\xfd\xa6\xdd\x80\x86\x8d\x29\x9b\x6b\x92\x2a\xd7\x46\xaf\xe2\xe0\x5d\x3a\x5f\x8e\x57\x35\xb7\xa7\x9a\x53\x44\x73\x42\x53\xfe\x85\x5e\x64\x90\x71\xe4\x50\xed\x69\xbb\x8d\x2e\xa1\x58\x6a\x90\x06\xe3\xbb\x7d\x8f\x8e\xc0\xa7\xb6\xc5\x06\xb7\x38\x4d\x01\x25\xe9\xbd\xe2\x2c\x34\x5d\x4b\x7c\x83\x88\xe1\x7c\x08\x3e\x52\xfd\x2b\x58\x21\x48\x38\x90\x7a\xc2\x90\x69\xe2\x68\x0b\x59\x94\x2c\x08\x8c\x6c\xc3\x30\xd4\x6c\xf7\xb5\x05\x4a\x77\xc7\xd0\xff\x60\x65\x0e\x1b\x38\x4b\xdb\x12\x06\x2f\x37\xe0\x00\x8a\x62\xd8\x42\x94\xae\xb0\xad\x0b\x37\xa6\xed\xa1\x1a\x6f\x60\x07\x33\x80\x89\xe8\x3a\x4b\x91\x08\x5f\x9f\x9f\x9d\x91\x84\x86\x96\x4b\xae\xdd\x79\xa3\xb8\x56\x74\xa0\x7e\x3f\xc0\xfc\x2d\x89\xd8\x7d\x26\xa4\x58\x24\x0b\x13\x98\x72\xe4\xe1\x71\x36\x3d\xcd\x95\x1c\x22\x69\x84\xcd\x69\xa5\x37\x58\xae\xaf\xb7\x9f\x1a\x7f\x42\x57\x52\x3b\xde\xa5\x70\xc9\xdd\xa5\xee\x04\x22\x92\x02\x6e\xa1\xd2\x20\x60\xd8\x49\x32\x91\x41\x1e\x49\x56\x35\xa3\xa9\x3a\xea\x69\xc6\x30\x87\x45\x61\x3c\xc4\xd0\x30\x46\xf9\x84\x1d\xbc\x3a\x06\x82\x29\xd7\xde\x42\x69\xbd\x56\xa1\xcc\x17\xfa\x4e\x6d\xa6\x03\x29\x13\xc3\xd1\x26\xf6\x4a\x7a\x0a\xe9\x72\x69\x29\xd5\xcb\xdf\x39\x25\x8b\xe9\xe1\x14\xac\xf8\x52\x06\xbc\xea\xf7\x2b\xd5\xf8\x6f\xc5\x32\xa3\x4d\xd3\x4b\xa3\x71\x1f\xd1\xed\x06\x31\x95\x6e\x93\x74\x14\xfa\x0f\x3f\x89\x93\xd2\xc8\x0d\x00\x83\xd9\x30\x90\x86\x62\x3e\x1f\x1a\x5b\xef\x4d\x9b\x11\x8b\x01\x6d\x9e\x4f\x2c\x6b\x7c\x68\x07\xa9\x92\xef\x52\x7f\x39\x65\x56\x50\x0b\x82\x0d\x02\x9f\x39\x46\xdf\x88\x9e\x5f\xd3\x3c\x8d\xff\xc5\xb0\x40\x67\x04\x0b\x0c\x53\xfc\xbf\x88\x49\x71\xaa\xa8\x57\x2e\xa5\xf3\x0d\x0d\xe5\x39\x08\xcf\xf3\xab\x14\x47\x92\x1a\xd0\x00\x7b\x80\x09\x56\xb6\xee\xb6\x03\x2c\x12\x0e\xf0\xe6\x5c\x9c\x98\xe9\x4e\x7b\x57\xdb\xa1\x7d\x42\xf9\x35\x19\x0b\xe1\x13\x81\x76\xc6\x11\x7d\x21\x66\x69\xde\x06\xb5\x65\x47\x11\x03\x70\x42\x86\xa6\x91\xf3\x25\x2c\xc1\x0d\xdf\x45\x07\xef\x0e\x5d\x2f\x38\xc8\x09\xfe\x23\x2f\xe3\x27\x39\x67\x24\xad\x72\x4a\x30\x03\xae\xbf\xa2\x63\x4e\x3d\xd7\xc2\xa6\x54\xce\xf2\xa0\x09\xab\x05\xea\x41\xe1\x49\xe9\x45\x94\xfb\xb8\x92\xb2\x34\x3c\x0d\x10\xd3\x56\x9a\x68\x1b\x86\x5d\x20\x61\x61\xc9\x91\xd8\x0f\xc3\x9c\x65\x02\x1c\x83\xd2\xad\xf0\xe3\x9a\x1f\xbb\xc0\x31\xc0\xf1\x30\x53\x8e\x8e\xc0\xaf\x48\xbc\xb9\xf8\xf4\x11\xe0\x55\xa6\xd5\x54\x53\x2c\x4d\x33\x58\x41\xc6\xaf\x61\x2a\xc5\xa9\x22\xd3\x04\x46\x48\x79\x68\x5f\xae\x31\x07\x98\x83\x9c\x6b\x17\x4f\x30\x48\x78\x06\x19\x22\x42\x7b\x68\x12\x11\x70\x76\x2a\xfb\x3e\x50\xb2\xa4\xa7\x6f\xce\x4e\x01\xe4\xe0\xd3\x15\x8a\xc4\xd9\xa9\x37\xa3\x0c\x76\xc1\x0c\x04\x15\x06\x32\x66\x42\x8c\x51\x56\xb1\x0b\x27\x80\x82\xe3\x63\x40\x70\x6a\xf9\x45\x46\x31\x08\x4e\xe7\xf2\x3f\xb6\x7f\xc3\xa5\xc1\x7a\xbe\x92\x98\xd5\x16\x74\xd0\xa2\x97\xca\xe7\x7f\xdc\x4e\x2c\x2b\x17\x5e\x08\xca\x50\x0c\x1a\xad\x96\x68\x4d\x8f\xa4\x44\x09\xb7\x25\xcc\x9f\x8e\xc1\x74\x6a\x51\xc7\xbb\x87\x1d\x2b\xc9\x85\xda\x85\x3e\x8b\xff\x0b\xdd\x05\xdd\x00\x4b\x7f\xcf\xd9\x53\x06\x8b\x5e\xd8\xdd\xa0\x9a\x3a\x36\xfc\xa7\xbd\x69\xb9\x96\x8c\xd6\xc4\x8b\x47\xad\x89\x06\xbb\x80\xc1\x5b\xcd\xe2\xcf\xf0\x76\xa6\xf5\xd0\x57\x0d\x77\xa1\x81\x38\x91\x6b\xea\xf4\xc0\x6d\xf8\x4f\x62\x18\x13\xf0\xd9\x2f\xaa\xe3\xa7\x9e\xe5\x11\x63\x8e\xc0\xf7\xac\xc7\x3d\x4a\x7c\xdc\xa3\x5a\xa1\xd4\xd3\x59\xa7\x2e\x8e\x84\xb4\xbd\x2e\x1a\x45\xf4\x3b\x27\xba\xe2\xa1\x6b\xc8\xe2\x88\xc6\x28\x6e\x46\x46\xca\xbf\xf5\x56\xb4\xad\xc3\xa1\x86\x61\x7f\x93\xa2\x1b\xa4\xb2\xf6\xcd\x0d\x25\x3b\xc2\x93\x14\x72\xae\x65\x76\x56\xef\x28\x4f\x1c\x2b\xd8\xad\xf3\xbe\x3c\x8d\xfb\x63\xa5\xa9\x3f\x97\x7b\x93\x2f\x65\xca\xb9\x27\x09\xe3\x45\x87\x22\xe4\x51\x64\x5b\x46\xba\x29\xb6\x73\x50\xf6\xf2\x88\xe1\x4c\xd4\x97\x55\xa7\x34\x72\xb3\x55\x34\xca\x95\x0f\xaa\xc6\x24\x94\x59\x9e\x8c\xaf\xd0\x4f\x69\xd4\x27\xee\x4b\x49\x14\x8f\xde\xc0\xe8\xbb\xc0\xd1\x77\x3e\x80\xdd\xa5\x73\x6d\x31\x92\x74\x5f\x5b\xad\x70\xec\x43\x36\x59\x89\xf0\x22\x63\x98\x88\x24\x98\xfe\xfd\x67\xbe\xf8\x99\xff\x63\x3a\x07\x34\xac\x5d\x76\x15\x05\xd5\x4d\xda\xb3\x9d\xb5\x44\xe5\x69\x44\x2b\x99\xe9\xf8\xeb\x57\x44\x10\x83\x02\xfd\x8a\x84\x40\x0c\x84\xad\xf0\x4a\x7b\x65\x9d\x66\xaf\x99\x8b\x6b\x0d\x30\x26\x87\xa1\x08\xe1\x9b\xa6\x47\x7a\x30\xec\x69\x75\x01\x0c\x66\xee\x3a\xe5\x35\xa0\xcb\xd2\x1e\xbf\xa0\x91\xa2\x69\xb3\xe0\x62\x80\x05\x17\x3d\x2c\xa8\x9c\xf2\x8c\xd1\x0c\x31\x19\x4c\x79\x30\x02\xe4\x5c\x6a\x42\x9d\x34\x54\x2e\xbd\x3f\x7b\x7a\xb0\x51\x69\xfe\x8f\xf5\x5d\x69\x8b\x51\x95\x8f\xda\x7b\x8e\x59\x10\x1a\x5b\xa3\xb9\x33\x20\x89\x41\xd0\xb7\x3d\x66\xed\x2e\x7d\xb3\x37\x33\xfc\xec\xcc\xe7\x72\xdd\xd4\x7d\x60\x29\xf7\xaa\x1c\x8f\xe2\xf2\x52\x60\xa7\xa9\xd8\x0d\x3b\xd9\x2b\x03\xab\x87\xd8\x79\x58\xcb\x23\x4b\x11\x31\x93\x67\xd2\x37\x7b\x65\xb9\x46\x47\x47\x80\xd0\x14\x13\xb1\x00\x4b\xaa\x9f\x57\xf0\xa6\xdf\xf4\x7c\x73\xe6\xd4\x82\x08\x3a\x5e\x38\x0c\xda\x85\xe6\x44\x9c\x80\x6b\xc8\xcf\x19\x4a\xf0\x1d\x08\x74\xce\x4d\x69\x92\x93\x72\x9b\x81\xe9\xcb\x69\x7b\x7a\x5b\xbd\x16\x3d\x6a\x37\x6f\x2d\x6c\xbb\x5c\xc3\x10\x9f\x7b\x83\x74\xd3\x33\x3d\xcd\x85\xe3\x15\x67\xca\x2d\xf6\xe1\x79\x61\xdf\x98\x25\xf5\x7d\x99\x51\x14\x2b\x50\xba\xc5\x22\xba\x06\xc9\xae\xc4\x14\x41\xae\x9f\x73\x94\xbb\x76\xba\x70\xfa\x77\x20\x4a\xcd\x8a\x36\x9b\x37\xc5\x60\x3e\x42\x1d\x84\xfd\x7c\x30\x58\xdc\x81\x80\xcb\xb8\x2f\xb3\x9c\xc0\x46\xfe\x59\x5b\x2b\xd3\x62\x49\x05\xe9\x16\x6d\xb7\x60\xdd\xbe\x82\xec\x3b\x8a\x65\x48\x77\x89\xca\xcc\xf6\x65\xcb\xdc\x97\x5d\xfe\x39\x9a\x16\x06\x41\x05\xc3\xb2\x3d\x55\x77\x99\x55\x67\x33\x10\xc8\x40\xac\xca\x50\x80\x31\xf1\x56\x23\xb0\xb2\x53\xf5\x03\xf9\x81\x42\x67\x44\xc0\xb1\x45\xa6\x99\x6a\x5c\xa1\xce\x49\x1b\x42\x46\xe9\x27\xbd\x95\x54\x24\xc1\x34\x27\x4a\x36\x82\x96\x2b\x58\x4f\x9b\x5e\x74\x80\x7e\xa1\x76\xe6\x8b\xc1\x43\xf5\x05\x08\x7e\xe6\xb3\x05\xf8\x99\x4f\x9b\xae\x96\x22\xa7\x95\xa1\xf0\x0d\xe1\x54\xe4\xd0\x54\x9f\x18\x3d\x44\x7d\xcc\xec\x11\xea\xd3\xc2\xe0\xaf\xa5\x3e\x06\xfd\x9d\xab\x8f\x61\xe4\x63\x56\x1f\xbb\x57\xea\xd2\x39\x94\xe7\x07\xcc\xb2\x54\x3f\xc8\x21\x54\x0d\xad\x93\xc2\x10\x78\xdc\xaf\x96\x0f\x5b\x46\x5e\x23\xa8\xc5\x03\xe3\xa6\x0d\xb9\x3c\x56\xee\xf8\x50\xdf\xb6\xf0\xfa\x4d\xa4\xaf\xc6\x98\x79\xb5\xb6\xfc\xa4\x57\xb6\x43\xa3\x33\xfe\xf6\x8f\x1c\xa6\x81\x1d\x2f\xcd\x2c\xf1\x67\x90\xe0\x28\x98\x46\x90\x48\x7f\x34\x53\xcc\x4b\x18\x5d\x01\x08\x34\x15\xb7\x58\x5c\x83\x18\x27\x09\x62\x88\x88\xea\xbd\xd6\xd4\xb9\x81\xe6\x54\x5d\x7a\xe9\xd5\xfd\xee\xaf\x27\xee\xb1\xde\xa2\x85\xf7\x67\x56\x5d\x05\x7e\xc0\xe9\xdd\x9f\xad\xda\x70\x6c\x77\x1d\xd7\xbd\xc0\x5e\x7a\x41\xb3\x93\x0c\xad\xb6\xa1\x2b\x81\x53\x84\xb2\xc6\xd3\xb4\x18\xa1\x4c\xbf\xc6\xc2\x1b\x5e\x63\xa9\x57\xa4\xde\x36\x52\x2f\xe4\x7b\xf7\xea\x26\x58\x9f\x3d\xb3\xf6\xed\xb3\x62\x32\x79\x66\x5e\x5d\x0c\xdf\xcd\x16\x93\x67\x34\x2c\x57\x3e\x23\x82\x06\x34\x17\xb3\xc9\xe4\x59\xc7\xdb\x9f\x7a\x90\x24\x1e\x23\xee\xc6\x94\x98\x98\x4d\xad\x0f\x89\x41\x1a\x46\x33\xa5\x44\x6d\xd3\xf8\xf5\x64\xf2\x4c\x40\xb6\x44\x62\x5e\xa6\x86\x9d\xa7\xdb\xa1\xe2\x30\x9d\x4d\x9e\x99\xdc\xf1\x4f\x35\x03\xf5\x5e\x75\x12\x22\xff\xb4\x4c\x35\xca\x94\xc8\x87\xd6\x37\xf6\x57\xda\xdb\x99\x16\xc2\x4b\xfd\x3e\xed\xa5\xc6\x69\xe8\x5d\x9a\xda\xb5\xe6\x7d\x89\x7e\x06\xae\x6e\xda\x70\x6c\xf8\x1c\xe5\x4c\x5b\x08\x92\x50\xb6\xd2\xa9\x2b\xae\x13\xd0\x15\xe7\x6b\x32\xbd\xf3\xab\x66\xa9\xa0\x91\xbd\x57\x7f\x28\x9b\x59\x9b\x59\x75\x7e\xf1\x75\x79\xd1\xf8\x47\x8e\x19\x8a\xdf\x0e\x0d\xdc\xf2\xbc\xae\x12\x5f\x5f\x18\x24\x1c\x4b\xaa\x9d\xbe\xf0\xed\x5d\x46\x39\xaa\x8f\x2c\xd3\xfc\xd9\xe0\xe4\x8e\x46\x7f\x00\xfd\x5e\x7b\xaa\x83\xe5\xa9\x65\x05\x8d\x8a\xd4\xa8\x97\xfc\x28\x41\x99\x23\xdf\x89\x70\xe6\x3d\xb6\xa8\xdf\x05\x70\x58\x75\xdc\x68\x08\xcd\x9b\xcb\xd6\x29\xed\x9c\xca\x9a\x16\xca\x40\x50\xd3\x83\x48\xbe\x9a\xce\x1e\x4e\x0e\xef\xf5\x6b\x24\x55\x3f\x80\xac\x9a\x24\x81\x57\x68\x94\x80\xbe\xe0\x15\x7a\xac\xe2\xb9\x13\x88\x11\x98\x4e\x67\x76\x6b\x8a\xb9\x98\xce\x46\x50\xf8\xd6\x80\x79\x34\x54\xd6\xb4\x60\x22\xd0\x12\xb1\x51\x02\x3b\x23\xe2\x11\x52\x92\xa4\x14\x8a\x51\x74\xbc\x93\x33\x1e\x07\x25\x43\x84\x31\x94\x4c\xbd\xee\xd3\x5d\xd4\x6a\xba\x3f\x23\x8e\x84\xb9\xd2\x79\x47\xd9\xff\x20\x46\xf5\x67\x35\x1b\xb3\x23\x35\x17\xbb\x47\x86\xf5\xe1\xd3\xc3\x20\xeb\x24\x3a\x36\xbf\xb4\x98\x02\xac\xac\x8a\xe7\xc6\x64\x28\x79\xaf\x76\x61\xa3\xf1\x03\xcc\x6a\x73\x6a\x92\x69\x3c\xbf\xb2\x9e\x9f\x77\x73\x6f\x6d\x93\x2c\x27\xb4\xae\xbd\x81\xfa\x78\x80\x08\x4c\x72\xd4\xc0\xda\x97\xdb\x3c\xbf\xea\x62\x2d\xcf\xaf\x7e\x20\x1f\xc3\xd7\x69\x4a\x6f\x51\x7c\x72\x4d\x71\x84\xb8\xcf\x7e\xd1\x47\xce\x19\x51\x4f\xdd\x47\x1d\x3c\xf3\xfa\xaa\x51\xce\xfb\x9d\x62\xd2\x42\xe0\x72\x3a\x07\xd3\x4b\x09\xad\x98\x2b\xd7\xec\x75\x2e\xe8\xd2\x5c\xa8\xc4\x03\x7b\x6f\x13\x3b\xbc\x98\x00\x99\x17\x0b\xce\xa1\x90\x26\xdc\xcf\x58\xcc\xd5\xfd\x61\x73\x8d\xcb\x8e\xe6\x0f\x88\x73\xb8\x44\xba\x57\x76\x5a\xfe\xcf\x1e\xc8\x5e\x0a\x10\x7e\x80\x77\xef\x11\x59\x8a\x6b\xf0\xca\x87\xf0\x0f\xf0\x0e\xaf\xf2\x95\x9e\xe2\x4b\xbe\x6c\xad\xd7\x91\x2d\x2a\xbe\xdc\x17\x45\x98\x8c\xa2\x08\x93\x2d\x29\xaa\xd6\xd9\x3b\x45\xf0\x4e\x99\x0c\xf0\x2a\x7c\xd5\xe7\x09\xfb\x1f\x77\x46\x84\x23\x4e\xbb\x4a\x82\xbf\x99\xaf\x22\x77\x46\xae\xc9\x08\xf8\xe2\xec\xed\x69\xcc\x65\x04\x15\x34\xb0\x9e\xed\x58\x4a\x9b\xb4\x70\x97\x32\xd3\x4a\x3a\x5e\x66\x25\x16\xbb\x97\x99\x27\xca\xdb\x88\xac\x46\xfa\xc7\x88\xac\x7a\x84\x1e\x82\xd6\x67\xdc\xea\x91\xba\xfa\x8c\x7a\xe8\x5b\xee\x9a\x11\x12\xdc\xaa\x24\x56\x51\x6e\xbd\x3b\xaf\xc9\xd7\x8d\xbe\x6e\xa5\x2f\x99\x87\x3d\x7e\xa4\x07\x13\x1c\x7a\x6f\x2a\x4a\x15\x62\x55\x9e\x55\x27\x1c\x6a\x3e\xd8\x1f\x62\x9f\xe4\x5c\xd0\x55\x79\x89\x5e\x43\x08\xeb\xac\xed\x0a\x66\x19\x26\x4b\xf5\x35\xb7\x7a\xe7\x55\x43\xfa\xa0\xbb\x42\xf3\x7f\x30\xad\x3f\xf4\x6f\xa1\xd3\xc8\xe9\x96\x50\xbb\x45\x61\xe0\x96\x02\xa1\x3b\x63\x71\x17\xc7\xcd\x7d\xbc\xeb\xf4\xcf\xc0\x3f\xac\x6b\x79\x93\x85\x73\x87\x98\x15\x6c\x18\xa8\x63\xae\xfd\xda\xb1\x31\xab\x75\x43\x24\xe5\x85\x13\x1c\x29\xb6\xbd\xa3\xac\x4a\xd2\x38\xef\x23\xaa\x56\x67\x78\xf5\x80\x4a\xe7\xfd\xea\xbb\x0c\xf5\xd5\xfc\x77\x74\x5f\x26\xa3\x36\xbd\x53\xea\xc3\x21\x50\x80\xda\x2f\x1d\x7a\xd0\xa9\xd3\xa3\x37\x73\x40\xbf\x1b\xd9\xf6\x2e\x5c\xe7\xa3\x3e\xc0\xec\xab\x5c\xea\xdb\x2f\x72\x5a\x8b\x8d\x37\x36\x07\x8f\x8e\xc0\xbf\x10\x88\x68\x9e\xc6\x2a\x55\x95\x60\x12\x03\x2c\xe6\x80\x53\x90\x22\xf1\x82\x83\xe8\x1a\x45\xdf\x01\x35\x5f\xed\xd1\x5b\xc4\xf4\x65\x39\x26\x31\xba\x43\x31\xe0\x19\x8a\xc0\x0a\x66\xb6\x40\x86\xf0\x7c\x2f\x41\x9c\x40\x8e\x3a\x10\x2e\x3f\x24\xee\x64\x08\x77\x64\x98\xe4\x69\x6a\xc9\x88\xbb\x23\x57\x30\xf3\x94\x56\xcf\x5a\xc1\x4c\xc2\xf8\xaa\x85\xf5\xcd\x57\x56\x1e\xe4\x3b\x54\xd7\x79\xd2\x1c\xf5\x6a\xab\xbe\x91\xea\x51\x4e\xe7\xb9\x34\x04\x37\x88\xdd\x03\x18\xdf\x40\x12\xa1\x18\x48\x06\x28\xf4\xc4\x35\x14\xe0\x9e\xe6\xe6\xa1\x96\x92\x34\x41\x28\x06\x57\xb9\x00\x98\x00\x4e\x57\x48\x02\x52\xd3\x4b\x56\x82\x9c\x23\x25\x6a\xbf\x97\x97\x26\x0b\xeb\x12\xe2\xaa\xbc\xf5\xd8\xbf\xe4\x98\x79\xc7\xa1\x86\xad\x1b\x46\xd9\x33\xcf\x3a\xf4\x74\x63\xf8\x25\x5b\x87\x6d\xeb\x33\x2c\xde\x22\x6d\x7d\x69\x08\x33\x75\x9b\x58\x89\x56\x0a\x72\xf8\x4a\x61\x53\xb9\x0b\x77\xbd\xe3\x31\x8a\xba\x6e\x1e\x7c\xa3\x72\xd9\xd6\x97\x66\xd5\x0c\x89\x42\xe3\xa5\xdf\xa1\x5d\xea\xa5\xc9\xf4\xe9\xa2\x7d\x27\xd7\x19\x88\xca\x1f\xbb\x7d\xd1\x0e\x1c\x65\xc0\xe8\xc0\x6a\x3c\x52\x71\x63\xec\x45\x4f\xec\x7f\x58\x14\xa3\xe2\xf3\xda\x1b\xac\xa6\x15\x95\x63\x31\x6f\xd3\xd6\x08\xe4\x6b\xec\xec\x8e\x45\x67\xd0\x3f\x48\x5d\xf7\xeb\x7d\xf9\xf3\xe6\xe2\xd3\x47\xf5\x4d\xe7\x47\x55\xf4\x64\x6a\x3e\xf4\x74\x9a\xdb\x0f\x98\x7b\x17\xe8\xbd\x90\x74\x3a\x16\x3d\xf2\xf6\x5b\x82\x21\xa5\x9f\x9f\x48\x7a\xef\xac\x60\xb5\x6b\x16\x35\x46\x7a\x41\x37\x79\xa8\xd2\xbd\xae\xfa\xed\x76\x05\x5d\x7d\xed\xe8\x8c\x76\x3e\x77\x0c\xfd\x17\xcc\x18\x8a\x9a\x02\xaf\x5b\x35\x29\xce\x28\x4f\xb8\xce\x93\xf0\x1a\x70\xd5\xbc\xe8\x78\xb5\xdd\x78\xaa\xed\xb5\x52\xeb\x91\x89\xfc\xa9\x1a\x35\xfe\xf6\x18\x3f\xa0\xf5\x75\x57\x05\x52\x37\x19\x80\x55\xbf\x17\xb8\x77\x38\x15\x88\x95\xcf\xcb\xca\xde\xba\x55\x03\x75\x46\xf9\xc1\xa5\x0c\xe1\x25\xf9\x6f\xe4\xa8\x62\xdd\x6a\xe0\xda\xa3\xbc\xe0\x9a\xa7\xe1\x56\x8f\x6e\xd1\xf0\xaa\x5e\x2f\x58\xed\x8f\x73\xe4\x4f\xdd\xaa\x61\x3a\xa3\xbc\xe0\xda\x09\xab\xaa\xb3\x6a\x5c\xb4\x93\x5a\x9e\x40\x5b\x7b\xaf\x6c\x5b\xb4\xb2\x2c\x5e\x10\xad\x2c\x54\x0d\xb2\x6c\x5c\xb4\x33\x55\x9e\x40\xdb\x68\x9a\xb6\x45\x2b\xb1\xe0\x03\xb1\x69\x30\x2d\x3b\x39\xca\x3c\xaa\x4f\x50\x9a\x8a\x5e\x35\x6a\xdc\xec\x31\x5e\x40\xcf\x19\x5e\x41\x76\xdf\x50\xf3\xba\x55\x83\x75\x46\x79\xc1\xfd\x8c\x60\xdc\xb4\xe3\x65\xdb\xc2\xe4\x77\xab\x11\x9e\x10\xdd\xfb\x70\x0d\x51\xb7\x2d\x9a\x19\x63\xbf\x33\x13\x45\x0c\x39\x5f\xa3\xeb\x96\xf2\x6b\x7e\xd3\xeb\x09\xab\xb9\xad\x2f\xac\x6d\x7d\x31\x6a\x5b\x5f\xe0\x25\x71\xe9\xd4\x2d\x06\x56\xd9\xbb\xa5\x5f\xa0\x5b\x0c\xac\xb2\xd7\x0f\x56\x7e\x65\x3e\x7d\xa8\x81\xe9\xa6\xb2\x48\x5a\x35\xc0\x4f\xa3\x5b\x2f\x22\xe4\x4f\xd5\xa8\x51\xb4\xc7\xf8\x01\x6d\xa0\x68\xe1\xb7\x11\x39\xb3\x42\x7f\xaa\x63\x73\x1c\xd0\x1d\xd9\xfe\x80\x80\xa0\x67\xe1\xc7\x1d\x19\xe8\x54\x42\xf8\x14\x16\x3c\x85\x05\x4f\x61\xc1\x53\x58\xf0\x14\x16\x3c\x85\x05\x4f\x61\xc1\x53\x58\xf0\x14\x16\x3c\x85\x05\x7f\xb1\xb0\x60\xfd\xe0\x0f\xb9\xf5\xd5\xa5\x7f\x41\xc9\xee\x52\xcd\xbe\x10\x74\x2d\xc2\x51\xeb\x7d\xfd\xb6\xe9\x63\x9d\x9d\x15\x6f\x1e\x83\xd7\x9f\x5a\xc2\x79\x5c\x05\xd4\xed\xc8\xdb\xaa\x9c\xf3\x98\x25\xf6\x52\xd4\xf9\x47\x70\x66\x4f\x05\x9e\xb7\xe7\xdd\xc3\xca\x3c\x6f\xdc\x5d\x3f\xa0\xd8\xf3\x38\x01\xfc\xa7\x96\x7c\x1e\xc7\xa5\x47\x51\x8a\x48\x17\x0a\x39\x4f\x21\x76\x6b\x5b\x8d\x3a\x02\x9c\xea\xcf\xfb\xdd\xdb\x06\xd7\xc7\xa5\x5d\x61\x85\xd5\xa0\x9e\x6d\x53\x53\x79\x1c\x77\xb6\xaf\xac\xbc\xd9\xcb\xe8\x28\x95\xdc\x2e\x26\x33\x54\x33\x39\xdc\x7d\xd1\x64\x0f\x94\xab\xd2\xc9\x1d\x5b\xc7\xa7\x0c\x5e\x47\x1d\x64\x55\x2e\x39\xec\x70\xf8\xd4\xdf\xbb\x29\x85\xec\x25\x0c\xbb\x20\xb2\x07\x2f\xc2\xaa\x2e\xf2\xe6\xb1\xc1\xcc\xeb\x1b\xf7\xb5\xe3\x1b\x6c\x9e\xb0\x2e\x95\xcd\xab\x02\xaf\xd1\xaf\xd6\x17\xf4\x1e\x1f\x87\xef\xa3\x1c\xaf\x6f\x81\x5d\x07\xed\x0d\x65\x63\xfd\x49\xd9\xa6\xda\x6e\xf5\x35\xd4\xe6\xd2\xb1\x3d\x45\x1d\x4c\x95\xdd\xc2\x66\xd7\xcb\x3d\x55\xef\xf5\xad\xc7\xbb\x6b\xfe\x3e\xb0\x38\x2f\x4e\x00\x8e\x5b\xe5\x5a\xbd\x4b\xf6\x3e\x37\x35\x7b\x0b\xcd\xa7\x2d\x20\xd4\x95\x46\x3b\x59\xfa\x67\x17\xfc\xf5\x11\xc1\x8f\x2c\xfb\xeb\x65\xa5\xb6\x3c\x2d\x76\x58\xfc\xd7\x25\xd2\xbf\xfa\xef\xcb\xf1\xe5\x7f\xfb\xaa\xc4\xb8\x68\x6c\x53\x24\xb8\xa5\x92\xc3\x7f\xda\x16\xe2\x51\x95\x0a\xf6\x34\x23\x7b\x2f\x18\xec\xad\xbb\x7f\x91\xb2\xc1\x38\x56\x1f\x78\x6e\xaa\x11\xdc\x5b\x18\xe5\xb9\x5d\xf0\xdc\xd5\xe8\x0e\xa0\x4d\x8d\xde\xa6\xd4\xf0\x03\x34\xba\x56\xe7\x07\x55\x13\xf6\xd1\xc5\x07\x05\x02\x5d\xf1\x60\xa6\x5a\x1a\x98\x99\x83\x78\x1b\x04\xbb\xe2\x38\xd5\xd2\x55\xd5\xd1\xc4\x71\x1b\xff\x41\x8f\x8a\xf9\xa3\x9e\x29\x6c\xb2\x7e\x3b\x2a\x14\x94\x8b\x2d\xec\x67\x97\x6e\x6f\x80\xd6\x63\xff\x7b\xb3\xd8\x43\x1a\x6b\x62\xd7\xf5\x9f\x5c\xb7\xcf\x47\xa1\x1e\x6b\xf5\xbe\x2e\x71\x6c\x2e\xdf\xd7\x3d\x6b\xff\xf5\xfb\x2a\x4e\xff\xff\xad\xe2\xe7\xa3\x4c\x8f\xb5\x96\x9f\xaf\x32\xb9\xc5\xfc\x76\xa8\x4c\xa3\xaa\xf9\xfd\x89\xca\xb4\xfe\xeb\x96\xed\xf6\xe0\xda\x50\xf1\x6e\x55\x41\x6c\x3d\x54\x98\xba\x3f\xea\xe8\xf1\x4c\x3b\x92\x9a\x7d\x87\xcc\xe3\x2c\x00\x0e\xe3\x98\x21\x5e\xe5\xed\xbb\xeb\x81\x7b\xf1\x7d\x7f\x55\xc1\x9f\xaf\x37\x97\x05\xf7\x2c\xd5\xe7\x9d\x09\xf4\x37\x87\x75\xd9\x3e\xaf\xa4\x60\x47\xb0\xd3\x5f\xbc\xcf\x2b\xa6\xd9\x5b\x09\xbf\xbd\x31\xab\x2e\xe7\xe7\x33\x6b\xff\x45\xfd\x36\x63\xe1\x51\xda\xcf\xa7\x2c\xa7\xa3\xb2\x2a\x4d\x3f\xe2\x5f\xbd\x69\xe6\xeb\x47\xfc\x73\x87\x83\x01\xa8\x49\xe3\xab\x30\xbf\xe7\xdf\x34\x1c\x3e\x63\x76\xf2\x98\xa3\x8b\x1b\xe3\xef\x30\xf6\xcd\x93\xde\xfb\x8d\x16\x4b\xac\x3f\xfe\x2f\x00\x00\xff\xff\x64\xa2\x48\x98\xd5\x80\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 32981, mode: os.FileMode(420), modTime: time.Unix(1637795806, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xef\x6f\xf2\x36\x10\xc7\xdf\xe7\xaf\x38\xa1\x68\x6a\x27\x96\xad\xed\x3b\xa4\xbe\x98\xca\x54\xf5\x45\xab\x8a\xfd\x78\x83\x78\xe1\x91\x03\xbc\x19\x27\x35\x0e\x15\x8a\xf2\xbf\x4f\x26\x09\x84\x60\xc7\xe9\x36\x1e\x3d\x7d\x74\x57\xa9\x12\xf6\xdd\xf7\xce\xf6\xd9\x7c\x44\xca\xe6\x7f\xb3\x25\x42\x9e\x43\xf4\x2b\xea\xe8\x21\x91\x0b\xbe\xcc\x14\xd3\x3c\x91\xd1\x0b\x5b\x23\x14\x45\x10\xf0\x75\x9a\x28\x0d\x83\x65\x12\xb1\x34\x51\xa8\x93\x88\x27\x3f\xa2\xc0\x35\x4a\xcd\xc4\x20\x08\xb6\x4c\x81\x42\xb1\x8f\xdb\xac\x78\xba\x99\xe0\x92\x6f\xb4\xda\xc1\xc1\x2b\x9a\xd8\xe6\x83\x60\x91\xc9\x39\x70\xc9\xf5\xd5\x35\xe4\x41\x00\x00\x0e\xa5\x7b\x9f\x56\x5e\x94\xe1\x79\x0e\x8a\xc9\x25\x42\x88\x52\x73\xbd\x33\xeb\x18\x42\x58\xab\xc2\xe8\xbe\x5c\xed\x89\x88\x59\x68\x19\xfc\x03\xf0\x05\x6c\x56\x49\x26\xe2\x52\x19\x55\xd3\x13\x42\x13\xdc\xd4\x86\x30\x7a\xcd\xfe\x14\x7c\xfe\x9c\xc4\x58\xc9\x58\x97\x30\xcd\xf3\x93\xb8\xa2\x78\x8a\xcb\x8f\x33\xb8\x87\xef\xec\xcb\xcb\xf7\x7a\x8d\xd2\x96\x1a\xae\x04\xca\xe3\x82\xa2\x07\x85\x4c\xe3\x35\xfc\x54\x2f\xc2\x58\x39\x38\x82\x35\x4b\xa7\x1b\xad\xb8\x5c\xce\xbe\xb7\x67\x78\x92\x8b\x04\x8e\x69\xea\x54\xd5\x1e\xa6\x4c\xa1\xd4\x43\x08\xd9\xbc\xde\xbd\x76\xe6\x66\x5a\xe7\x1e\x3e\x49\x69\xdf\xc8\x32\xc1\xc9\x26\xb6\x05\x07\x66\xe3\x2a\xbf\xa2\x18\xc0\xe8\xb4\xda\x46\xce\xaa\xca\x68\x8c\xa9\xc2\x39\xd3\x18\xb7\xb5\x8c\x1d\x67\x47\xa0\x55\x86\x43\xab\x1c\x4a\x6b\x70\x2b\xd3\x2b\x53\x6c\x8d\x1a\xd5\x18\x17\xa6\x8d\xcd\x1e\xb9\xa3\x0e\x87\xe7\x8e\x8e\x26\xf8\x96\x71\x85\x71\xeb\x40\x6b\xab\xa7\x0f\xa1\x9b\x51\xe3\x66\xbc\xe0\xfb\x71\xa2\x72\x35\x53\x57\x67\x3a\xc6\xa6\x33\xf3\x57\xb6\xc7\xf9\x9e\x36\x6b\xaf\xba\x81\x0f\x21\x14\x37\xfb\x26\xe8\xb1\x02\x5b\xf9\xae\x0d\x11\x37\x8e\xf5\x1e\x02\x9c\x33\xb6\x1a\x6f\xf7\x35\x8a\x9b\x2e\x45\x6b\x19\xb7\x9e\x32\xfc\xa5\xd8\xca\xb9\x2b\xcb\xb9\xf5\x29\x43\xdd\xed\xe2\xce\x74\xfa\x79\x63\xda\x12\xa1\x8c\x3d\xb2\x45\xb7\x50\x3f\x11\xbf\x57\x47\x1a\x7f\x70\xb7\x87\x45\xfa\xfa\xdf\x5c\xdb\x3e\x17\xf0\x17\xa9\x15\xc7\x8d\xa3\x11\x9a\xf7\x6e\x3a\x3b\xde\x3c\x8b\x92\xfd\x99\x6a\xf4\x45\xea\xbb\x49\x55\x29\xce\xb6\x71\x77\xa2\xf9\x86\x19\x55\x2f\x67\xfd\x55\xde\xd1\x4f\xbf\xed\xd2\xa3\xbb\xf9\xd0\xed\x5e\x3f\x82\x69\x34\xc6\x05\xcb\x84\xfe\x83\x89\xec\xec\xdd\x6e\x5a\xd3\xef\x90\xa8\x15\xec\x49\xe8\xef\x1f\xbe\x00\x7c\x3b\xac\x60\x80\x32\x5b\x0f\xba\x8a\xfa\x59\x88\xe4\x1d\xe3\x87\x55\xc2\xe7\xb8\x3f\x4f\xdf\x5b\x08\xa7\x87\xf8\xd7\x10\xc2\xed\xfe\x10\xd3\xe8\x54\xcc\x77\xd3\xf7\x3b\xb0\xf5\x5f\xf2\x8e\x96\xae\xcd\x7f\xed\x7a\x3c\xc4\x61\x1a\x3d\x67\x42\xf3\x54\x74\x1e\x63\xed\xe3\xfa\xe2\xec\x99\xd8\x52\x72\x47\xc4\xc7\xbc\x1d\x53\x2d\x11\x87\x97\x65\xb8\x11\x68\x99\x75\x52\xd9\xef\x69\x7c\x4e\x65\xe5\xe0\x85\xa9\xac\x4c\xf2\xe5\xa9\xcc\xf2\x1a\x11\x96\x11\x96\x11\x96\xb9\x8c\xb0\xec\xdb\xc4\x32\xa2\xb2\x76\x49\x44\x65\x1f\x8c\x26\x2a\xf3\x0c\x37\x02\x5f\x99\x9e\xaf\x88\xa9\x88\xa9\x88\xa9\x7c\x71\xc4\x54\xc4\x54\xc4\x54\xc4\x54\xc4\x54\xc4\x54\xff\xdb\x2f\x5d\x63\x14\x78\xf6\x4b\x57\x39\x78\x61\x2a\x2b\x93\x10\x95\x11\x95\x11\x95\x75\x97\x43\x54\x46\x54\x06\x44\x65\x44\x65\xb5\x11\x95\xf5\x8f\xf8\x94\x54\xf6\x88\xba\xf5\x80\x4c\xd0\xdc\xe5\xed\xa5\xa1\xec\x11\x35\x11\x19\x11\x19\x11\x59\x77\x39\x44\x64\x44\x64\x40\x44\x46\x44\x56\x1b\x11\x59\xff\x88\xcf\x4a\x64\xcf\x4c\xee\x1c\x54\x66\xa6\x2e\x4f\x66\x26\x0b\xd1\x19\xd1\x19\xd1\x59\x77\x39\x44\x67\x44\x67\x40\x74\x46\x74\x56\x1b\xd1\x59\xff\x88\xaf\x86\xce\x0c\x2b\x11\x53\x11\x53\x11\x53\x11\x53\x11\x53\x11\x53\x11\x53\x9d\x1b\x31\x15\x31\xd5\x7f\xf8\xc5\xab\xfc\xdf\x1a\xcc\xf3\xfa\x53\x11\xfc\x13\x00\x00\xff\xff\x08\x39\x9d\x04\x65\x44\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 17509, mode: os.FileMode(420), modTime: time.Unix(1637795759, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


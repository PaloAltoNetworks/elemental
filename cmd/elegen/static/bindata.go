// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x6b\xe4\x38\x17\xdd\xfb\x57\xdc\x2f\x84\x0f\x1b\x2a\xce\x66\x98\x45\x86\x2c\x42\xd3\x0d\x05\x93\x26\x24\x30\x9b\x22\x0b\xb5\xeb\xda\x11\x23\x4b\x46\x92\xd3\x5d\x18\xfd\xf7\x41\xb2\xfc\x90\xcb\xf5\x4a\xd2\xd5\xd0\xd9\xa4\xca\xd2\x7d\x9d\xa3\x7b\x74\x5d\x15\xc9\xfe\x25\x05\x42\xd3\x40\xfa\x84\x3a\xfd\x24\x78\x4e\x8b\x5a\x12\x4d\x05\x4f\xbf\x92\x12\xc1\x98\x28\xa2\x65\x25\xa4\x86\x8b\x42\xa4\xa4\x12\x12\xb5\x48\xa9\xb8\x46\x86\x25\x72\x4d\xd8\x45\x14\xbd\x12\x09\x71\x04\x00\x40\xd7\xc8\x35\xd5\x1b\x6b\xac\xee\x49\x05\xb7\x50\x92\x6a\xa5\xb4\xa4\xbc\x78\xee\x6d\xd2\xa5\xdf\x07\x8d\x33\xb3\x7f\x4d\x73\x05\x92\xf0\x02\xdb\x64\x9e\x2a\xcc\x68\x4e\x33\x97\x8c\xb2\x89\x0c\x1b\x81\xe6\xa0\x5e\x44\xcd\xd6\x8f\x58\x50\xa5\x51\x06\xbb\x21\x85\xcb\xf4\xa1\xfe\xc6\x68\x76\x2f\xd6\x18\xda\x5e\xc1\xe5\x90\x22\xdc\xdc\x42\x6a\xf7\xb0\xf4\xf3\xf0\xf0\x6a\x64\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x39\x8c\xdd\x18\xd3\x15\xb4\x08\x42\x21\x5f\x4f\xa3\x8f\x1e\x99\x28\xc0\x2c\x23\x1a\x0b\x21\xe9\x6f\x08\x9c\xa8\x65\x86\x3f\x05\x3c\xc2\x28\x51\x3f\x11\xb1\xab\x33\x42\xd6\x34\x3e\xab\x4b\xba\x80\x4b\x57\xd9\xc8\xe8\xae\xad\x14\x42\x8c\xbb\x7d\x1f\x07\xec\x9e\x83\xca\xd7\xf8\x63\x06\xeb\xd5\xf3\xea\xb9\xfd\x78\x76\x8c\x2d\x02\x93\xfe\xec\xa1\xa0\x39\x30\xe4\xdd\xf2\xb2\x4d\x1e\x8c\x99\x4d\x37\x4c\xd9\x11\x90\x89\xb2\x12\x35\x5f\x8f\x38\x18\x9c\x04\x86\x9d\xbf\x66\xec\xa2\x37\x37\xc6\x65\x69\xff\x2f\x06\x60\xc1\xec\x25\xc5\x2c\x9a\x06\x90\x29\x5b\x0e\xa7\x6c\xf1\x46\xde\x92\x28\xba\xbe\x06\x97\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x5f\x10\xb2\x5a\x4a\xe4\x1a\x5e\xfd\x9a\xc8\xdd\xe3\xd2\x15\x1b\xe5\x35\xcf\x02\xdb\x38\x81\x9c\x09\xa2\xff\xfc\x03\x1a\xef\xa7\xbf\x3c\xee\x1e\x96\x4b\x9e\x8b\xb4\x0b\x63\x2b\x8c\x22\xbd\xa9\xbc\xbb\x7b\xc2\x49\x81\x12\x94\x96\x75\xa6\x1b\x13\x39\xf7\x71\x1e\xac\x26\xd0\x9d\xd8\x2f\x52\x94\x96\xcd\x98\x5b\x4a\x5b\x78\x13\x98\xed\x6a\x57\xaa\xcf\x66\x7a\xff\xac\xac\xf9\x73\x74\x4c\xb4\x4f\xad\xfc\x6e\x62\xaf\xc3\x9b\xd3\xa3\x06\x0a\xbe\xea\xfc\x1c\x17\xde\xb5\x77\xdc\x36\xf3\xd1\x81\x07\xf5\x5b\xb9\x8f\x47\x86\xe2\x9b\x98\xf0\xa1\xbe\x98\xce\x44\x4a\xba\x50\x34\x07\x0a\xb7\x90\xa7\x5b\xd4\x10\xbe\x49\xfe\x82\xff\xd1\x74\xa9\x3e\x97\x95\xde\xc4\xc9\xa8\xa1\x3a\x68\x02\x01\x99\x73\xd5\xe3\x7e\xb2\x3b\xff\x2c\x74\xe7\x71\xe4\x9b\xe4\x00\x16\x39\x25\xdf\x18\xc6\x1d\x77\xb3\x10\x4c\x9f\xb5\x36\x1d\x32\xea\x3b\xd5\xd9\x4b\xcf\xbe\xcf\xb6\x57\xf1\x3d\xba\xf7\x66\xcd\xcb\x88\x6a\xe7\xb5\xad\x8b\x64\x10\xfb\x9b\x29\x68\x5f\xf1\xfb\x0e\x93\x38\x89\x66\x64\x63\xf2\x75\x8d\x39\xa9\x99\xde\x72\xcb\x29\xf3\x6c\xec\x02\xfa\xa9\x22\x52\xe1\x5b\xe0\xde\xb6\xfc\x85\xa0\x7b\x43\x2e\x74\x7f\x0f\xa8\x47\x21\xf4\x7b\x49\x69\x8b\x7c\x0f\x35\x1f\xc6\x94\xbf\xd8\xf6\xd3\x13\x5c\x9c\x81\xfe\xf5\x83\xc1\xaa\x73\xe0\x5e\x1f\x0e\xc9\x51\xcb\xac\xed\xda\x27\xe7\x36\x50\xa5\xfd\xbd\x37\xe9\x7d\x7f\xba\x26\x52\xd0\xea\x5c\x72\x9c\x12\x1c\x28\x7e\x3e\x1d\xf5\x61\xc7\x72\xe7\xe9\x3a\xaf\x56\xfc\x7f\xce\xe0\x81\xd5\x92\x30\x30\xe6\x6f\xaa\xec\xd5\x7d\xc6\x83\xb9\x2d\x04\x47\xf3\x34\x63\xfa\xdb\xb1\xb5\x5b\x42\x7e\x21\x67\x01\xe4\x27\x75\xb7\xda\xdb\xde\xea\xe4\xfe\x7e\x44\xd6\xd2\xf7\x42\x2b\x15\x8f\xa3\x06\x2b\x2d\x4f\x72\x3a\x5d\xc9\xb9\x3d\x36\xd6\x2b\x91\x50\xfa\x79\xf6\x36\x08\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x32\xb8\x1f\x99\x75\xb3\x76\xfb\x2d\x48\x74\xbc\x6d\x98\xba\xbb\xe8\x26\x72\xf1\xee\x18\xf3\xc0\x50\x54\x7d\x54\xc2\x18\xe0\x0f\xaa\xb4\x55\x6c\xda\xaf\xfb\x60\x81\x4d\x6c\xd5\xfd\xe0\xb8\x39\xb7\xe5\xfc\x6f\xd5\x7b\x5b\xe4\xb4\x9f\x10\x8c\x47\xcf\x4d\xd1\x5f\x84\xec\xeb\x1e\x43\x68\xc9\xf3\x83\x36\xe4\x42\xba\xef\x05\x7d\xc5\x61\xee\xef\x11\x9d\xfa\x39\x74\x9f\x86\xb7\xe9\x2e\x55\x3a\x02\xd6\xf3\xca\xce\xf8\x7d\xf7\x5d\x3f\x59\xec\x7f\x05\x3e\x42\xa4\xc2\x37\x01\x2b\x4d\x26\xfa\x2f\x00\x00\xff\xff\x51\x27\x8c\xfd\xd7\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5335, mode: os.FileMode(420), modTime: time.Unix(1539649739, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5b\x6f\xdc\xb6\xd2\xef\xfb\x2b\xd8\x85\x9b\x4a\xe9\x5a\xce\xf3\xa6\x2e\x90\x2f\x97\xc2\xf8\x92\xc6\x88\x83\xf4\xc1\x30\x6a\x5a\xa2\x6c\x36\x5a\x52\x21\x29\x3b\x3e\x0b\xfd\xf7\x03\xde\x24\x52\x97\x5d\x6a\x6d\xe7\xf8\xe0\x38\x0f\xad\x77\x48\x0e\xe7\xc6\xe1\xcc\x90\x62\x09\xd3\xaf\xf0\x12\x81\xf5\x1a\x24\x27\x48\x24\xaf\x29\xc9\xf1\x65\xc5\xa0\xc0\x94\x24\x7f\xc2\x15\x02\x75\x3d\x9b\xe1\x55\x49\x99\x00\xd1\x0c\x00\x00\xe6\xf9\x4a\xcc\xf5\x5f\xfc\x96\xa4\xf3\x99\xfe\xfb\x92\x26\xb0\xa4\x0c\x09\x9a\x60\x7a\x80\x0a\xb4\x42\x44\xc0\x42\xf7\x5c\xaf\x01\x83\xe4\x12\x81\xe4\xa4\x44\x69\xf2\xf9\xb6\x44\xc7\x8c\x5e\xe3\x0c\x31\x0e\xf6\xeb\x5a\xa3\x90\x54\x80\xba\x6e\x86\x20\x92\xa9\xc6\x21\x14\x5f\x60\x81\x33\x45\xe6\x04\x44\xf1\x6c\xb6\x5e\x83\xbd\x02\x0a\xc4\xc5\x17\xc4\x38\xa6\x04\x2c\x0f\x0d\xca\xf7\x0a\xfc\x4a\x08\x86\x2f\x2a\x81\xb8\xed\x20\x29\x68\x66\xdf\xc3\x0b\xb0\x87\x48\xb5\x92\xe3\x2e\x2a\x5c\x64\x6f\x49\xb5\xe2\x1a\x45\x17\x75\x5d\xcf\x0e\x0e\x24\x01\x6a\x84\x62\x1b\xd4\x35\x60\xa8\x64\x88\x23\x22\x38\x10\x57\x08\x94\x94\x73\x7c\x51\x20\x70\x0d\x8b\x0a\x71\x90\x53\x06\xa0\xa5\x42\x31\xa3\x87\x37\x94\x19\xbd\xcc\x93\x99\x90\x18\x7b\xf8\xb9\x60\x98\x5c\xce\x66\x29\x25\xdc\x6a\x6d\xbd\xde\xb7\x1c\x10\xb8\x42\x0b\xb0\xa7\x66\x93\x5c\xe8\xc1\x5f\xf4\xe4\x46\x84\x86\x6c\xa2\x67\xea\x52\xac\x87\xca\x0e\xfa\xaf\xba\x4e\xac\xa8\x9b\x21\x3d\xaa\x0e\x35\x2b\x76\x84\xa7\x1c\xa5\x9b\xf6\xef\x99\xa4\x16\xe7\x80\x50\x61\x74\xf3\x81\x66\xa8\x48\xde\x20\x01\xd3\x2b\x94\xb5\x82\x75\x5b\xdf\x12\x81\xc5\xad\x11\xce\x51\x86\xd4\xcf\x2e\xe9\x0d\x9c\xe6\xea\x37\xbd\xf8\x07\xa5\x22\x99\x5d\x43\x16\x86\xef\x10\x34\xb6\x9d\x34\xc0\xb5\x62\x46\x76\x5d\x82\xc6\x02\x1d\x54\x9f\x10\x17\xb2\xb5\xae\xe7\x0b\xd5\xf5\x35\x14\xe8\x92\xb2\xdb\xe5\x50\x57\x5a\xb1\xb4\x51\xb2\xee\x7f\xac\x17\xea\xb2\x8f\xda\xb4\xb4\x3d\x19\xbe\x86\x42\xf6\xec\x76\xd4\x0d\x75\xbd\x98\xd5\x13\x65\xbd\x5e\x0f\xf5\x38\xe2\x9f\x28\x15\xdb\x74\x71\x5c\x54\x0c\x16\xa0\xae\xdf\x63\x2e\x5c\x6d\x40\x50\x48\x08\xcd\x03\xc6\x36\x86\x1e\x32\xc7\xe9\xd9\xf3\xd1\x9e\x92\xe1\x83\x03\xe0\x58\x87\xa8\x18\xd1\xa6\x81\x07\x4d\x83\x03\x4c\xd4\x4f\x49\x6d\x32\xcb\x2b\x92\x82\x88\x06\xd2\x12\x37\x33\x45\xf1\xb0\xdd\x28\x9d\x69\x2a\xc6\x71\xb6\xe6\x37\xd3\xf4\xbf\xa6\x65\x4b\x3b\x04\x25\xc5\x44\x20\x06\x04\x05\x10\xa4\xb2\x4d\x12\x1c\x46\xe2\x74\x96\xe4\xe4\x03\xec\xe4\x18\x5e\x14\x88\x5b\x9e\x14\x19\xcb\x43\x00\xcb\x12\x91\x2c\x0a\x43\xbe\xae\x17\x80\x26\x49\x12\xbb\x62\x79\x26\x51\x19\xc6\x5f\x29\x6c\x06\x29\xf7\xd4\x24\xa8\xfa\x09\x01\x41\x37\x7a\x76\xa3\xc7\x87\x92\x83\xa6\x25\xb2\xf3\x27\x49\x32\x2c\x92\xad\xa2\xa2\x95\xb8\xa3\xa4\xe4\x96\xf1\xf7\x42\x8a\x42\x22\xd2\x7e\xde\xd2\xa5\x7d\x93\x9d\xa7\x99\x86\x56\x42\x0d\x48\xa2\x4d\xab\x25\xd6\xf8\x6b\xcf\x4e\x69\x25\x8c\x3a\xd4\x7a\x4b\x29\xb9\x46\x4c\xb8\xda\x50\x96\x48\xc6\xf8\xde\x4d\xdc\xf2\xbf\xe3\x66\xa7\x28\xf1\xe5\xb9\x82\x5f\x51\xb4\xa1\xfb\x02\x14\x88\x44\x34\x6e\x45\x88\xe5\xb0\x17\x2f\x01\x06\xbf\x99\xb6\x97\x00\xff\xfa\xab\x2f\xc2\x53\x7c\x06\x0e\x01\x3d\xc5\x67\x1b\x45\xf3\x06\xe5\xb0\x2a\xc4\x47\x96\x21\xe6\xb9\x99\x4c\x37\x00\x2a\x5b\x30\xb9\x04\x39\x46\x45\xc6\xad\xb5\xa6\x94\x08\x44\x76\x90\x8f\x3b\x61\x14\x83\xd3\x33\x1d\x06\x74\x7c\x8c\x05\xb7\x2c\x75\x02\xab\x8f\x86\xac\x36\x0e\xea\x46\x35\x36\xcc\x6a\x36\x3a\x7f\xab\xf2\xb7\x75\x2d\x22\x2d\x92\xcf\xf4\xa4\x84\x8c\x23\x4f\x1c\x81\x4e\xdd\x18\x19\xca\xa4\x69\x69\x34\xa1\xeb\xfa\xe0\x00\x7c\xec\xbb\x72\x70\x83\x8b\x02\x50\x52\xdc\x2a\x91\x43\xd3\x74\x89\xaf\x11\x31\x2a\x49\xc0\x9f\x54\xff\x09\x56\x08\x12\x0e\xa4\x01\x31\x64\x40\x1c\xed\xa0\x24\x2b\x82\xc8\x28\x3d\x49\x12\xad\x8f\x47\x65\xd8\x49\x87\xcc\xc6\xcf\x8c\x19\xbb\x35\x0d\x57\xb1\xd7\x06\x76\x57\xbb\x36\xb8\xa3\x18\x60\x22\x86\x76\x4c\x24\x92\x57\xc7\x47\x47\x24\xa7\x89\x13\x78\xeb\xa0\xdd\x58\xa1\x8c\x71\x6c\xbc\xb3\x25\x70\xec\x06\x8c\x2b\xd9\x45\x32\x01\xbb\xc3\x6c\x50\xb7\x3d\x3e\x31\x41\x79\x95\x4a\xfa\x3b\xeb\x6d\xf3\x3a\x5b\xaf\x55\x2a\xf0\x99\xbe\x53\x36\xb7\x27\xb9\x05\x39\x2c\x38\x52\x19\x8e\xc7\x98\x94\x8b\x9a\xd9\x22\x90\xf2\x3a\xff\x87\x53\xb2\x9c\xef\xcf\xc1\x85\xfa\xe3\x6f\xc5\x8f\xd1\xcd\xfc\x5c\x8f\x92\x79\x5c\xf2\xa1\x12\xe8\x7b\xaf\xff\xfe\xfc\xdc\xe8\xf8\x4f\x74\xb3\x45\x6e\x36\x1c\x91\x1b\xf0\xf8\xa6\x22\x69\x55\x36\xb0\x05\x61\x14\x6f\x46\xd2\x31\x85\x67\x9b\xfa\xb6\x76\xee\x0a\x68\xb9\xc1\x7e\x16\x33\xc7\x99\xed\xbb\xc9\x9f\xd4\x87\x5c\x4e\x9c\x32\x27\x59\x04\xd1\x16\x75\xc6\x9e\xdf\x34\x41\x37\xbf\xa2\x55\x91\xfd\xc5\xb0\x40\x47\x04\x0b\x0c\x0b\xfc\x2f\xc4\xa4\x9a\x55\x36\x29\xa7\xd2\xde\xb5\x63\x1a\x7b\xc9\x71\x75\x51\xe0\x54\x72\x03\x3a\x68\xf7\x30\xc1\xca\x4d\xdc\x0c\xa0\x45\xc2\x43\xde\x1d\x8b\x73\x33\xdc\x83\x0f\xc1\xf6\x5d\x07\x1f\x06\x32\x6b\x32\x24\xb3\x1b\x8c\xcf\xc7\x52\x37\xeb\x50\x36\x5a\xcb\x3d\x45\xe2\xc0\x0b\xc5\xdd\xd5\x37\x85\xb1\x1c\x77\x62\x02\x9d\x14\x7b\x7c\xfd\xc2\x41\x45\xf0\xb7\xca\xe6\x25\x72\xcc\x44\x5e\xe5\x90\x28\x06\x7e\x1c\xa0\x73\x39\x3d\xd6\xa1\xc6\x1a\xa7\x75\xed\x49\x33\x41\xdb\x29\x79\x6d\x37\x61\xbb\x8e\x1b\x2d\x4b\x87\xd4\x41\x31\x9f\xcf\x3a\x46\xb0\x8b\xc0\x4e\x90\x70\xa8\xe4\x48\x3c\x8c\xc0\xbc\x69\x22\x9c\x01\xbb\x2b\x87\x49\x2d\x4c\x5c\xe0\x10\xe0\xec\x3e\x84\x32\xb4\xdd\x5e\x41\x96\xa5\x34\x43\x59\x77\xe3\x55\x0e\x3f\x58\x10\x3b\xef\xb6\xd3\xb9\x18\x8d\x90\x6d\x5d\x60\x24\x52\x0e\xe2\x45\x31\xf3\xb8\x43\xe2\x89\x12\x73\x4d\xd0\xb6\xf2\x94\xe1\x52\xb4\xa5\xc6\x37\x34\xf5\x73\x0d\x9a\x56\xca\xd3\xa9\x3e\x32\x12\x6c\xd7\x4b\xa8\x45\xbc\xa1\xe9\x80\x13\x51\xe4\xa2\x6f\xa3\xf4\xcc\x4f\x09\xcd\x68\x7a\x36\xef\xba\x05\x05\x3e\xd1\x15\x4a\xcf\x7d\xf8\xdd\xce\xa5\xbc\x78\xfa\x7f\x30\xfd\x2a\x70\xfa\x95\x6f\x60\xfc\x7c\x68\x49\x0d\x45\x7e\x01\x42\x0e\x75\x17\x8a\xfe\x9e\x58\x0c\xed\xf9\x4a\x24\x27\x25\xc3\x44\xe4\xd1\xfc\xb7\x9f\xf9\xf2\x67\xfe\xfb\x5c\xa6\xeb\xed\x16\xa4\x0c\xa4\x05\x69\x4f\x1d\xf7\x8c\x22\x30\x52\x6c\xac\x43\xc7\x13\x7f\x20\x82\x18\x14\xe8\x0f\x24\x04\x62\x20\xe9\x85\x0b\x07\x07\xe0\x0f\x24\x24\x8b\x3d\x17\xd5\x4d\xcd\x7a\x1d\x8c\x57\x61\x28\x45\xf8\xba\xeb\x61\xf7\x36\xc8\x6c\x64\xc6\x28\xf6\xe7\xb1\xe5\x62\x5f\xa4\xda\xc1\xf6\xf6\x9f\x4e\x90\xdf\x17\xc1\xc9\x06\x11\x9c\x8c\x88\xa0\xd9\x64\x74\x2e\x78\xbf\x52\x18\x99\x34\x72\x9c\xc6\xa0\x3c\x9a\x9d\x68\x58\x12\xe0\x10\x38\x18\x3a\x2b\xa0\xbb\x00\x20\xc9\x40\x34\xb6\x0a\xe2\x7e\x93\x2e\xf4\xc6\x46\x6c\x83\x59\x3c\xd7\xa0\xe1\xad\x47\x0e\xba\xb2\xfd\x51\x66\x6b\x44\xf7\x9a\x80\x6f\x59\xb0\x41\x79\xb7\xee\xe2\xa6\xd3\x56\xe8\x38\x57\x69\xb3\x1e\x1c\x83\xc3\x43\xf0\xc2\xc9\x9d\x6d\x06\xb2\xa5\x2c\xa1\xad\x1a\x38\xff\xda\xcc\x22\x60\x85\xfb\x03\xfb\x26\xb0\x04\xcf\xa4\x6d\xf8\x70\x99\xc8\x74\x67\x44\x24\x73\xd0\xd5\x6e\x62\xcf\x4b\x99\x38\x04\x31\x52\xbb\x85\xc7\xbc\x2d\x3b\x1a\x01\xb7\x8c\xf2\x1b\x2c\xd2\x2b\x90\xdf\x17\xef\x29\xe4\xc8\xdf\x64\x97\x5e\xbb\xe6\x63\x40\x12\xe0\x10\x3c\x8b\x86\x44\x14\x4f\x11\x91\x51\x36\x2f\x4d\x5a\x7c\x0c\x25\x77\xb0\x2c\x0b\x5d\x75\x27\x94\x00\x82\x8b\x36\x42\x85\xe0\x79\x80\x3c\x4d\xf5\x7a\x62\x4e\xa3\x26\x8f\xcc\xe2\xdb\x64\xc8\xb1\xbb\x73\xab\xd4\x8f\xb7\x07\x9f\x5b\x45\x6f\x53\x43\x3d\xce\x00\x71\x0e\x7e\xd2\x33\xbb\xfb\xda\x11\x7f\xfb\xad\x82\x45\xe4\x6e\x76\xb1\xa3\xfa\x12\x12\x9c\x46\xf3\x14\x12\xe9\x65\x4a\x25\xbc\x9c\xd1\x15\x80\x40\x73\x71\x83\xc5\x15\xc8\x70\x9e\x23\x86\x88\x68\x0e\x65\xe6\x5e\x01\x8a\x53\x95\x81\xeb\xd9\xa3\x00\xf9\xc6\xb3\xee\x29\x68\x97\x17\x3e\xe2\x58\x7f\x3a\x54\xea\x74\x2a\x65\x63\x0e\xf8\x39\x1f\x32\xae\x59\x63\x41\x9e\x61\xb5\x3f\x7a\xd5\x29\x73\xb4\xad\x92\x1c\x9c\x21\xed\x60\xd3\x8a\x69\x79\x90\x9c\xb2\x95\x8e\xe7\xb8\xa0\x0c\x65\x32\x50\xd7\xc6\xa3\x4b\x4c\x15\x43\xe1\xd1\xbe\x99\x4a\xe6\xc4\x8c\x51\x66\xad\x44\xfd\x50\x16\xd2\x1a\xd5\x5b\x05\x5b\xdb\x28\xed\x5b\x85\x19\xca\xde\x6e\xea\x38\x74\x6e\x1f\x60\x6b\x4d\x8c\xf6\x99\x41\xc2\xb1\xe4\xda\x6b\x4b\xde\x7e\x2f\x29\x47\x6d\xd1\xcb\x80\x3f\x19\x9a\xfc\xde\x32\x46\x55\x7b\xe8\x5c\x3b\xfc\xb9\xa3\x73\xc4\x98\x4f\xba\x95\x87\x45\x65\xe2\x3c\x3f\xa4\x1f\xb1\x80\xf8\xa5\xc2\xd7\xb3\x97\x8e\xa8\x9a\x03\x18\x1f\xbe\x90\x83\xe3\xd6\x58\x9c\x7c\x61\x90\x19\x81\x57\x68\x12\x2b\x9f\xf1\x0a\x3d\x46\x46\xd0\x77\x81\x18\x81\xc5\x24\x66\xde\x9a\x41\x8f\x91\x21\x4c\x04\xba\x44\x6c\x12\x3f\x47\x44\x3c\x46\x56\xf2\x82\x42\x31\x89\x91\x77\x72\xc4\x23\x61\x65\x13\x67\x0c\xe5\x03\x7c\x0d\x13\x9a\xb4\x5e\x72\x84\x64\xd4\x21\x15\x4d\x90\x36\x65\x20\xf2\xe8\x7a\x8f\xb9\x98\xc7\x1d\xe0\x07\x58\xce\x63\x4b\xb0\x09\xba\x78\x75\xe1\x9c\xf6\x0e\xef\x4a\x2d\x8d\x2d\x97\xbc\xba\xd8\xce\x52\x10\x5b\x6e\x70\x34\xca\x60\xf2\xaa\x28\xe8\x0d\xca\x5e\x5f\x51\x9c\x22\x1e\x62\x4d\xda\xed\x1e\x11\x75\xe4\xdb\x31\x26\xed\xc5\xa3\x11\x9b\x5a\xb4\xd5\x1c\x39\xee\x1f\x8a\x49\x8f\x80\xf3\xf9\x02\xcc\xcf\x25\xb6\x7a\xa1\x22\xe9\x57\x95\xa0\x97\x26\x61\xcc\x36\x58\xe6\x5d\xd4\xdc\x12\x01\x59\x90\x0c\x8e\xa1\xcc\x5c\x49\xd8\x5a\x5a\xa8\x7a\x49\x77\x8e\x73\xcd\x9e\xb3\x2f\x3e\x04\x67\x97\x02\x24\x1f\xe0\xf7\xf7\x88\x5c\x8a\x2b\xf0\x22\x84\xb7\x0f\xf0\x3b\x5e\x55\x2b\x3d\x24\x94\x43\x09\x6d\xe7\x91\x10\x75\x0e\xf6\x60\x2c\x61\x32\x89\x25\x4c\x76\x64\xa9\x99\xe7\xe1\x59\x82\xdf\xd5\x2d\x3f\xf0\x22\x79\x31\x16\x24\x85\xbb\x7c\xa3\xc4\x09\x1e\xbf\xd1\xe1\x17\x73\x07\xf0\xfe\xf8\x35\x05\xc4\x50\xa2\x83\xf7\xdb\x85\x8c\xae\xa3\x0e\xd9\xf1\x7d\xeb\x69\x9b\x21\xde\xa7\xd6\xb4\x9d\x4e\xd7\x9a\xa5\xe2\x01\xb4\x16\x48\xf3\x2e\x4a\x6b\xa9\xfe\x41\x4a\x6b\x8e\x87\x13\x37\x79\x76\x8e\x8f\xd5\xc5\xe1\xc1\xeb\xcb\x3d\x49\x48\x74\x2b\xcb\xad\x62\xdd\x39\x11\x6e\xf9\xd7\xc0\xd0\xf0\x2a\x98\xcf\xfd\x91\x78\x2a\x40\x0a\x1e\xc3\xd7\x0d\xab\x8a\xb2\xa6\xea\xa0\x13\xd2\x56\x10\xee\xdd\xe3\xd7\x15\x17\x74\x65\x0b\x85\x2d\x86\xa4\xad\x61\xac\x60\x59\x62\x72\xa9\x2e\x30\xab\x53\xa9\x16\xd3\x07\xdd\x94\x98\xff\x83\x79\x7b\x1b\xbd\x47\x4e\xa7\xc2\x61\xb1\x0e\xeb\xc2\xe0\xb5\x1a\xa1\xf7\x27\xe3\x21\x91\x9b\xa2\xa3\x1f\xf7\xc6\xe0\x77\xa7\xf6\x68\x8a\x51\x7e\x17\xb7\x50\x62\x70\xa0\x81\xb1\xcd\x68\xd4\x1b\x65\x8f\x6a\x70\x11\x7e\x64\x2f\x5b\x70\x8e\x53\x25\xda\x77\x94\x35\x89\xbe\x57\x27\x6e\xa0\x5e\xf7\xe6\x64\x4a\x17\x7f\xdb\xcb\xef\xea\x32\xf9\x57\x74\x6b\x0b\x1a\xdb\x8e\x65\xc6\x68\x88\x14\xa2\x7e\xc5\x77\x84\x9c\xb6\xea\x7b\xbd\x00\xf4\xab\xd1\xff\xe8\xc4\x6d\x4d\xe3\x03\x2c\x4f\xe5\x54\x67\x2f\xe5\xb0\x9e\xa4\xaf\x5d\x21\x1f\x1c\x80\xbf\x10\x48\x69\x55\x64\x4a\xb6\x39\x26\x19\xc0\x62\x01\x38\x05\x05\x12\xbf\x70\x90\x5e\xa1\xf4\x2b\xa0\xe6\xce\x1a\xbd\x41\x4c\x17\x3f\x31\xc9\xd0\x77\x94\x01\x5e\xa2\x14\xac\x60\xe9\xea\x6c\x13\x9d\xef\x25\x8a\xd7\x90\xa3\x01\x82\xed\xfd\xda\x41\x81\x70\x4f\x87\x79\x55\x14\x8e\x8e\xb8\xdf\x73\x05\xcb\x40\x6d\x8d\xcc\x15\xc5\x12\xc7\xa9\x56\xd6\x59\xa8\xae\x02\xd8\xf7\xb8\x9e\x6d\xbf\x09\xe6\xf5\xef\x5d\x0b\x83\xa5\x2a\xee\x36\x62\x90\x26\xbc\x09\xdb\xf6\x4f\x0c\xfc\xf9\x0e\xa7\x48\x61\xdd\xf5\xbc\x93\x8a\x6d\xce\x2d\xa4\x66\x84\x24\xa1\x73\x6a\xe6\x7d\x5e\xd3\xdd\x6e\xe6\xcb\xad\xcb\xca\x3d\x5f\xdf\x1f\xcd\x89\xe4\x3f\x17\xbe\xec\xa7\x36\x32\xb3\xf1\x70\x75\xee\x1d\xf9\xf9\xde\x72\x24\x0f\xdd\xaf\xeb\x49\xb9\x62\x1b\xb0\x34\xc3\xea\x66\xe7\x5b\xf4\x79\xeb\x24\x95\x2d\x75\x6e\xc3\x72\x30\x01\xdd\xc8\x9d\x9d\x60\xf0\x32\x8e\xfc\xe7\x35\x2c\x47\xd4\x15\x36\x05\x43\x4a\x73\x1f\x49\x71\xeb\xcd\xe0\xc0\x35\x07\x9d\x9e\x41\xd8\xbd\xfb\x1f\x4e\xbb\x0b\xd7\xd8\x3b\x3d\xa7\x60\xb7\xe1\x5f\x17\xbb\x82\x2b\xec\xea\x9a\x9c\xd7\xdb\xbb\x27\x97\x84\x4f\x58\x32\x94\x76\xb5\xdd\x42\x2d\x2b\x4e\xaf\x40\xbc\xde\x2d\x8f\x16\x71\x03\x5e\x0e\xdc\x96\xe8\x5c\x91\x08\x9a\xc9\xa9\xab\xdb\x26\x03\xd2\xb4\xb7\xed\x41\xe8\xde\xe1\x42\x20\xa6\x8e\x51\x9d\xd6\x16\xaa\x91\x7a\xbd\xc2\xf0\x52\x86\xf0\x25\xf9\x7f\xe4\xd9\x64\x0b\x35\x78\xdd\x5e\x41\x78\xcd\x75\x09\xa7\x45\x43\x34\xbe\xa6\x35\x08\x97\x73\x47\xcc\x69\x6d\xa1\x1a\xa7\xd7\x2b\x08\xaf\x5b\x00\x69\x1a\x1b\xe0\xb2\x5f\x24\x09\x44\xda\x5b\x26\x16\xb6\xec\xe5\xec\x41\x18\x9d\xa2\x46\x8b\xd2\x02\x97\xfd\xc2\x47\x20\xd2\x3e\x99\x06\xb6\xec\x25\xa9\x21\x18\xbb\x9e\xd3\x71\x98\x93\xfc\xa4\x72\x4c\x5d\x43\x6f\x80\x9a\x36\xb7\x4f\x10\xd2\x63\x86\x57\x90\xdd\x76\xcc\xbc\x85\x6a\xb4\x5e\xaf\x20\xbc\x9f\x10\xcc\xba\x0e\xdd\xc2\x96\xa6\x60\xd8\xf4\x08\xc4\xe8\x1f\xbc\x69\x8c\x1a\xb6\xec\x96\x20\x83\x30\x9e\xf4\x96\xe2\x89\xb3\x14\x4f\x26\x2d\xc5\x13\x7d\x4a\xea\xe2\x52\x10\x83\xcb\xb6\x86\xe1\xaa\x2e\xcc\x7d\x9c\x16\x99\x06\xd9\x0f\x39\x9b\x0e\x61\x96\xd3\x3b\xe2\x94\xff\x1a\xa0\x26\xd1\xed\x13\x86\xb4\x43\xa2\x43\xdf\x56\xe2\xcc\x0c\xe3\xa9\xe9\xf6\xb8\x79\x38\xcd\xf8\x01\x01\xf4\xc8\xc4\x8f\x3b\x92\xd6\x79\x5d\xf2\x14\x46\x3f\x85\xd1\x4f\x61\xf4\x53\x18\xfd\x14\x46\x83\xa7\x30\xfa\x29\x8c\x7e\x0a\xa3\x2d\xc6\xa7\x30\x3a\x00\xe1\x7f\x63\x18\xbd\xee\x7f\x99\x72\x87\x8b\xf9\xfa\x08\x26\xfc\xb3\xf8\xe1\x97\x58\x42\x31\xe8\xef\x9d\x27\xcd\x77\x7a\xb6\xed\x9a\xee\xbd\xbd\xcd\x32\x85\xae\xff\xe8\x0b\x2d\xd3\xde\x31\xd8\x8d\xbd\x9d\x5e\x6b\x99\x32\xc5\x83\xbc\xd9\xf2\x23\x24\xf3\x40\xef\xb7\xec\x2e\xbb\xbb\xbd\xe2\xb2\x75\x75\xfd\x80\xb7\x5c\xa6\x29\xe0\x7f\xf5\x45\x97\x69\x52\x7a\xdc\x1f\xb1\xea\x2f\xc2\xde\x55\x45\xe1\x89\x64\xd2\xd6\xe0\xbd\xed\xf2\xb0\x6b\x5e\x93\xfa\xb8\x8c\x2e\xb1\x44\x6d\xb4\xbe\x5d\x9e\x58\x99\x26\x9b\xdd\x1f\x5a\xd9\x1e\x7b\x0c\x3c\xac\xd2\xff\x64\x70\xd3\x0b\x2b\x49\x50\xc8\xe1\x3d\xb4\x32\xb0\x08\xb6\x1b\xff\xe0\x83\x2b\x82\x55\xc8\xbf\xd0\xf5\xe3\xde\x5c\x09\x12\xac\xfb\xf2\x4a\x80\x8c\x92\xe6\x01\x96\xed\x7d\xa3\x38\xe8\xfb\xb5\xb5\xb7\xfb\x6f\x1f\xb0\xb6\x86\x13\xf4\xd4\x87\xb1\x95\xde\xd7\x71\x01\x1f\x7e\x3d\xc4\xbb\x1f\xa1\x2f\x79\x78\x64\x6f\x79\x9f\x22\x9c\x95\x5d\x9e\xf5\xc0\x79\xf0\x1b\x15\xfd\xef\x31\xdc\xe7\x3c\x6a\x57\x5c\xcf\x1f\xe8\x99\x90\xd0\x87\x3f\xee\x5b\xbe\x3f\xea\x15\x90\x67\x43\xcf\x80\xdc\xf9\x61\x8f\x10\x0e\xef\xe4\xe3\x3b\xfb\x3c\xd4\x37\xc1\x3a\x54\x19\x9d\xec\x42\xdc\xc0\xe6\x2c\x01\x43\x1f\x64\x9b\xbd\x79\xeb\x13\x52\x8d\x98\x27\x1d\xe6\x98\xd5\xd2\xfb\x80\xb8\xff\x2d\x68\x25\x46\xbf\x06\xdd\xfc\x31\xa8\xf3\x01\x68\x7f\xbf\x6f\xc3\xac\x7f\x07\x00\x00\xff\xff\x38\x02\x3f\x3a\xa1\x59\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 22945, mode: os.FileMode(420), modTime: time.Unix(1539654284, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


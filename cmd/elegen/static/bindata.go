// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4d\x6b\xe4\x38\x13\xbe\xfb\x57\xd4\x1b\xc2\x8b\x0d\x1d\xe7\xb2\xec\x21\x4b\x0e\x61\x98\x81\x86\xcd\x10\x12\xd8\x4b\x93\x83\xc6\x5d\x76\xc4\xca\x92\x91\xe4\xcc\x34\x46\xff\x7d\x91\x2c\x7f\xc8\xed\xfe\x4a\x32\x3d\x30\xb9\xa4\xdb\xd2\x53\x1f\x4f\xa9\x1e\x95\xbb\x22\xd9\xbf\xa4\x40\x68\x1a\x48\x9f\x50\xa7\x9f\x04\xcf\x69\x51\x4b\xa2\xa9\xe0\xe9\x57\x52\x22\x18\x13\x45\xb4\xac\x84\xd4\x70\x51\x88\x94\x54\x42\xa2\x16\x29\x15\xd7\xc8\xb0\x44\xae\x09\xbb\x88\xa2\x57\x22\x21\x8e\x00\x00\xe8\x1a\xb9\xa6\x7a\x63\xc1\xea\x9e\x54\x70\x0b\x25\xa9\x56\x4a\x4b\xca\x8b\xe7\x1e\x93\x2e\xfd\x3e\x68\x1c\xcc\xfe\x35\xcd\x15\x48\xc2\x0b\x6c\x83\x79\xaa\x30\xa3\x39\xcd\x5c\x30\xca\x06\x32\x6c\x04\x9a\x83\x7a\x11\x35\x5b\x3f\x62\x41\x95\x46\x19\xec\x86\x14\x2e\xd3\x87\xfa\x1b\xa3\xd9\xbd\x58\x63\x88\xbd\x82\xcb\x21\x44\xb8\xb9\x85\xd4\xee\x61\xe9\xe7\xe1\xe1\xd5\x08\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x31\x8c\xcd\x18\xd3\x25\xb4\x08\x5c\x21\x5f\x4f\xbd\x8f\x1e\x99\x28\xe0\x2c\x23\x1a\x0b\x21\xe9\x6f\x48\x9c\xa8\x65\x86\x3f\x85\x3c\xc2\x28\x51\x3f\x91\xb1\xab\x33\x52\xd6\x34\x3e\xaa\x4b\xba\x80\x4b\x97\xd9\x08\x74\xd7\x66\x0a\x21\xc7\xdd\xbe\x8f\x23\x76\xcf\x41\xe5\x6b\xfc\x31\xc3\xf5\xea\x79\xf5\xdc\x7e\x3c\x3b\xc7\x96\x81\x49\x7f\xf6\x54\xd0\x1c\x18\x72\x48\x97\x6d\xd8\x60\xcc\x6c\xa0\x61\xb0\x8e\xfa\x4c\x94\x95\xa8\xf9\xda\xb1\x3f\xc0\x03\x48\x67\xa9\x19\x83\x7b\xa0\x31\x2e\x32\xfb\x7f\x31\x90\x09\x66\x6f\x21\xcc\xa2\x69\x00\x99\xb2\x29\x70\xca\x16\x6f\xac\x55\x12\x45\xd7\xd7\xe0\x48\xf9\x07\xa5\xb2\x04\x4a\xd4\xb5\xe4\x0a\xf4\x0b\x42\x56\x4b\x89\x5c\xc3\xab\x5f\x13\xb9\x7b\x5c\x3a\x12\xa3\xbc\xe6\x59\x80\x8d\x13\xc8\x99\x20\xfa\xcf\x3f\xa0\xf1\x76\xfa\x0b\xe3\xee\x61\xb9\xe4\xb9\x48\x3b\x37\x36\xc3\x28\xd2\x9b\xca\x9b\xbb\x27\x9c\x14\x28\x41\x69\x59\x67\xba\x31\x91\x33\x1f\xe7\xc1\x6a\x02\xdd\x29\xfd\x22\x45\x69\x2b\x18\x73\x5b\xc6\x96\xde\x04\x66\x3b\xd9\xa5\xea\xa3\x99\xde\x39\x2b\x0b\x7f\x8e\x8e\xf1\xf6\xa9\x95\xdc\x4d\xec\xb5\x77\x73\xba\xd7\x40\xb5\x57\x9d\x9d\xe3\xdc\xbb\x96\x8e\xdb\x06\x3e\xda\xf1\xa0\x78\x2b\xf7\xf1\x48\x57\x7c\x13\x13\x3e\xe4\x17\xd3\x19\x4f\x49\xe7\x8a\xe6\x40\xe1\x16\xf2\x74\xab\x34\x84\x6f\x92\xbf\xe0\x7f\x34\x5d\xaa\xcf\x65\xa5\x37\x71\x32\x6a\xa5\x8e\x9a\x40\x34\xe6\x4c\xf5\xbc\x9f\x6c\xce\x3f\x0b\xcd\x79\x1e\xf9\x26\x39\xc0\x45\x4e\xc9\x37\x86\x71\x57\xbb\x59\x0a\xa6\xcf\x5a\x4c\xc7\x8c\xfa\x4e\x75\xf6\xd2\x57\xdf\x47\xdb\x2b\xf7\x1e\xad\x7b\xb3\xce\x65\x44\xb5\x33\xda\xd6\xe5\x31\x08\xfc\xcd\x94\xb4\xaf\xf8\x7d\x07\x24\x4e\xa2\x19\xd9\x98\x7c\x5d\x63\x4e\x6a\xa6\xb7\xcc\x72\xca\x7c\x35\x76\x11\xfd\x54\x11\xa9\xf0\x2d\x74\x6f\x23\x7f\x21\xe9\x1e\xc8\x85\xee\x48\x5c\xaa\x47\x21\xf4\x7b\x8b\xd2\x26\xf9\x9e\xd2\x7c\x58\xa5\xfc\xc5\xb6\xbf\x3c\xc1\x95\x19\xe8\x5f\x3f\x0c\xac\x3a\x03\xee\x95\xe1\x90\x1c\xb5\x95\xb5\x5d\xfb\xe4\xcc\x06\xaa\xb4\xbf\xf7\x26\xbd\xef\x4f\xd7\x44\x0a\x5a\x9d\x4b\x8e\x53\x82\x03\xc9\xcf\x87\xa3\x3e\xec\x58\xee\x3c\x5d\xe7\xd5\x8a\xff\xcf\x01\x1e\x58\x2d\x09\x03\x63\xfe\xa6\xca\x5e\xdd\x67\x3c\x98\xdb\x42\x70\x74\x9d\x66\xa0\xbf\x5d\xb5\x76\x4b\xc8\x2f\xac\x59\x40\xf9\x49\xdd\xad\xf6\xb6\xb7\x3a\xb9\xbf\x1f\x91\xb5\xe5\x7b\xa1\x95\x8a\xc7\x5e\x83\x95\xb6\x4e\x72\x3a\x5d\xc9\xb9\x3d\xd6\xd7\x2b\x91\x50\xfa\x79\xf6\x36\x70\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x22\xb8\x1f\xc1\xba\x59\xbb\xfd\x16\x04\x3a\xde\x36\x4c\xdd\x9d\x77\x13\x39\x7f\x77\x8c\x79\x62\x28\xaa\xde\x2b\x61\x0c\xf0\x07\x55\xda\x2a\x36\xed\xd7\xbd\xb3\x00\x13\x5b\x75\x3f\x38\x6e\xce\x6d\x39\xff\x9b\xf4\xde\x16\x39\xed\x67\x03\xe3\xd9\x73\x53\xf4\x17\x21\xfb\xbc\xc7\x14\xda\xe2\xf9\x41\x1b\x72\x21\xdd\xf7\x82\xbe\xe2\x30\xf7\xf7\x8c\x4e\xed\x1c\xba\x4f\xc3\xdb\x74\x97\x2a\x1d\x41\xeb\x79\x65\x67\xfc\xbe\xfb\xae\x9f\x29\xf6\xbf\x02\x1f\x21\x52\xe1\x9b\x80\x95\x26\x13\xfd\x17\x00\x00\xff\xff\x11\x03\x2d\x1e\xcb\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5323, mode: os.FileMode(420), modTime: time.Unix(1554955843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x73\xdc\x36\x92\xcf\x9e\x5f\x81\x4c\x29\xde\x19\xef\x88\xf2\xf3\x64\xb5\x55\x3e\xc7\x49\xa9\xce\x4e\x54\x91\x2f\xfb\xe0\x72\xad\x21\xb2\x39\x42\xcc\x01\x68\x00\x94\xad\x9b\x9a\xff\x7e\x85\x0f\x12\x00\x3f\x86\xa0\x3e\x7c\xba\x3a\xf9\x21\xd1\x34\x80\x46\x7f\xa1\xd1\x68\x80\x5d\xe2\xf4\x33\xde\x00\xda\xed\x50\x72\x01\x32\x79\xcd\x68\x4e\x36\x15\xc7\x92\x30\x9a\xfc\x86\xb7\x80\xf6\xfb\xd9\x8c\x6c\x4b\xc6\x25\x5a\xcc\x10\x42\x68\x9e\x6f\xe5\xdc\xfc\xb5\x61\x09\x2e\x19\x07\xc9\x12\xc2\x4e\xa0\x80\x2d\x50\x89\x8b\xba\x95\xc8\xab\xea\x32\x49\xd9\xf6\x64\x4b\x64\x7a\x05\x45\x71\x75\x92\xb2\xf2\x46\x48\x5e\xa5\xb2\xe2\x60\x3a\xee\x76\xc7\x88\x63\xba\x01\x94\x5c\x94\x90\x26\xef\x6f\x4a\x38\xe7\xec\x9a\x64\xc0\x85\x9a\x5f\x63\x53\x24\xa2\xfd\xde\x0d\x01\x9a\xa1\x63\xdb\xda\x46\xf1\x27\x2e\x48\xa6\x99\x88\x44\xb4\xdf\xcf\x96\xb3\xd9\x6e\x87\x8e\x0a\x2c\x41\xc8\x3f\x81\x0b\xc2\x28\x5a\x9f\x5a\x8c\x6f\x35\xf8\x95\x94\x9c\x5c\x56\x12\x44\xdd\x41\x89\x67\xb7\xb3\x93\x1f\x91\x15\x3a\x02\x5a\x6d\xd5\xb8\xcb\x8a\x14\xd9\x1b\x5a\x6d\x85\x41\xd1\x46\xbd\xdf\xcf\x4e\x4e\x94\xe4\xf5\x08\xcd\x35\xda\xef\x11\x87\x92\x83\x00\x2a\x05\x92\x57\x80\x4a\x26\x04\xb9\x2c\x00\x5d\xe3\xa2\x02\x81\x72\xc6\x11\xae\xa9\xd0\xcc\x98\xe1\x0d\x65\x56\x69\xf3\x64\x26\x15\xc6\x0e\x7e\x21\x39\xa1\x9b\xd9\x2c\x65\x54\xd4\x2a\x75\xe2\x3b\xa2\x78\x0b\x2b\x74\xa4\x67\x53\x5c\x98\xc1\x7f\x9a\xc9\xad\x08\x2d\xd9\xd4\xcc\xd4\xa6\xd8\x0c\x55\x1d\xcc\x5f\xfb\x7d\x62\x27\x71\x43\x3a\x54\x9d\x1a\x56\xea\x11\xb5\x72\x9c\x6e\xdc\xdf\x33\x45\x2d\xc9\x11\x65\xd2\xea\xe6\x1d\xcb\xa0\x48\x7e\x06\x89\xd3\x2b\xc8\x9c\x60\xfd\xd6\x37\x54\x12\x79\x63\x85\x73\x96\x81\xfe\xd9\x26\xbd\x81\xb3\x5c\xff\x66\x97\x7f\x41\x2a\x93\xd9\x35\xe6\x71\xf8\x4e\x51\xb3\x08\x92\x06\xb8\xd3\xcc\xa8\xae\x6b\xd4\x58\xa0\x87\xea\x0f\x10\x52\xb5\xee\xf7\xf3\x95\xee\xfa\x1a\x4b\xd8\x30\x7e\xb3\xee\xeb\xca\x2a\x9e\x36\x4a\x36\xfd\xcf\xcd\x2a\x5e\x77\x51\xdb\x16\xd7\x93\x93\x6b\x2c\x55\xcf\x76\x47\xd3\xb0\xdf\xaf\x66\xfb\x89\xb2\xde\xed\xfa\x7a\x9c\x89\x3f\x18\x93\x63\xba\x38\x2f\x2a\x8e\x0b\xb4\xdf\xbf\x25\x42\xfa\xda\xc0\xa8\x50\x10\x96\x47\x8c\x6d\x0c\x3d\x66\x8e\x0f\x1f\x5f\x0c\xf6\x54\x0c\x9f\x9c\x20\xcf\x3a\x64\xc5\xa9\x31\x0d\xd2\x6b\x1a\x02\x11\xaa\x7f\x2a\x6a\x93\x59\x5e\xd1\x14\x2d\x58\x24\x2d\xcb\x66\xa6\xc5\xb2\xdf\x6e\xb4\xce\x0c\x15\xc3\x38\x9d\xf9\xcd\x0c\xfd\xaf\x59\xe9\x68\xc7\xa8\x64\x84\x4a\xe0\x48\x32\x84\x91\x72\xbf\x9a\xe0\x38\x12\xa7\xb3\xa4\x26\xef\x61\x27\x27\xf8\xb2\x00\x51\xf3\xa4\xc9\x58\x9f\x22\x5c\x96\x40\xb3\x45\x1c\xf2\xdd\x7e\x85\x58\x92\x24\x4b\x5f\x2c\xcf\x15\x2a\xcb\xf8\x2b\x8d\xcd\x22\x15\x81\x9a\x24\xd3\x3f\x31\xa2\xf0\xd5\xcc\x6e\xf5\xf8\x50\x72\x30\xb4\x2c\xea\xf9\x93\x24\xe9\x17\xc9\xa8\xa8\x58\x25\xef\x28\x29\xb5\x65\xfc\x7b\xa5\x44\xa1\x10\x19\x3f\x5f\xd3\x65\x7c\x53\x3d\x4f\x33\x0d\xab\xa4\x1e\x90\x2c\x0e\xad\x96\xa5\xc1\xbf\x0f\xec\x94\x55\xd2\xaa\x43\xaf\xb7\x94\xd1\x6b\xe0\xd2\xd7\x86\xb6\x44\x3a\xc4\xf7\xed\xc4\xad\xfe\x3b\x6c\x76\x9a\x92\x50\x9e\x5b\xfc\x19\x16\x07\xba\xaf\x50\x01\x74\xc1\x96\x4e\x84\x44\x0d\x7b\xf9\x13\x22\xe8\x1f\xb6\xed\x27\x44\xfe\xfe\xf7\x50\x84\x1f\xc8\x47\x74\x8a\xd8\x07\xf2\xf1\xa0\x68\x7e\x86\x1c\x57\x85\xfc\x9d\x67\xc0\x03\x37\x93\x99\x06\xc4\x54\x0b\xa1\x1b\x94\x13\x28\x32\x51\x5b\x6b\xca\xa8\x04\x7a\x0b\xf9\xf8\x13\x2e\x96\xe8\xc3\x47\x13\x06\xb4\x7c\x4c\x0d\x76\x2c\x35\xa1\x8d\x99\xe5\x77\x4b\x96\x8b\x83\xda\x51\x4d\x1d\x91\x35\x1b\x5d\xb8\x55\x85\xdb\xba\x11\x91\x11\xc9\x7b\x76\x51\x62\x2e\x20\x10\x47\xa4\x53\xb7\x46\x06\x99\x32\x2d\x83\x26\x76\x5d\x9f\x9c\xa0\xdf\xbb\xae\x1c\x7d\x25\x45\x81\x18\x2d\x6e\xb4\xc8\xb1\x6d\xda\x90\x6b\xa0\x56\x25\x09\xfa\x8d\x99\x3f\xd1\x16\x30\x15\x48\x19\x10\x07\x0b\x12\x70\x0b\x25\xd5\x22\x58\x58\xa5\x27\x49\x62\xf4\x11\xeb\x24\xb4\x51\x4f\xe1\xff\xce\x56\x9e\xb4\x68\x56\x4e\x27\x59\xbc\x18\xa1\x01\xed\xf7\x87\x5d\x47\x6d\x4d\xbe\x2d\x5c\x5b\xd8\x5d\x97\x82\xc5\xbd\x58\x22\x42\x65\xdf\x26\x0b\x32\x79\x75\x7e\x76\x46\x73\x96\x78\xb1\xba\x89\xf3\xad\xe1\x7a\xc7\x86\xb1\x58\xb3\x1d\x63\x6e\x55\x17\xc5\x04\x6e\x0f\xab\xe3\xc0\xf1\x90\xc6\xc6\xf1\x55\xaa\xe8\x6f\x2d\xd1\xc3\x4b\x73\xb7\xd3\xa7\x87\xf7\xec\x17\x6d\xa6\x47\x8a\x5b\x94\xe3\x42\x80\x3e\x14\x05\x8c\x29\xb9\xe8\x99\x6b\x04\x4a\x5e\x9f\xfe\x12\x8c\xae\xe7\xc7\x73\x74\xa9\xff\xf8\xb7\xe6\xc7\xea\x66\xfe\xc9\xea\xef\x37\xf8\x3a\x22\x93\x3a\x3a\x51\xfb\xf1\xf0\x1e\xa3\xe8\xd0\xfa\x1d\x41\xb8\x58\x1e\x46\xd2\x52\xf3\xf3\x43\x7d\x9d\xa5\xfb\xcc\xaf\x0f\xd8\xc6\x6a\xe6\xf9\xb6\x63\xff\x2c\xa8\x64\xad\x16\x94\x60\xdc\x3b\x3b\xa2\xc5\x88\xaa\x96\x81\x1b\xb5\x31\xb8\xb8\x62\x55\x91\xfd\x8b\x13\x09\x67\x94\x48\x82\x0b\xf2\xdf\xc0\x95\x0a\xf5\xe1\x52\x4d\x65\x9c\x6d\x4b\xed\x47\xc9\x79\x75\x59\x90\x54\x71\x83\x5a\x68\x8f\x08\x25\xda\x73\x7c\xed\x41\x0b\x32\x40\xde\x1e\x4b\x72\x3b\x3c\x80\xf7\xc1\x8e\x7d\x7f\x1f\x07\xb2\xeb\x2d\xe6\xa0\xd7\x1b\xae\x0f\x9d\xe4\x6a\x67\x71\xd0\x5a\xee\x29\x30\x47\x41\x64\xee\xaf\xac\x29\x8c\xe5\xa4\x15\x22\x98\x33\x72\xc0\xd7\xdf\x04\xaa\x28\xf9\x52\xd5\xc7\x14\x35\x66\x22\xaf\x6a\xc8\x62\x89\xc2\xb0\xc0\x1c\xed\xcc\x58\x8f\x9a\xda\x38\x6b\xb7\x9d\x34\x13\xb8\x4e\xc9\xeb\x7a\x4f\xae\xd7\x71\xa3\x65\xe5\x6c\x5a\x28\xe6\x9d\x6c\xcc\x6d\x04\x76\x01\xd2\xa3\x52\x80\x7c\x18\x81\x05\xd3\x2c\x48\x86\xea\x4d\x3a\x4e\x6a\x71\xe2\x42\xa7\x88\x64\xf7\x21\x94\xbe\xad\xf4\x0a\xf3\x2c\x65\x19\x64\xed\x4d\x55\x3b\xf3\x68\x41\xdc\x7a\x27\x9d\xce\xc5\x60\xc0\x5c\xa7\x09\x06\x02\xe7\x28\x5e\x34\x33\x8f\x3b\x42\x9e\x28\x31\xdf\x04\xeb\x56\x91\x72\x52\x4a\x97\x79\xfc\x99\xa5\xe1\xd1\x83\xa5\x95\xf6\x74\xba\x8f\x8a\x05\xdd\x7a\x89\xb5\x88\x9f\x59\xda\x71\x22\x56\x72\x9f\x14\x53\x22\xfd\x0f\x9c\x7e\x96\x24\xfd\x2c\x0e\x50\xf7\x29\xc8\x41\x4d\x64\x3d\x76\x11\x6b\x1a\x87\x88\xcd\xb7\x32\xb9\x28\x39\xa1\x32\x5f\xcc\xff\xf1\xa3\x58\xff\x28\xfe\x39\x57\x67\x6a\xb7\x31\x68\xb5\x39\x90\xf1\x9f\xcb\x8e\xaa\x22\x63\xb3\x46\x67\x66\x97\xff\x15\x28\x70\x2c\xe1\x57\x90\x12\x38\x4a\x3a\x9b\xf8\xc9\x09\xfa\x15\xa4\x62\xb1\xe3\x38\xda\xe7\xa7\x4e\x07\xbb\xd6\x39\xa4\x40\xae\xdb\x7e\xef\xe8\x80\xcc\x06\x66\x5c\x2c\xc3\x79\xea\x9c\x6e\x28\x52\xe3\xf6\x3a\xbb\x42\x2b\xac\xee\x8a\xe0\xe2\x80\x08\x2e\x06\x44\xd0\xb8\xfe\x92\xb3\x12\xb8\xda\xb2\x23\x04\x81\x2a\xa1\x2c\xc1\x1d\xf4\xf4\xc6\x11\x2f\x9e\x01\x6a\x16\xde\x1a\xef\x15\x54\xb3\x71\xf4\x8b\x08\x9d\x22\x0f\x43\x6b\x69\xb4\x57\x06\xa6\x19\x5a\x0c\x2d\x8f\x65\xb7\xc9\xa4\x69\x97\x56\x9e\xbd\x67\x70\x61\x40\xfd\x3b\x85\x1a\x74\x55\xf7\x87\xac\xce\xf0\xdc\xeb\xf1\x79\x64\x25\x47\x9d\x9a\x4d\x17\xff\xec\x5c\x0b\x9d\xe4\xfa\x9c\x6b\x06\x2f\xd1\xe9\x29\x7a\xe9\x1d\x76\x4f\x4e\x10\x65\x05\xa1\x72\x8d\x36\xcc\x5c\x83\x89\xa6\xb1\x3e\x4d\x8c\x9f\x76\x3d\x8c\xa8\xe7\xba\xea\xa0\x5f\x08\x07\x76\xed\x63\x8d\x9e\xf7\x1b\xce\xaa\x33\x67\x2b\xe6\xde\xfb\x67\x70\x51\xaa\x73\x40\x14\x2f\x7b\x3f\xad\x98\xbb\xa4\xa2\x55\x80\xe3\x55\x7c\x25\x32\xbd\x42\xf9\x7d\xb1\x9f\x62\x01\xe1\x9e\xb9\x0e\xda\x0d\x1f\x5d\x61\xe8\x45\xf4\x7c\xd1\x2f\xa6\xe5\x24\x31\x59\x9d\x8b\xd2\x9e\x74\xcf\xb1\xe2\x10\x97\x65\x61\xf2\xea\x94\x51\x44\x49\xe1\x82\x4e\x8c\x22\xb2\x21\x75\x7e\x7a\xe2\x31\x45\x4f\xbe\xb0\x0b\xf4\x90\xb1\x7b\xb1\xe9\xb1\x39\xcd\x09\x77\xb5\x39\x2a\xfe\xfa\xb4\x67\xc6\x59\x20\xc9\xd1\x0f\x66\x66\x7f\x53\x3c\x13\x6f\xbe\x54\xb8\x58\xf8\x3b\xe5\xd2\x53\x7f\x89\x29\x49\x17\xf3\x14\x53\xe5\x89\x4a\x2d\xbc\x9c\xb3\x2d\xc2\xc8\x70\xf1\x95\xc8\x2b\x94\x91\x3c\x07\x0e\x54\x36\xd7\x2e\xf3\x20\x5f\x24\x98\x3e\x54\x9b\xd9\xe3\xb2\x4d\xed\x7b\xce\x36\x2f\x62\xc0\xf9\xfe\x70\xaa\xd5\xe9\xa5\xbf\x86\x9c\xf4\x8b\x01\x14\xb3\xc6\x86\x42\xdb\x1a\x8c\xeb\x75\xb8\x0b\x65\xeb\x1a\x27\x03\x28\xcd\xcd\x05\x19\xb9\xb9\xd0\x37\xae\xb1\x01\x9b\x9d\x28\x36\x81\x42\x72\xc4\x94\x8f\x34\x32\x79\xf6\xcc\x2e\x07\x4a\x8a\xd9\xb3\xfd\x6c\xf6\xcc\x26\x22\x0f\x27\x58\xf6\xb3\x67\x2c\xa9\x67\x3e\xa3\x92\x2d\x58\x25\x97\xb3\xd9\xb3\x9e\x3c\xb9\xeb\xa4\x98\x27\x20\xc2\x2d\x9b\x50\xbb\x72\xcc\xde\x72\x90\x87\xc9\x42\xa9\x49\x1b\xeb\xbf\x9b\xcd\x9e\x49\xcc\x37\x20\x57\x08\xb8\x4e\xf8\x04\xcf\x1c\x12\x2d\x61\xb6\x9c\x3d\x23\xb9\xee\xf0\x83\x13\xa0\x59\x10\x41\xbc\xf9\x5f\x54\xef\x4f\x92\x69\x9d\x6b\x95\x1f\x9a\x7f\x8d\x7e\x14\x73\x3d\xf1\x72\x69\x94\xf0\xc2\xdc\xe5\xbc\x30\x34\x1d\xba\xc3\xd1\x4b\xc3\xa6\x5c\xcd\x93\x09\x7d\x5c\x26\x99\x95\x73\x5a\x71\xb3\x0c\x69\xce\xf8\xd6\x9c\x0c\x84\x64\x1c\x32\x27\x79\xc7\x66\xf4\xb9\xd1\x4e\xb5\x58\x2a\xaa\x19\xaf\x8d\x4b\xff\xd0\x8e\xc9\xf9\xb2\x37\x1a\xb6\xab\xb3\x05\x5f\x2a\xc2\x21\x7b\x73\xa8\x63\x7d\x06\x9f\xb4\xc3\x78\x97\xd8\xef\x39\xa6\x82\x28\xae\x83\xb6\xe4\xcd\xb7\x92\x09\x70\xa9\x51\x0b\xfe\xc3\xd2\x14\xf6\x86\x2f\xc8\xbc\x6d\x98\x9b\x58\x64\xee\xb9\x1a\x6b\x22\x8e\xf4\x5a\x1e\x35\x2a\x7b\x36\x09\x0f\x87\x03\x8e\x67\xf9\x53\x68\x51\x2e\x36\x09\x44\xd5\xdc\xec\x85\x70\x63\x36\xce\x43\x79\x27\x4f\x8f\x19\xc6\xd1\xc2\x31\x04\xb4\xda\xce\x97\x77\xe7\xc7\x08\x66\x68\x53\xfe\x1e\x7c\x39\x9e\x24\xd9\xc2\x24\x15\xbd\x27\x5b\x78\xb4\x0a\xfa\x26\x81\x53\x5c\xcc\x97\x3e\xb4\x20\x42\xce\x97\x13\x58\x7c\x63\xd1\x3c\x1e\x36\x1d\x33\x84\x4a\xd8\x00\x9f\xa4\xb2\x33\x2a\x1f\x23\x2b\x79\xc1\xb0\x9c\xc4\xc8\x2f\x6a\xc4\x23\x61\xe5\x10\x67\x1c\xf2\x1e\xbe\xfa\x09\x4d\xdc\x9e\x30\x40\x32\xb4\x48\x85\x5b\xaf\x0f\x0e\xf9\x5b\xbd\x18\x5a\xc0\x77\xb8\x74\x7e\xcd\x9e\x6e\x44\x75\xe9\x3d\x9a\xe8\x0f\xfd\x1c\x8d\x8e\x4b\x51\x5d\x8e\xb3\x14\xc5\x96\x7f\x02\x19\x64\x30\x79\x55\x14\xec\x2b\x64\xaf\xaf\x18\x49\x41\xc4\x58\x93\x71\xca\x67\x54\xbf\x9c\x98\xe4\x9a\x57\x2e\x0b\xaa\xc6\xfd\xc5\x08\xed\x10\xf0\x69\xbe\x42\xf3\x4f\x0a\xdb\x7e\xa5\xa3\x97\x57\x95\x64\x1b\x9b\xd2\xc9\x0e\x58\xe6\x5d\xd4\xec\x88\xc0\x3c\x4a\x06\xe7\x58\x2a\x1f\x17\xb7\x96\x56\x3a\x85\xd9\x9e\xe3\x53\x0f\xf8\x1d\x08\x81\x37\x60\x5a\x55\xa3\x17\x23\x3c\x04\xdf\x1b\x89\x92\x77\xf8\xdb\x5b\xa0\x1b\x79\x85\x5e\xc6\x70\xfe\x0e\x7f\x23\xdb\x6a\x6b\x86\xc4\xf2\xaf\xa0\x6e\x1e\x05\xd1\x37\xc7\x0f\xc6\x12\xa1\x93\x58\x22\xf4\x96\x2c\x35\xf3\x3c\x3c\x4b\xf8\x9b\x7e\x4a\x8b\x5e\x26\x2f\x87\x02\xc6\xf8\x0d\xc1\x2a\x71\xc2\x7e\xd0\xe8\xf0\x4f\xfb\xd0\xf6\xfe\xf8\x2d\x04\x34\x0c\x47\x10\x1d\xbd\x1b\xaf\xd4\x49\x63\xd1\x22\x7b\x79\xdf\x7a\x1a\x33\xc4\xfb\xd4\x9a\xb1\xd3\xe9\x5a\xab\xa9\x78\x00\xad\x45\xd2\x7c\x1b\xa5\x39\xaa\xbf\x93\xd2\x9a\x47\x17\x09\xea\x7c\x1d\xa0\x1f\x65\xe8\xd7\xf9\x87\x3e\x11\x70\x92\x50\xe8\xb6\x35\xb7\x9a\x75\xef\x9d\x85\xe3\xdf\x00\x63\x83\xaf\x68\x3e\x8f\x07\xa2\xad\x08\x29\x04\x0c\x5f\x37\xac\x6a\xca\x9a\xc4\x9f\x39\x9c\x3b\x41\xf8\x0f\xfc\x5f\x57\x42\xb2\x6d\x9d\xcf\x77\x18\x12\x97\x46\xdc\xe2\xb2\x24\x74\xa3\xbf\x12\xd0\x77\xbd\x0e\xd3\x3b\xd3\x94\xd8\xff\xa3\xb9\xfb\x36\xa4\x43\x4e\x2b\xc9\x58\x63\xed\xd7\x85\xc5\x5b\x6b\x84\x0d\xc9\xd8\x66\x9e\x35\xb3\xc0\x79\xb2\x90\x37\x25\xf8\x89\x48\x9d\x4a\x6e\x67\x0f\xd6\x71\xa1\x59\xf3\xb2\x76\x08\x51\x24\x1e\x87\xc4\xde\x5e\x4f\x1e\xb7\xef\xb7\x97\x3e\xf3\xb1\xf7\x1c\x61\x84\xbf\x44\xff\xf4\xae\x3b\x6c\xfa\x2d\xec\xe2\xe7\x5d\x2d\x0e\xe8\x19\xdb\x8c\x86\xce\x28\x2f\x47\x18\xff\x94\xa3\x84\x94\xe4\x24\xd5\x66\xf2\x0b\xe3\x4d\x02\x27\xb8\x9a\x6a\xa0\x41\xf7\xe6\xee\xda\xe4\x04\xdd\xd7\x32\xfa\xeb\x93\xcf\x70\x53\x27\xaa\xc6\xae\x88\x87\x68\x58\x68\x44\xdd\x4b\xa6\x01\x72\x5c\xea\xf4\x7a\x85\xd8\x67\x6b\xcb\x83\x13\xbb\x5c\xd5\x3b\x5c\x7e\x50\x53\x7d\xfc\x49\x0d\xeb\x48\xfa\xda\x17\xf2\xc9\x09\xfa\x17\xa0\x94\x55\x45\xa6\x65\x9b\x13\x9a\x21\x22\x57\x48\x30\x54\x80\xfc\x9b\x40\xe9\x15\xa4\x9f\x11\xb3\x8f\x5c\xd9\x57\xe0\xc6\x76\x09\xcd\xe0\x1b\x64\x48\x94\x90\xa2\x2d\x2e\x7d\x9d\x1d\xa2\xf3\xad\x42\xf1\x1a\x0b\xe8\x21\xb8\x7e\x90\xdf\x2b\x10\x11\xe8\x30\xaf\x8a\xc2\xd3\x91\x08\x7b\x6e\x71\x19\xa9\xad\x81\xb9\x16\x4b\x85\xe3\x83\x51\xd6\xc7\x58\x5d\x45\xb0\x1f\x70\xed\x72\xa8\x15\x0c\x5a\xab\xb9\x12\x1a\x30\x4e\x7b\x95\x4a\x04\x22\x02\x61\x74\x0d\xfc\x06\xe1\xec\x1a\xd3\x14\x32\xa4\x04\xa0\xc9\x93\x57\x58\xa2\x1b\x56\xd9\x3b\x72\xad\x69\x0a\x90\xa1\xcb\x4a\x22\x42\x91\x60\x5b\x50\x88\xf4\xf0\x5a\x94\xa8\x12\xa0\x55\x1d\xf7\x1a\xc6\x66\x68\x43\x46\x42\x93\xd7\x1f\x94\xe4\x38\x85\x5d\x73\x31\x60\x1d\xae\xee\xb6\x6b\x6d\x42\x91\x39\xd8\x43\xb7\x7b\x87\x1f\x11\xf4\xb8\xbf\x5e\xdf\x33\xf2\x54\x37\x50\x69\xe7\xdd\x2e\x2e\xf5\x75\x5e\xa3\x5a\xa5\xc8\xc3\xd7\x0d\x63\x9f\x8d\x85\xf3\x9d\x4e\x31\xd4\x5d\x7b\xa3\x9f\x94\xe7\xf6\x9e\x92\x36\x23\x14\x09\xad\x47\x16\xc7\xfe\x27\x93\x6d\xa1\xcf\xd7\xa3\x9e\xcf\x7f\x24\x75\x3c\x78\x40\x57\xff\x7c\xf8\xba\x7b\xa0\x56\x07\xe9\x00\x57\xeb\x86\x36\x4c\x3e\xac\x07\x92\x22\xc7\xfb\xfd\xa4\xc4\x85\x8b\x8f\x9b\x61\xfb\x26\xd0\x5a\x75\x79\x6b\x65\x38\x1c\x75\x7e\xc3\xba\x37\x1b\x72\x90\xbb\x7a\x82\x5e\xb3\x57\xff\x82\x86\xf5\x80\xba\xe2\xa6\xe0\xa0\x35\xf7\x3b\x2d\x6e\x82\x19\x3c\xb8\xe1\xa0\xd5\x33\x0a\x7b\xf0\x88\xcf\x6b\xf7\xe1\x06\x7b\xab\xe7\x14\xec\xf5\x69\xa3\x8d\x5d\xc3\x35\x76\xfd\xd6\x39\xe8\x1d\x3c\x76\x4e\xe2\x27\x2c\x39\xa4\x6d\x6d\x3b\x68\xcd\x8a\xd7\x2b\x12\x6f\xf0\x54\xcf\x21\x6e\xc0\xeb\x9e\xd7\x74\xad\x27\x74\x51\x33\x79\x57\x5a\x75\x93\x05\x19\xda\x5d\x7b\x14\xba\x5f\x48\x21\x81\xeb\xcb\x4b\xaf\xd5\x41\x0d\xd2\xa0\x57\x1c\x5e\xc6\x81\x6c\xe8\x7f\x42\x60\x93\x0e\x6a\xf1\xfa\xbd\xa2\xf0\xda\xd7\x75\x5e\x8b\x81\x18\x7c\x4d\x6b\x14\x2e\xef\xa1\xaf\xd7\xea\xa0\x06\x67\xd0\x2b\x0a\xaf\x9f\x6f\x6b\x1a\x1b\xe0\xba\x9b\x93\x8b\x44\xda\x59\x26\x35\x6c\xdd\x49\x11\x45\x61\xf4\x72\x68\x0e\x65\x0d\x5c\x77\xf3\x6c\x91\x48\xbb\x64\x5a\xd8\xba\x93\x13\x89\xc1\xd8\xf6\x9c\x9e\xc3\x9c\xe4\x27\xb5\x63\x6a\x1b\x7a\x03\x34\xb4\xf9\x7d\xa2\x90\x9e\x73\xb2\xc5\xfc\xa6\x65\xe6\x0e\x6a\xd0\x06\xbd\xa2\xf0\xfe\x01\x38\x6b\x3b\xf4\x1a\xb6\xb6\xf9\xe9\xa6\x47\x24\xc6\xf0\xce\xdb\x60\x34\xb0\x75\x3b\xe3\x1d\x85\xf1\x02\x52\x0e\xc1\x67\x23\x06\x52\x7f\x76\x63\x5b\x23\x71\xb5\x97\xf5\x85\xb7\xac\x2f\x26\x2d\xeb\x0b\xf3\xd8\xc1\xc7\xa5\x21\x16\x57\xdd\x1a\x87\xab\xba\xb4\x2f\x3e\x1d\x32\x03\xaa\x3f\xf4\x6f\x3a\xc4\x59\x61\xe7\xa5\x82\xfa\xd7\x00\x0d\x89\x7e\x9f\x38\xa4\x2d\x12\x3d\xfa\x46\x89\xb3\x33\x0c\x67\x22\xc6\x63\xf0\xfe\x53\xe5\x77\x08\xc6\x07\x26\x7e\xdc\x51\xb9\x39\xc6\x27\x4f\x21\xf9\x53\x48\xfe\x14\x92\x3f\x85\xe4\x4f\x21\x39\x7a\x0a\xc9\x9f\x42\xf2\xa7\x90\xbc\xc6\xf8\x14\x92\x3f\x85\xe4\xa3\x21\xf9\xae\xfb\x81\xe5\x1d\x3e\x23\x33\xb7\x77\xf1\x25\x48\xfa\xab\x7e\xc5\x62\x30\x85\x32\x26\xcd\xf7\xe1\xe3\xd8\x07\x23\xf7\x56\x07\x6c\x0a\x5d\xff\xab\xd5\xc0\xa6\xd5\xcc\xb9\x1d\x7b\xb7\xaa\x0c\x36\x65\x8a\x07\xa9\x0f\xf6\x3d\x24\xf3\x40\xb5\xc2\x6e\x2f\xbb\xbb\x55\x0c\x1b\x5d\x5d\xdf\xa1\x6e\xd8\x34\x05\xfc\x7f\xad\x1e\x36\x4d\x4a\x8f\xbb\x42\x82\xf9\x7e\xf9\xbc\xc0\x24\xac\x75\x31\x69\x6f\x08\x0a\x89\x3d\xec\xa2\xb7\xb4\x3e\x2e\xb3\x4b\x1a\xaa\x0e\x1a\xe0\x6d\xca\x73\x4d\x93\xce\xed\x8b\x74\x8d\x87\x1f\x3d\x45\xb9\xba\xdf\xb8\x1f\xaa\xce\x95\x44\x45\x1d\x41\x91\xae\x9e\x75\x30\x6e\xff\xbd\xc5\xba\x24\xaf\x20\x7c\xda\x78\x3f\xf5\xba\xa2\x84\xe6\x57\xed\x8a\xe0\x3f\x69\x8a\x77\x8d\xf7\x5d\x2c\xa3\x3e\x94\xde\x05\x9b\xfb\xf8\x80\x5d\x6d\x14\x51\x65\xa2\xac\x1d\x74\x3e\xc3\x8e\xf8\xc2\xf8\x21\x6a\x46\xc5\x56\x81\x0a\xc8\x1e\xa9\x6d\x14\xcf\xca\x6d\x4a\x42\x91\x3c\xba\xbe\x51\xf7\x9b\x24\xbf\x14\xd4\xde\x17\xd7\x8b\x07\x2a\x31\x15\x5b\x34\xea\xbe\xe5\xfb\xbd\x2a\x48\x3d\xef\x2b\x21\x75\xe7\xa2\x50\x31\x1c\xde\xc9\x7f\xf7\x6d\xe3\xa5\x86\xb4\x28\xb3\x7a\xb9\x0d\x81\x7d\xdb\xaf\x86\xf4\xd5\x08\xb1\xdb\xef\x68\x11\xc2\x46\xd8\x93\x6e\x7f\x9a\x35\xd3\xae\x59\x61\x5f\x35\x87\x9b\xf5\x60\xf9\x81\xb1\xea\x03\x9d\xbd\x22\xdc\xd6\xff\x8f\x95\x2a\x6a\x74\xfc\x60\x05\x8b\x86\x04\xfa\x38\x2b\x16\xe1\x2c\xe3\x20\x9a\x50\xbf\xbf\x80\x51\x94\xd0\x1e\xae\x8c\xd1\xf3\xdd\x78\x1d\xa3\xc8\xe2\x17\xd1\xb1\x47\xac\x3f\xf0\x0b\x61\x44\x85\x21\xcd\xd2\x8d\x29\x87\x11\x15\xa7\x3c\x58\x51\x8c\x07\x13\x96\x2b\x90\x11\x33\xea\xe1\xcb\x64\x8c\x53\x11\x51\x2c\x23\xa6\x9a\x8c\x6f\xb2\xff\x13\x00\x00\xff\xff\x14\x77\x21\x3e\x44\x65\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 25924, mode: os.FileMode(420), modTime: time.Unix(1554956835, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x4d\x6b\xf3\x46\x10\xc7\xef\xfa\x14\x83\x11\x25\x29\xae\xda\xe4\xb9\x19\x72\x28\x71\x79\xc8\x21\x21\xb8\x2f\x17\xe3\xc3\xd6\x1a\xdb\xdb\xae\x57\xca\x7a\xe5\x60\x84\xbe\x7b\x59\xeb\xc5\x92\xbc\x2b\x29\x26\x86\x06\x66\x02\x01\x6b\x67\xe6\x3f\xb3\x9a\x5d\xff\x70\xcc\x96\xff\xb2\x35\x42\x9a\x42\xf0\x3b\xea\xe0\x31\x92\x2b\xbe\x4e\x14\xd3\x3c\x92\xc1\x0b\xdb\x22\x64\x99\xe7\xf1\x6d\x1c\x29\x0d\xa3\x75\x14\xb0\x38\x52\xa8\xa3\x80\x47\x3f\xa3\xc0\x2d\x4a\xcd\xc4\xc8\xf3\xf6\x4c\x81\x42\x71\x8c\xdb\x6d\x78\xbc\x9b\xe1\x9a\xef\xb4\x3a\x40\xe5\x15\xcc\x6c\xeb\x9e\xb7\x4a\xe4\x12\xb8\xe4\xfa\xe6\x16\x52\xcf\x03\x00\x47\xa6\x87\xbe\x5c\x69\x96\x87\xa7\x29\x28\x26\xd7\x08\x3e\x4a\xcd\xf5\xc1\xf4\x31\x06\xbf\xcc\x0a\x93\x87\xbc\xdb\x46\x12\xd3\x68\x1e\xfc\x13\xf0\x15\xec\x36\x51\x22\xc2\x3c\x33\xaa\xba\x27\xf8\x26\xb8\x9e\x1b\xfc\xe0\x35\xf9\x5b\xf0\xe5\x73\x14\x62\x91\xc6\xda\xc2\x3c\x4d\x1b\x71\x59\xf6\x14\xe6\x1f\x17\xf0\x00\x3f\xd8\xdb\x4b\x8f\xf9\x6a\xa5\xad\x35\xdc\x08\x94\xa7\x86\x82\x47\x85\x4c\xe3\x2d\xfc\x52\x36\x61\x2c\x7f\x38\x81\x2d\x8b\xe7\x3b\xad\xb8\x5c\x2f\x7e\xb4\x2b\x3c\xc9\x55\x04\x27\x99\x52\xaa\xd8\xc3\x98\x29\x94\x7a\x0c\x3e\x5b\x96\xbb\xd7\x56\xae\xcb\x3a\xf7\xf0\x49\x4a\xfb\x46\xe6\x02\x8d\x4d\x6c\x27\x1c\x99\x8d\x2b\xfc\xb2\x6c\x04\x13\xd7\x66\x99\x56\x9a\x9d\xd4\xea\x29\x3a\x08\xa6\x18\x2b\x5c\x32\x8d\x61\x5b\xc7\xd8\x69\x75\x02\x5a\x25\x38\xb6\xa6\x43\x69\x0d\x6e\x29\xbd\x32\xc5\xb6\xa8\x51\x4d\x71\x65\x46\xdc\xec\x9f\x3b\xaa\x7a\xb1\xee\xe8\x60\x86\x6f\x09\x57\x18\xb6\x5e\x76\x69\xe5\x72\x15\xba\x9b\xd4\x4e\xcd\x0b\xbe\x9f\x16\x0a\x57\xb3\x74\x73\x96\xc7\xd8\x7c\x61\xfe\xf2\xd1\x39\xdf\xd3\x7a\xed\xc5\xa4\xf0\x31\xf8\xe2\xee\x38\x20\x03\x3a\xb0\x95\xef\xda\x10\x71\xe7\xe8\xb7\x5e\x6b\x5f\xa5\xb6\x6a\xef\x8f\xd5\x8a\xbb\xae\xdc\xd6\x82\xee\x7b\x0a\xca\x8b\x1a\x52\x92\xad\xac\x6f\x79\x59\xf7\x7d\x0a\x50\x9e\x0d\xf1\xcd\x9c\x8b\xf3\x51\xb5\x09\xa1\x0c\x7b\xd2\x66\xdd\x89\x86\x25\xe9\xf7\xea\x90\xe9\x0f\xee\xf6\xb0\xa4\xbe\xbd\xe4\x20\x0f\x39\x92\xbf\x49\xad\x38\xee\x1c\x03\x51\x3f\x89\xf3\xc5\xe9\x2c\x5a\x32\xd9\x2f\xae\xda\x5c\xc4\x7d\x67\xab\x28\xc5\x39\x36\x1f\x94\x2f\xcd\x7c\x59\x4d\x8a\x4b\xb8\xa4\x82\x8e\x61\xfb\xe3\x10\x9f\xdc\xcd\x87\x6e\xf7\xf2\xce\x8c\x83\x29\xae\x58\x22\xf4\x5f\x4c\x24\x67\x5f\x01\x75\xab\xfb\x55\x42\xad\xe0\x1e\xc1\xfe\xe1\xe2\x2b\xc0\xb7\xaa\x83\x11\xca\x64\x3b\xea\x2a\xea\x57\x21\xa2\x77\x0c\x1f\x37\x11\x5f\xe2\xf1\x65\x7f\xf0\x42\xfa\x67\x0c\xfe\xfe\xf8\x86\xe3\xa0\x99\xac\xef\x1a\x38\xee\xc0\xbe\xff\x06\xe8\x98\xf7\xd2\xfa\xcf\xe4\x80\x7b\xdb\x8f\x83\xe7\x44\x68\x1e\x8b\xce\xd7\x58\xfa\xb8\xbe\x67\x07\x0a\x5b\x4a\xee\x88\xf8\x98\xb7\x63\xa9\x95\xc4\xe1\x65\x79\x5c\x0b\xb4\xac\x3a\x01\xef\xcf\x38\x3c\x07\xbc\xfc\xe1\x95\x01\x2f\x17\x21\xc0\x73\x28\x11\xe0\x11\xe0\x11\xe0\x5d\x20\x43\x80\x57\x55\xf1\x89\x80\x47\x7c\x07\xc4\x77\xc4\x77\xc3\xbd\xaf\xc8\x77\xaf\x4c\x2f\x37\x44\x67\x44\x67\x44\x67\xce\x6a\x89\xce\x6c\x46\x74\x46\x74\x56\x33\xa2\x33\xa2\x33\xa2\x33\x77\x92\xab\xff\xfa\x36\x45\x81\x67\xbf\xbe\xe5\x0f\xaf\xcc\x77\xb9\x08\xf1\x9d\x43\x89\xf8\x8e\xf8\x8e\xf8\xee\x02\x19\xe2\xbb\xaa\x0a\xe2\xbb\xb6\x11\xdf\x35\x8d\xf8\x6e\x78\xc4\x97\xe4\xbb\xef\xa8\x5b\xb7\xcb\x0c\xcd\x41\xdf\x5f\x1b\xef\xbe\xa3\x26\xb6\x73\x28\x11\xdb\x11\xdb\x11\xdb\x5d\x20\x43\x6c\x57\x55\x41\x6c\xd7\x36\x62\xbb\xa6\x11\xdb\x0d\x8f\xf8\xaa\x6c\xf7\xcc\xe4\xc1\xc1\x77\x66\xe9\xfa\x8c\x67\x54\x88\xf3\x1c\x4a\xc4\x79\xc4\x79\xc4\x79\x17\xc8\x10\xe7\x55\x55\x10\xe7\xb5\x8d\x38\xaf\x69\xc4\x79\xc3\x23\xfe\x37\x9c\x67\x48\x85\xe8\x0c\x88\xce\x88\xce\x9c\xd5\x12\x9d\xd9\x8c\xe8\x8c\xe8\xac\x66\x44\x67\x44\x67\x44\x67\xee\x24\x9f\xf1\x2b\x5c\xfe\xbf\xf5\x30\x4d\xcb\x4f\x99\xf7\x5f\x00\x00\x00\xff\xff\xb5\x07\x23\xe4\x6c\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18028, mode: os.FileMode(420), modTime: time.Unix(1554956824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


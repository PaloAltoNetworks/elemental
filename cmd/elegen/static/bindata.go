// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4d\x6b\xe4\x38\x13\xbe\xfb\x57\xd4\x1b\xc2\x8b\x0d\x1d\xe7\xb2\xec\x21\x4b\x0e\x61\x98\x81\x86\xcd\x10\x12\xd8\x4b\x93\x83\xc6\x5d\x76\xc4\xca\x92\x91\xe4\xcc\x34\x46\xff\x7d\x91\x2c\x7f\xc8\xed\xfe\x4a\x32\x3d\x30\xb9\xa4\xdb\xd2\x53\x1f\x4f\xa9\x1e\x95\xbb\x22\xd9\xbf\xa4\x40\x68\x1a\x48\x9f\x50\xa7\x9f\x04\xcf\x69\x51\x4b\xa2\xa9\xe0\xe9\x57\x52\x22\x18\x13\x45\xb4\xac\x84\xd4\x70\x51\x88\x94\x54\x42\xa2\x16\x29\x15\xd7\xc8\xb0\x44\xae\x09\xbb\x88\xa2\x57\x22\x21\x8e\x00\x00\xe8\x1a\xb9\xa6\x7a\x63\xc1\xea\x9e\x54\x70\x0b\x25\xa9\x56\x4a\x4b\xca\x8b\xe7\x1e\x93\x2e\xfd\x3e\x68\x1c\xcc\xfe\x35\xcd\x15\x48\xc2\x0b\x6c\x83\x79\xaa\x30\xa3\x39\xcd\x5c\x30\xca\x06\x32\x6c\x04\x9a\x83\x7a\x11\x35\x5b\x3f\x62\x41\x95\x46\x19\xec\x86\x14\x2e\xd3\x87\xfa\x1b\xa3\xd9\xbd\x58\x63\x88\xbd\x82\xcb\x21\x44\xb8\xb9\x85\xd4\xee\x61\xe9\xe7\xe1\xe1\xd5\x08\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x31\x8c\xcd\x18\xd3\x25\xb4\x08\x5c\x21\x5f\x4f\xbd\x8f\x1e\x99\x28\xe0\x2c\x23\x1a\x0b\x21\xe9\x6f\x48\x9c\xa8\x65\x86\x3f\x85\x3c\xc2\x28\x51\x3f\x91\xb1\xab\x33\x52\xd6\x34\x3e\xaa\x4b\xba\x80\x4b\x97\xd9\x08\x74\xd7\x66\x0a\x21\xc7\xdd\xbe\x8f\x23\x76\xcf\x41\xe5\x6b\xfc\x31\xc3\xf5\xea\x79\xf5\xdc\x7e\x3c\x3b\xc7\x96\x81\x49\x7f\xf6\x54\xd0\x1c\x18\x72\x48\x97\x6d\xd8\x60\xcc\x6c\xa0\x61\xb0\x8e\xfa\x4c\x94\x95\xa8\xf9\xda\xb1\x3f\xc0\x03\x48\x67\xa9\x19\x83\x7b\xa0\x31\x2e\x32\xfb\x7f\x31\x90\x09\x66\x6f\x21\xcc\xa2\x69\x00\x99\xb2\x29\x70\xca\x16\x6f\xac\x55\x12\x45\xd7\xd7\xe0\x48\xf9\x07\xa5\xb2\x04\x4a\xd4\xb5\xe4\x0a\xf4\x0b\x42\x56\x4b\x89\x5c\xc3\xab\x5f\x13\xb9\x7b\x5c\x3a\x12\xa3\xbc\xe6\x59\x80\x8d\x13\xc8\x99\x20\xfa\xcf\x3f\xa0\xf1\x76\xfa\x0b\xe3\xee\x61\xb9\xe4\xb9\x48\x3b\x37\x36\xc3\x28\xd2\x9b\xca\x9b\xbb\x27\x9c\x14\x28\x41\x69\x59\x67\xba\x31\x91\x33\x1f\xe7\xc1\x6a\x02\xdd\x29\xfd\x22\x45\x69\x2b\x18\x73\x5b\xc6\x96\xde\x04\x66\x3b\xd9\xa5\xea\xa3\x99\xde\x39\x2b\x0b\x7f\x8e\x8e\xf1\xf6\xa9\x95\xdc\x4d\xec\xb5\x77\x73\xba\xd7\x40\xb5\x57\x9d\x9d\xe3\xdc\xbb\x96\x8e\xdb\x06\x3e\xda\xf1\xa0\x78\x2b\xf7\xf1\x48\x57\x7c\x13\x13\x3e\xe4\x17\xd3\x19\x4f\x49\xe7\x8a\xe6\x40\xe1\x16\xf2\x74\xab\x34\x84\x6f\x92\xbf\xe0\x7f\x34\x5d\xaa\xcf\x65\xa5\x37\x71\x32\x6a\xa5\x8e\x9a\x40\x34\xe6\x4c\xf5\xbc\x9f\x6c\xce\x3f\x0b\xcd\x79\x1e\xf9\x26\x39\xc0\x45\x4e\xc9\x37\x86\x71\x57\xbb\x59\x0a\xa6\xcf\x5a\x4c\xc7\x8c\xfa\x4e\x75\xf6\xd2\x57\xdf\x47\xdb\x2b\xf7\x1e\xad\x7b\xb3\xce\x65\x44\xb5\x33\xda\xd6\xe5\x31\x08\xfc\xcd\x94\xb4\xaf\xf8\x7d\x07\x24\x4e\xa2\x19\xd9\x98\x7c\x5d\x63\x4e\x6a\xa6\xb7\xcc\x72\xca\x7c\x35\x76\x11\xfd\x54\x11\xa9\xf0\x2d\x74\x6f\x23\x7f\x21\xe9\x1e\xc8\x85\xee\x48\x5c\xaa\x47\x21\xf4\x7b\x8b\xd2\x26\xf9\x9e\xd2\x7c\x58\xa5\xfc\xc5\xb6\xbf\x3c\xc1\x95\x19\xe8\x5f\x3f\x0c\xac\x3a\x03\xee\x95\xe1\x90\x1c\xb5\x95\xb5\x5d\xfb\xe4\xcc\x06\xaa\xb4\xbf\xf7\x26\xbd\xef\x4f\xd7\x44\x0a\x5a\x9d\x4b\x8e\x53\x82\x03\xc9\xcf\x87\xa3\x3e\xec\x58\xee\x3c\x5d\xe7\xd5\x8a\xff\xcf\x01\x1e\x58\x2d\x09\x03\x63\xfe\xa6\xca\x5e\xdd\x67\x3c\x98\xdb\x42\x70\x74\x9d\x66\xa0\xbf\x5d\xb5\x76\x4b\xc8\x2f\xac\x59\x40\xf9\x49\xdd\xad\xf6\xb6\xb7\x3a\xb9\xbf\x1f\x91\xb5\xe5\x7b\xa1\x95\x8a\xc7\x5e\x83\x95\xb6\x4e\x72\x3a\x5d\xc9\xb9\x3d\xd6\xd7\x2b\x91\x50\xfa\x79\xf6\x36\x70\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x22\xb8\x1f\xc1\xba\x59\xbb\xfd\x16\x04\x3a\xde\x36\x4c\xdd\x9d\x77\x13\x39\x7f\x77\x8c\x79\x62\x28\xaa\xde\x2b\x61\x0c\xf0\x07\x55\xda\x2a\x36\xed\xd7\xbd\xb3\x00\x13\x5b\x75\x3f\x38\x6e\xce\x6d\x39\xff\x9b\xf4\xde\x16\x39\xed\x67\x03\xe3\xd9\x73\x53\xf4\x17\x21\xfb\xbc\xc7\x14\xda\xe2\xf9\x41\x1b\x72\x21\xdd\xf7\x82\xbe\xe2\x30\xf7\xf7\x8c\x4e\xed\x1c\xba\x4f\xc3\xdb\x74\x97\x2a\x1d\x41\xeb\x79\x65\x67\xfc\xbe\xfb\xae\x9f\x29\xf6\xbf\x02\x1f\x21\x52\xe1\x9b\x80\x95\x26\x13\xfd\x17\x00\x00\xff\xff\x11\x03\x2d\x1e\xcb\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5323, mode: os.FileMode(420), modTime: time.Unix(1554955843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x73\xdc\x36\x92\xcf\x9e\x5f\x81\x4c\x29\xde\x19\xef\x88\xf2\xf3\x64\xb5\x55\x5e\xc5\x49\xa9\xce\x4e\x54\x91\x2f\xfb\xe0\x72\xc5\x10\xd9\x1c\x21\xe6\x00\x0c\x00\x4a\xd6\x4d\xf1\xbf\x5f\xe1\x83\x24\xc0\x8f\x21\x38\x92\x7c\xba\x5a\xf9\x21\x19\xe1\xa3\xd1\x5f\x68\x74\x37\xc0\xce\x71\xfc\x05\x6f\x00\xed\x76\x28\xba\x04\x19\x9d\x31\x9a\x92\x4d\xc1\xb1\x24\x8c\x46\xbf\xe0\x2d\xa0\xb2\x9c\xcd\xc8\x36\x67\x5c\xa2\xc5\x0c\x21\x84\xe6\xe9\x56\xce\xcd\xaf\x0d\x8b\x70\xce\x38\x48\x16\x11\x76\x02\x19\x6c\x81\x4a\x9c\x55\xbd\x44\x5e\x17\x57\x51\xcc\xb6\x27\x5b\x22\xe3\x6b\xc8\xb2\xeb\x93\x98\xe5\x77\x42\xf2\x22\x96\x05\x07\x33\x70\xb7\x3b\x46\x1c\xd3\x0d\xa0\xe8\x32\x87\x38\xfa\x70\x97\xc3\x05\x67\x37\x24\x01\x2e\xd4\xfa\x1a\x9a\x42\x11\x95\x65\x33\x05\x68\x82\x8e\x6d\x6f\x1b\xc4\xef\x38\x23\x89\x26\x22\x10\x50\x59\xce\x96\xb3\xd9\x6e\x87\x8e\x32\x2c\x41\xc8\xdf\x81\x0b\xc2\x28\x5a\x9f\x5a\x88\xef\x74\xf3\x1b\x29\x39\xb9\x2a\x24\x88\x6a\x80\x62\xcf\x6e\x67\x17\x3f\x22\x2b\x74\x04\xb4\xd8\xaa\x79\x57\x05\xc9\x92\xb7\xb4\xd8\x0a\x03\xa2\x0d\xba\x2c\x67\x27\x27\x8a\xf3\x7a\x86\xa6\x1a\x95\x25\xe2\x90\x73\x10\x40\xa5\x40\xf2\x1a\x50\xce\x84\x20\x57\x19\xa0\x1b\x9c\x15\x20\x50\xca\x38\xc2\x15\x16\x9a\x18\x33\xbd\xc6\xcc\x0a\x6d\x1e\xcd\xa4\x82\xd8\x81\x2f\x24\x27\x74\x33\x9b\xc5\x8c\x8a\x4a\xa4\x0d\xfb\x8e\x28\xde\xc2\x0a\x1d\xe9\xd5\x14\x15\x66\xf2\xef\x66\x71\xcb\x42\x8b\x36\x35\x2b\xb5\x31\x36\x53\xd5\x00\xf3\xab\x2c\x23\xbb\x48\x33\xa5\x83\xd5\xa9\x21\xa5\x9a\x51\x09\xa7\x91\x4d\xf3\x7b\xa6\xb0\x25\x29\xa2\x4c\x5a\xd9\xbc\x67\x09\x64\xd1\x8f\x20\x71\x7c\x0d\x49\xc3\x58\xb7\xf7\x2d\x95\x44\xde\x59\xe6\x9c\x27\xa0\xff\x6c\xa3\x5e\xb7\xb3\x54\xff\xcd\xae\xfe\x84\x58\x46\xb3\x1b\xcc\xc3\xe0\x9d\xa2\x7a\x13\x44\x75\xe3\x4e\x13\xa3\x86\xae\x51\xad\x81\x0e\xa8\xdf\x40\x48\xd5\x5b\x96\xf3\x95\x1e\x7a\x86\x25\x6c\x18\xbf\x5b\xf7\x0d\x65\x05\x8f\x6b\x21\x9b\xf1\x17\x66\x17\xaf\xbb\xa0\x6d\x4f\x33\x92\x93\x1b\x2c\xd5\xc8\xf6\x40\xd3\x51\x96\xab\x59\x39\x91\xd7\xbb\x5d\xdf\x88\x73\xf1\x1b\x63\x72\x4c\x16\x17\x59\xc1\x71\x86\xca\xf2\x1d\x11\xd2\x95\x06\x46\x99\x6a\x61\x69\xc0\xdc\x5a\xd1\x43\xd6\xf8\xf8\xe9\xd5\xe0\x48\x45\xf0\xc9\x09\x72\xb4\x43\x16\x9c\x1a\xd5\x20\xbd\xaa\x21\x10\xa1\xfa\x4f\x85\x6d\x34\x4b\x0b\x1a\xa3\x05\x0b\xc4\x65\x59\xaf\xb4\x58\xf6\xeb\x8d\x96\x99\xc1\x62\x18\x66\xa3\x7e\x33\x83\xff\x19\xcb\x1b\xdc\x31\xca\x19\xa1\x12\x38\x92\x0c\x61\xa4\xcc\xaf\x46\x38\x0c\xc5\xe9\x24\xa9\xc5\x7b\xc8\x49\x09\xbe\xca\x40\x54\x34\x69\x34\xd6\xa7\x08\xe7\x39\xd0\x64\x11\x06\x7c\x57\xae\x10\x8b\xa2\x68\xe9\xb2\xe5\xa5\x02\x65\x09\x7f\xa3\xa1\x59\xa0\xc2\x13\x93\x64\xfa\x4f\x8c\x28\xdc\x9a\xd5\xad\x1c\x1f\x8b\x0f\x06\x97\x45\xb5\x7e\x14\x45\xfd\x2c\x19\x65\x15\x2b\xe4\x3d\x39\xa5\x8e\x8c\x3f\x56\x8a\x15\x0a\x90\xb1\xf3\x15\x5e\xc6\x36\x55\xeb\xd4\xcb\xb0\x42\xea\x09\xd1\x62\xdf\x6e\x59\x1a\xf8\xa5\xa7\xa7\xac\x90\x56\x1c\x7a\xbf\xc5\x8c\xde\x00\x97\xae\x34\xb4\x26\xd2\x21\xba\x0f\x63\xb7\xfa\xef\xb0\xda\x69\x4c\x7c\x7e\x6e\xf1\x17\x58\xec\x19\xbe\x42\x19\xd0\x05\x5b\x36\x2c\x24\x6a\xda\xeb\x1f\x10\x41\xff\xb0\x7d\x3f\x20\xf2\xf7\xbf\xfb\x2c\xfc\x48\x3e\xa1\x53\xc4\x3e\x92\x4f\x7b\x59\xf3\x23\xa4\xb8\xc8\xe4\xaf\x3c\x01\xee\x99\x99\xc4\x74\x20\xa6\x7a\x08\xdd\xa0\x94\x40\x96\x88\x4a\x5b\x63\x46\x25\xd0\x03\xf8\xe3\x2e\xb8\x58\xa2\x8f\x9f\x8c\x1b\xd0\xb2\x31\x55\x73\x43\x52\xed\xda\x98\x55\x7e\xb5\x68\x35\x7e\x50\xdb\xab\xa9\x3c\xb2\xfa\xa0\xf3\x8f\x2a\xff\x58\x37\x2c\x32\x2c\xf9\xc0\x2e\x73\xcc\x05\x78\xec\x08\x34\xea\x56\xc9\x20\x51\xaa\x65\xc0\x84\xee\xeb\x93\x13\xf4\x6b\xd7\x94\xa3\x5b\x92\x65\x88\xd1\xec\x4e\xb3\x1c\xdb\xae\x0d\xb9\x01\x6a\x45\x12\xa1\x5f\x98\xf9\x89\xb6\x80\xa9\x40\x4a\x81\x38\xd8\x26\x01\x07\x08\xa9\x62\xc1\xc2\x0a\x3d\x8a\x22\x23\x8f\x50\x23\xa1\x95\x7a\x0a\xfd\xf7\xd6\xf2\xa8\x85\xb3\x32\x3a\xd1\xe2\xd5\x08\x0e\xa8\x2c\xf7\x9b\x8e\x4a\x9b\x5c\x5d\xb8\xb1\x6d\xf7\xdd\x0a\x16\xf6\x62\x89\x08\x95\x7d\x87\x2c\xc8\xe8\xcd\xc5\xf9\x39\x4d\x59\xe4\xf8\xea\xc6\xcf\xb7\x8a\xeb\x84\x0d\x63\xbe\x66\xdb\xc7\xdc\xaa\x21\x8a\x08\xdc\x9e\x56\xf9\x81\xe3\x2e\x8d\xf5\xe3\x8b\x58\xe1\xdf\xda\xa2\xfb\xb7\xe6\x6e\xa7\xa3\x87\x0f\xec\x27\xad\xa6\x47\x8a\x5a\x94\xe2\x4c\x80\x0e\x8a\x3c\xc2\x14\x5f\xf4\xca\x15\x00\xc5\xaf\xcf\x7f\x0a\x46\xd7\xf3\xe3\x39\xda\x8a\x8d\x0a\x1f\xf5\xef\x2b\xdd\xf8\x87\xa6\xcd\xca\x69\xfe\xd9\xca\xf2\x17\xb8\x1d\xe1\x4f\xe5\xa9\xa8\xb3\x79\xf8\xbc\x51\x38\x69\x59\x8f\x00\x5c\x2c\xf7\x03\x69\x89\xfc\xe5\xbe\xb1\x8d\xd6\xbb\x8c\x58\xef\xd1\x93\xd5\xcc\xb1\x73\xc7\x6e\x5c\xa8\xf8\xae\x36\x97\x60\xdc\x89\x23\xd1\x62\x44\x6c\x4b\xcf\xa4\x5a\x7f\x5c\x5c\xb3\x22\x4b\xfe\xcd\x89\x84\x73\x4a\x24\xc1\x19\xf9\x1f\xe0\x4a\x9c\x3a\xd0\x54\x4b\x19\xc3\xdb\x52\x81\xa3\xe8\xa2\xb8\xca\x48\xac\xa8\x41\x2d\xb0\x47\x84\x12\x6d\x45\x6e\x7b\xc0\x82\xf4\x80\xb7\xe7\x92\xd4\x4e\xf7\xda\xfb\xda\x8e\x5d\xdb\x1f\xd6\x64\xf7\x5e\x48\xd0\xd7\xeb\xba\x0f\x45\x75\x95\xe1\xd8\xab\x2d\x0f\xe4\xa4\x23\xcf\x4b\x77\x77\xd9\x14\xc2\x52\xd2\x72\x17\x4c\xbc\xec\xd1\xf5\x37\x81\x0a\x4a\xfe\x2a\xaa\x90\x45\xcd\x99\x48\xab\x9a\xb2\x58\x22\xdf\x45\x30\x61\x9e\x99\xeb\x60\x53\x29\x67\x65\xc2\xa3\x7a\x81\x66\x50\x74\x56\x9d\xcf\xd5\x3e\xae\xa5\xac\x0c\x4f\x0b\xc4\xbc\x93\x99\x39\x84\x61\x97\x20\x1d\x2c\x05\xc8\xc7\x61\x98\xb7\xcc\x82\x24\xa8\x3a\xb0\xc3\xb8\x16\xc6\x2e\x74\x8a\x48\xf2\x10\x4c\xe9\x3b\x56\xaf\x31\x4f\x62\x96\x40\xd2\x3e\x60\xb5\x31\x0f\x66\xc4\xc1\xa7\x6a\xeb\x28\xfd\x57\x06\x37\xa0\xb3\x42\x64\x9b\x9b\xed\x66\xf0\xbc\x52\x1d\xd1\x59\x86\x85\x30\x3c\x3c\x57\x51\x6d\x8a\x63\x08\xc6\xb1\x86\xdd\x51\xee\x4a\xf5\x86\x4f\xe4\x79\xb8\x11\x1a\x74\xee\xab\x94\xc6\x80\x93\x1f\x44\x87\x26\xe4\x69\x7b\xf3\x13\xf5\xd2\xdd\x22\x55\xaf\x88\x39\xc9\x65\x93\x25\xfd\x91\xc5\x7e\x98\xc4\xe2\x42\x5b\x62\x3d\x46\xf9\xad\xcd\x7e\x0e\xd5\x86\x1f\x59\x3c\xa4\x07\x9f\x15\x51\x22\xfe\x17\x8e\xbf\x48\x12\x7f\x11\x7b\xb0\xfb\xec\xe5\xcb\x26\x92\x1e\x6a\x64\x34\x8e\x43\xc8\xa6\x5b\x19\x5d\xe6\x9c\x50\x99\x2e\xe6\xff\xf8\x5e\xac\xbf\x17\xff\x9c\xab\xf8\xbf\x39\xb8\xb4\xd8\x9a\x26\x63\xdf\x97\x1d\x51\x05\xfa\x91\xb5\xcc\x8c\x17\xf2\x33\x50\xe0\x58\xc2\xcf\x20\x25\x70\x14\x75\x9c\x8c\x93\x13\xf4\x33\x48\x45\x62\xc7\xb0\xb5\x63\xbd\xce\x00\x6b\x8b\x38\xc4\x40\x6e\xda\x76\xf9\x68\x0f\xcf\x06\x56\x5c\x2c\xfd\x75\xaa\xfc\xb3\xcf\x52\x63\x96\x3b\xa7\x56\x2b\x04\xe8\xb2\xe0\x72\x0f\x0b\x2e\x07\x58\x50\x1f\x4d\x39\x67\x39\x70\xe5\x52\x04\x30\x02\x15\x42\x69\x42\x13\x94\xea\x83\x2d\x9c\x3d\x03\xd8\x2c\x9c\x3d\xde\xcb\xa8\xfa\x60\xeb\x67\x11\x3a\x45\x0e\x84\xd6\xd6\x68\xef\x0c\x4c\x13\xb4\x18\xda\x1e\xcb\x6e\x97\x49\x29\x2f\x2d\x3f\x7b\xf3\x05\xc2\x34\xf5\x9f\x64\x6a\xd2\x75\x35\x1e\x92\x2a\x1b\xf5\xa0\xa1\xfe\xc8\x4e\x0e\x8a\xf0\xcd\x10\x37\xce\xaf\x98\x4e\x52\x1d\x93\x9b\xc9\x4b\x74\x7a\x8a\x5e\x3b\x81\xf9\xc9\x09\xa2\x2c\x23\x54\xae\xd1\x86\x99\x2b\x3b\x51\x77\x56\xd1\xce\x78\x64\xee\x40\x44\x3d\x57\x6b\x7b\xed\x42\x7b\x22\x49\xd1\x35\x16\x17\x1c\x52\xf2\x15\x2d\x4c\xe4\xa9\x35\xc9\x0b\x3c\x97\x68\xfe\x6a\xde\x9d\xde\x55\xaf\xf5\x80\xda\xad\x3a\x0b\x6b\xc7\x32\x08\xe2\xcb\x60\x90\x7e\x90\x32\xd0\x5c\xba\x79\x0d\x91\xab\x78\x2a\x88\xe7\xa5\x9b\xaa\x4d\x9b\x44\xad\x55\x94\x46\x26\xe2\x96\xc8\xf8\x1a\xa5\x0f\x25\xa6\x18\x0b\xf0\xcf\xf6\xb5\xd7\xff\x00\xa2\x34\xac\xe8\xb2\x59\xdb\x8b\x01\x5b\xdb\x87\x42\x9f\x50\xf7\xc2\x7e\xb9\xe8\x87\xbe\xec\x07\x3f\x5d\xc0\x76\x57\x89\xdc\xe6\x3a\x2e\xb0\x92\x0d\xce\xf3\xcc\xdc\xb2\x50\x46\x11\x25\x59\x13\x76\x60\x14\x90\x1b\xab\x6e\x2b\x26\x06\xaa\x7a\xf1\x85\x35\x81\xfb\xcc\x89\x13\x9d\x1c\x9b\x78\x5e\x34\x17\xdd\xa3\x8a\x53\xc5\xfb\x66\x9e\x6d\x24\x29\xfa\xce\xac\xec\xba\x1d\xe7\xe2\xed\x5f\x05\xce\x16\xae\x2f\xb2\x74\x14\x37\xc7\x94\xc4\x8b\x79\x8c\xa9\xb2\xf5\xb9\x66\x5e\xca\xd9\x16\x61\x64\xa8\xb8\x25\xf2\x1a\x25\x24\x4d\x81\x03\x95\xf5\x25\xdc\xdc\xcb\x1e\x0a\xa6\xd3\x2a\x66\xf5\xb0\xdc\x63\xfb\xd6\xbb\x4d\x8b\x18\x38\xde\xbe\x3b\xd5\xe2\xdc\xb5\x93\x1f\x87\xec\x8c\xc1\x13\x74\x60\xf1\xd9\xbe\xad\x30\x08\xec\x55\x10\x34\xd7\x81\xef\xb4\x0d\x06\x9d\x3a\xd6\x81\xbc\x75\xdf\x98\x00\xe4\xe6\x8a\x8d\x8c\x5c\xb1\xe9\xa7\x01\xa1\xde\xba\x5d\x28\x34\xbb\x47\x52\xc4\xd4\x01\x69\xc4\xf5\xe2\x85\xdd\xa9\x94\x64\xb3\x17\xe5\x6c\xf6\xc2\x66\xcc\xf7\x67\xff\xca\xd9\x0b\x16\x55\x2b\x9f\x53\xc9\x16\xac\x90\xcb\xd9\xec\x45\xcf\x85\x4e\x33\x48\x11\x4f\x40\xf8\xfe\x1a\xa1\x76\x53\x1b\xc7\x62\x2f\x0d\x93\x99\x52\xa1\x36\x36\x7e\x37\x9b\xbd\x90\x98\x6f\x40\xae\x10\x70\x9d\x8d\xf4\xde\xe3\x44\x9a\xc3\x6c\x39\x7b\x41\x52\x3d\xe0\xbb\x86\x81\x66\xaf\x7a\xc1\xc6\x7f\x53\xed\x9c\x48\xa6\x65\xae\x45\xbe\x6f\xfd\x35\xfa\x5e\xcc\xf5\xc2\xcb\xa5\x11\xc2\x2b\x73\xe9\xf8\xca\xe0\xb4\xef\xb2\x51\xef\x5a\x7b\x37\x60\xde\xf6\xe8\x5c\x0e\x49\x2c\x9f\xe3\x82\x1b\x0b\x41\x53\xc6\xb7\x26\x2c\x14\x92\x71\x48\x1a\xce\x37\x64\x06\x27\x35\xec\x52\x8b\xa5\xc2\x9a\xf1\x4a\xb9\xf4\x1f\xda\x66\x36\x66\xf6\xad\x6e\xdb\x55\xa9\xac\xbf\x0a\xc2\x21\x79\xbb\x6f\x60\x95\x20\x9a\x74\x6c\x3b\xaf\x2d\x3e\x70\x4c\x05\x51\x54\x7b\x7d\xd1\xdb\xaf\x39\x13\xd0\xe4\xf0\x6d\xf3\x6f\x16\x27\x7f\x34\xfc\x85\xcc\x23\x9c\xb9\x71\x44\xe7\x8e\x15\xb4\x2a\xd2\xa0\x5e\xf1\xa3\x02\x65\x03\x53\x3f\x33\x30\x60\x8b\x96\x3f\xf8\x1a\x55\xd9\x9f\x16\xab\x4e\x5b\x0d\x91\xbd\x48\x57\x5a\xd3\x18\x28\x27\xeb\xe0\xd0\xc2\x38\x5a\x34\xf4\x00\x2d\xb6\xf3\xe5\xfd\xc9\x31\x7c\x19\xf2\x24\xbe\x01\x59\x0d\x49\x92\x6c\x61\x92\x80\x3e\x90\x2d\x3c\x55\xf1\x7c\x95\xc0\x29\xce\xe6\x4b\xb7\x35\x23\x42\xce\x97\x13\x28\x7c\x6b\xc1\x3c\x19\x2a\x1b\x5a\x08\x95\xb0\x01\x3e\x49\x60\xe7\x54\x3e\x41\x4a\xd2\x8c\x61\x39\x89\x8e\x9f\xd4\x8c\xa7\x41\xc9\x3e\xc2\x38\xa4\x2e\x59\xa1\x5e\x5f\xc3\x81\xfe\x19\x51\x73\x70\x0c\x10\xe7\x9c\x22\xa7\xf6\x47\x87\x20\x37\xda\x08\xdc\x54\x1c\xd2\x77\x7a\x07\xb5\x1a\xdf\xe3\xbc\x31\x85\x36\xc8\x14\xc5\x95\xf3\x1e\xa8\x9f\x72\x8f\x64\x35\xe1\xb4\x8f\x90\x98\x51\x49\x68\x01\x2d\xac\x7d\x4e\x89\xe2\xea\x1b\xb2\x25\x7a\x93\x65\xec\x16\x92\xb3\x6b\x46\x62\x10\x21\xaa\x6b\xac\xff\x39\xd5\x4f\x89\x26\x9d\x01\xab\x26\xd5\xae\xe6\xfd\xc9\x08\xed\x20\xf0\x79\xbe\x42\xf3\xcf\x0a\x5a\xb9\xd2\x5e\xd2\x9b\x42\xb2\x8d\xcd\x1b\x26\x7b\xb6\xc1\x18\x3b\x82\x98\x80\x79\x10\x0b\x2e\xb0\x54\xd6\x34\x6c\xdf\xae\x74\x9a\xbc\xbd\xc6\xe7\x9e\xe6\xf7\x20\x04\xde\x80\xe9\x55\x9d\x8e\x2b\xf2\x08\x64\x6f\x24\x8a\xde\xe3\xaf\xef\x80\x6e\xe4\x35\x7a\x1d\x42\xf8\x7b\xfc\x95\x6c\x8b\xad\x99\x12\x4a\xbe\x6a\x6d\xd6\x51\x2d\x3a\xd4\x7b\x2c\x8a\x08\x9d\x44\x11\xa1\x07\x52\x54\xaf\xf3\xe8\x14\xe1\xaf\xfa\x5d\x39\x7a\x1d\xbd\x1e\x72\x4a\xc3\x4f\x1e\x2b\xc2\x09\x07\x4f\x2d\xc1\xdf\xed\xab\xf3\x07\x23\xd7\x06\xe7\xa1\x38\x07\x1f\xfa\x2b\x15\xcc\x2c\x5a\x58\x2f\x1f\x58\x4a\x63\x5a\xf8\x90\x32\x33\x4a\x3a\x5d\x66\x15\x16\x0f\x2f\xb3\x40\x94\x0f\x11\x59\x83\xf4\xb7\x11\x59\xfd\xe2\x28\x42\x9d\xcf\x64\xf4\x8b\x24\xfd\x99\xca\xbe\x6f\x65\x1a\x46\x28\x70\xdb\x8a\x58\x4d\xb9\xf3\xc8\xa8\x21\xdf\x34\x86\x7a\x78\xa1\x64\x1e\x0f\xb8\x74\x01\x4c\xf0\xe8\xbd\xa9\x29\xd5\x88\xd5\x29\x4f\x13\xfb\x37\x7c\x70\x3f\x74\x39\x2b\x84\x64\xdb\xea\xae\xa8\x81\x10\x35\x09\xd4\x2d\xce\x73\x42\x37\xfa\x6b\x19\xfd\xce\xa1\x81\xf4\xde\x74\x45\xf6\xff\x68\xde\x7c\x23\xd5\x41\xa7\x95\x5e\xad\xa0\xf6\x8b\xc2\xc2\xad\x04\xc2\x1e\x8c\xc5\x7d\x1c\xb7\xd7\x4e\xbe\xff\xbd\x44\xff\x74\x6e\x9f\x6c\x42\xcc\x1f\x62\x57\x70\x61\x40\xcf\xdc\x7a\x36\x74\x66\x39\x59\xbb\xf0\x97\x3f\x39\xc4\x24\x25\xb1\xe6\xec\x4f\x8c\xd7\x29\x15\xef\xa6\xb0\x6e\xf5\x86\xd7\x4f\x09\x4c\x96\xae\xf9\xd0\x4a\x7f\xb8\xf4\x05\xee\xaa\xd4\xd1\xd8\x8d\xfd\x10\x0e\x0b\x0d\xa8\x7b\xe7\x37\x80\x4e\x93\xcc\xbc\x59\x21\xf6\xc5\x8a\x7f\x70\xe1\x26\x7b\xf4\x1e\xe7\x1f\xd5\x52\x9f\x7e\x50\xd3\x3a\x9c\xbe\x71\x99\x7c\x72\x82\xfe\x0d\x28\x66\x45\x96\x68\xde\xa6\x84\x26\x88\xc8\x15\x12\x0c\x65\x20\xff\x26\x50\x7c\x0d\xf1\x17\xc4\xec\xfb\x68\x76\x0b\xdc\x5c\x1b\x11\x9a\xc0\x57\x48\x90\xc8\x21\x46\x5b\x9c\xbb\x32\xdb\x87\xe7\x3b\x05\xe2\x0c\x0b\xe8\x41\xb8\xfa\x96\xa3\x97\x21\xc2\x93\x61\x5a\x64\x99\x23\x23\xe1\x8f\xdc\xe2\x3c\x50\x5a\x03\x6b\x2d\x96\x0a\xc6\x47\x23\xac\x4f\xa1\xb2\x0a\x20\xdf\xa3\xba\xc9\x6a\x16\x30\xa8\xad\xe6\xfe\x68\x40\x39\xed\xcd\x36\x11\x88\x08\x84\xd1\x0d\xf0\x3b\x84\x93\x1b\x4c\x63\x48\x90\x62\x80\x46\x4f\x5e\x63\x89\xee\x58\x61\x9f\x2c\x68\x49\x53\x80\x04\x5d\x15\x12\x11\x8a\x04\xdb\x82\x02\xa4\xa7\x57\xac\x44\x85\x00\x2d\xea\xb0\xc7\x49\x36\x67\xea\x13\xe2\xab\x3c\xa9\x5e\x6d\xed\xea\x54\xbd\xbd\xd1\xd4\xc3\x76\x2d\xbb\x1d\x98\x15\xdd\x77\x89\xb9\xff\x4d\x47\x8f\xf9\xeb\xb5\x3d\x23\xaf\xbc\x3d\x91\x76\x9e\x7c\xe3\x5c\xdf\xfd\xd5\xa2\x55\x82\xdc\x7f\x01\x30\xf6\xc5\xa1\xbf\xde\xe9\x14\x45\xdd\xb5\xcf\xc6\x49\x99\x67\xe7\xe5\x71\x3d\x43\xa1\xd0\x7a\xf3\x72\xec\x7e\x6d\xdb\x66\xfa\x7c\x3d\x6a\xf9\x3a\x37\x6c\xbd\xb1\xac\xfa\xe7\xb6\xaf\xbb\xb1\xa7\x8a\x39\x3d\x58\xad\xeb\x5c\x3f\x4c\x5f\x0f\xa4\x0f\x8e\xcb\x72\x52\x88\xdf\x38\x94\xf5\xb4\xb2\xf6\x4d\x56\x5d\xda\x5a\xb9\x80\x06\x3b\xb7\x63\xdd\x9b\x37\xd8\x4b\x5d\xb5\xc0\xe0\xed\x9f\xd7\xb1\x1e\x10\x57\xd8\x12\x1c\xb4\xe4\x7e\xa5\xd9\x9d\xb7\x82\xd3\x6e\x28\x68\x8d\x0c\x82\xee\xbd\xa9\x74\xfa\xdd\x76\x03\xbd\x35\x72\x0a\xf4\xca\x3d\x6f\x43\xd7\xed\x1a\xba\x7e\x1a\xef\x8d\xf6\xde\xc6\x47\xe1\x0b\xe6\x1c\xe2\xb6\xb4\x9b\xd6\x8a\x14\x67\x54\x20\x5c\xef\xe5\x64\x03\xb8\x6e\x5e\xf7\x3c\x6e\x6c\xbd\x68\x0c\x5a\xc9\xb9\x64\xaa\xba\x6c\x93\xc1\xbd\xe9\x0f\x02\xf7\x13\xc9\x24\x70\x7d\x9d\xe8\xf4\x36\xad\x06\xa8\x37\x2a\x0c\x2e\xe3\x40\x36\xf4\xbf\xc0\xd3\xc9\xa6\xd5\xc2\x75\x47\x05\xc1\xb5\x8f\x1d\x9d\x1e\xd3\x62\xe0\xd5\xbd\x41\xb0\x9c\x77\xe1\x4e\x6f\xd3\x6a\x60\x7a\xa3\x82\xe0\xba\xb9\xa9\xba\xb3\x6e\x5c\x77\xf3\x57\x81\x40\x3b\xdb\xa4\x6a\x5b\x77\x12\x2a\x41\x10\x9d\x84\x53\x03\xb2\x6a\x5c\x77\x93\x52\x81\x40\xbb\x68\xda\xb6\x75\x27\x87\x10\x02\xb1\x6d\x39\x1d\x83\x39\xc9\x4e\x6a\xc3\xd4\x56\xf4\xba\xd1\xe0\xe6\x8e\x09\x02\x7a\xc1\xc9\x16\xf3\xbb\x96\x9a\x37\xad\x06\xac\x37\x2a\x08\xee\x6f\x80\x93\xb6\x41\xaf\xda\xd6\x36\x95\x5b\x8f\x08\x84\xe8\xdf\x42\x1b\x88\xa6\x6d\xdd\x4e\x0e\x07\x41\xbc\x84\x98\x83\xf7\x95\x91\x69\xa9\xbe\xd2\xb2\xbd\x81\xb0\xda\xdb\xfa\xd2\xd9\xd6\x97\x93\xb6\xf5\xa5\x79\x7e\xe0\xc2\xd2\x2d\x16\x56\xd5\x1b\x06\xab\xb8\xb2\x0f\x70\x1b\x60\xa6\xa9\xaa\x11\x51\x0f\x08\xd3\xc2\xce\xdb\x01\xf5\xaf\x6e\x34\x28\xba\x63\xc2\x80\xb6\x50\x74\xf0\x1b\x45\xce\xae\x30\x9c\x89\x18\xf7\xc1\xfb\xa3\xca\x6f\xe0\x8c\x0f\x2c\xfc\xb4\xbd\x72\x13\xc6\x47\xcf\x2e\xf9\xb3\x4b\xfe\xec\x92\x3f\xbb\xe4\xcf\x2e\x39\x7a\x76\xc9\x9f\x5d\xf2\x67\x97\xbc\x82\xf8\xec\x92\x3f\xbb\xe4\xa3\x2e\xf9\xae\xfb\xbd\xeb\x3d\xbe\xea\x33\xb7\x77\xe1\xd5\x6b\xfa\x0b\xc6\x85\x42\x30\x35\x56\x26\xad\xf7\xf1\xd3\xd8\xd7\x25\x0f\x56\x42\x6e\x0a\x5e\xff\xa7\x85\xe4\xa6\x95\x5b\x3a\x8c\xbc\x83\x8a\xca\x4d\x59\xe2\x51\x4a\xcb\x7d\x0b\xce\x3c\x52\x99\xb9\xc3\x79\x77\xbf\x62\x73\xa3\xbb\xeb\x1b\x94\x9c\x9b\x26\x80\xff\xd4\xc2\x73\xd3\xb8\xf4\xb4\x0b\x56\x98\xcf\xc9\x2f\x32\x4c\xfc\xd2\x28\x93\xce\x06\xaf\x06\xdd\xe3\x6e\x7a\x8b\xeb\xd3\x52\xbb\xa8\xc6\x6a\xaf\x02\x1e\x52\xd9\x6d\x1a\x77\x0e\xaf\xef\x36\xee\x7e\xf4\xd4\x73\xeb\x96\x1c\xd8\x57\xd8\x2d\x0a\xf2\x3a\xbc\xfa\x6e\x3d\xfb\x60\x5c\xff\x7b\xeb\xbc\x49\x5e\x80\xff\x18\xf0\xe1\x4b\xbd\x05\x31\xd0\x2d\xf8\x16\xc0\x8b\xa8\xae\xfb\x36\x3e\x76\xb1\x0c\xfa\xc2\x7a\xe7\x1d\xf4\xe3\x13\x76\x95\x82\x04\x55\x18\xb3\x3a\xd1\xf9\x7e\x3b\xe0\xd3\xe4\xc7\x28\x37\x16\x5a\x40\xcc\x43\x7b\xa4\x2c\x56\x38\x29\x87\x54\x13\xab\xbf\xc5\x19\x2f\x8d\xd5\xfd\x6c\xc8\xad\x22\x56\xba\xec\x7a\xf5\x48\xd5\xc9\x42\xeb\x8d\x3d\x34\x7f\xbf\x55\xf1\xb1\x97\x7d\xd5\xc7\xee\x5d\x4f\x2c\x84\xc2\x7b\xd9\xf2\xbe\x23\x3d\xd7\x2d\x2d\xcc\xac\x5c\x0e\x41\xb0\xef\x28\xd6\x2d\x7d\xe5\x5b\xec\x51\x3c\x5a\xbf\xb2\x66\xf6\xa4\x9b\xa0\xfe\xef\xd7\x9a\xcf\xd7\x1e\xa8\x6a\x41\x21\x87\x4a\x0d\x1c\x52\xb6\x60\x18\xda\xab\x03\xea\x16\x74\xce\x34\xdf\xfd\xf8\x7f\x56\xe1\xaa\xd6\xbf\x47\xab\x73\x35\xc4\xe3\xa7\x59\xe8\x0a\x27\x09\x07\x51\x87\x24\xfd\x75\xaf\x82\x98\xf6\x78\xd5\xaf\x5e\xee\xc6\xcb\x5f\x05\x96\xcd\x08\xf6\x8b\x42\x6d\x95\x5b\x42\x23\xc8\x45\xaa\xcd\x4a\x48\x21\x8d\x20\x1f\xea\xd1\xca\x69\x3c\x1a\xb3\x9a\xd2\x1a\x21\xb3\x1e\xbf\xc0\xc6\x38\x16\x01\x65\x36\x42\x4a\xe4\xb8\x2a\xfb\xbf\x01\x00\x00\xff\xff\x4d\x9d\x17\x0e\x27\x68\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 26663, mode: os.FileMode(420), modTime: time.Unix(1561417471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x4d\x6b\xf3\x46\x10\xc7\xef\xfa\x14\x83\x11\x25\x29\xae\xda\xe4\xb9\x19\x72\x28\x71\x79\xc8\x21\x21\xb8\x2f\x17\xe3\xc3\xd6\x1a\xdb\xdb\xae\x57\xca\x7a\xe5\x60\x84\xbe\x7b\x59\xeb\xc5\x92\xbc\x2b\x29\x26\x86\x06\x66\x02\x01\x6b\x67\xe6\x3f\xb3\x9a\x5d\xff\x70\xcc\x96\xff\xb2\x35\x42\x9a\x42\xf0\x3b\xea\xe0\x31\x92\x2b\xbe\x4e\x14\xd3\x3c\x92\xc1\x0b\xdb\x22\x64\x99\xe7\xf1\x6d\x1c\x29\x0d\xa3\x75\x14\xb0\x38\x52\xa8\xa3\x80\x47\x3f\xa3\xc0\x2d\x4a\xcd\xc4\xc8\xf3\xf6\x4c\x81\x42\x71\x8c\xdb\x6d\x78\xbc\x9b\xe1\x9a\xef\xb4\x3a\x40\xe5\x15\xcc\x6c\xeb\x9e\xb7\x4a\xe4\x12\xb8\xe4\xfa\xe6\x16\x52\xcf\x03\x00\x47\xa6\x87\xbe\x5c\x69\x96\x87\xa7\x29\x28\x26\xd7\x08\x3e\x4a\xcd\xf5\xc1\xf4\x31\x06\xbf\xcc\x0a\x93\x87\xbc\xdb\x46\x12\xd3\x68\x1e\xfc\x13\xf0\x15\xec\x36\x51\x22\xc2\x3c\x33\xaa\xba\x27\xf8\x26\xb8\x9e\x1b\xfc\xe0\x35\xf9\x5b\xf0\xe5\x73\x14\x62\x91\xc6\xda\xc2\x3c\x4d\x1b\x71\x59\xf6\x14\xe6\x1f\x17\xf0\x00\x3f\xd8\xdb\x4b\x8f\xf9\x6a\xa5\xad\x35\xdc\x08\x94\xa7\x86\x82\x47\x85\x4c\xe3\x2d\xfc\x52\x36\x61\x2c\x7f\x38\x81\x2d\x8b\xe7\x3b\xad\xb8\x5c\x2f\x7e\xb4\x2b\x3c\xc9\x55\x04\x27\x99\x52\xaa\xd8\xc3\x98\x29\x94\x7a\x0c\x3e\x5b\x96\xbb\xd7\x56\xae\xcb\x3a\xf7\xf0\x49\x4a\xfb\x46\xe6\x02\x8d\x4d\x6c\x27\x1c\x99\x8d\x2b\xfc\xb2\x6c\x04\x13\xd7\x66\x99\x56\x9a\x9d\xd4\xea\x29\x3a\x08\xa6\x18\x2b\x5c\x32\x8d\x61\x5b\xc7\xd8\x69\x75\x02\x5a\x25\x38\xb6\xa6\x43\x69\x0d\x6e\x29\xbd\x32\xc5\xb6\xa8\x51\x4d\x71\x65\x46\xdc\xec\x9f\x3b\xaa\x7a\xb1\xee\xe8\x60\x86\x6f\x09\x57\x18\xb6\x5e\x76\x69\xe5\x72\x15\xba\x9b\xd4\x4e\xcd\x0b\xbe\x9f\x16\x0a\x57\xb3\x74\x73\x96\xc7\xd8\x7c\x61\xfe\xf2\xd1\x39\xdf\xd3\x7a\xed\xc5\xa4\xf0\x31\xf8\xe2\xee\x38\x20\x03\x3a\xb0\x95\xef\xda\x10\x71\xe7\xe8\xb7\x5e\x6b\x5f\xa5\xb6\x6a\xef\x8f\xd5\x8a\xbb\xae\xdc\xd6\x82\xee\x7b\x0a\xca\x8b\x1a\x52\x92\xad\xac\x6f\x79\x59\xf7\x7d\x0a\x50\x9e\x0d\xf1\xcd\x9c\x8b\xf3\x51\xb5\x09\xa1\x0c\x7b\xd2\x66\xdd\x89\x86\x25\xe9\xf7\xea\x90\xe9\x0f\xee\xf6\xb0\xa4\xbe\xbd\xe4\x20\x0f\x39\x92\xbf\x49\xad\x38\xee\x1c\x03\x51\x3f\x89\xf3\xc5\xe9\x2c\x5a\x32\xd9\x2f\xae\xda\x5c\xc4\x7d\x67\xab\x28\xc5\x39\x36\x1f\x94\x2f\xcd\x7c\x59\x4d\x8a\x4b\xb8\xa4\x82\x8e\x61\xfb\xe3\x10\x9f\xdc\xcd\x87\x6e\xf7\xf2\xce\x8c\x83\x29\xae\x58\x22\xf4\x5f\x4c\x24\x67\x5f\x01\x75\xab\xfb\x55\x42\xad\xe0\x1e\xc1\xfe\xe1\xe2\x2b\xc0\xb7\xaa\x83\x11\xca\x64\x3b\xea\x2a\xea\x57\x21\xa2\x77\x0c\x1f\x37\x11\x5f\xe2\xf1\x65\x7f\xf0\x42\xfa\x67\x0c\xfe\xfe\xf8\x86\xe3\xa0\x99\xac\xef\x1a\x38\xee\xc0\xbe\xff\x06\xe8\x98\xf7\xd2\xfa\xcf\xe4\x80\x7b\xdb\x8f\x83\xe7\x44\x68\x1e\x8b\xce\xd7\x58\xfa\xb8\xbe\x67\x07\x0a\x5b\x4a\xee\x88\xf8\x98\xb7\x63\xa9\x95\xc4\xe1\x65\x79\x5c\x0b\xb4\xac\x3a\x01\xef\xcf\x38\x3c\x07\xbc\xfc\xe1\x95\x01\x2f\x17\x21\xc0\x73\x28\x11\xe0\x11\xe0\x11\xe0\x5d\x20\x43\x80\x57\x55\xf1\x89\x80\x47\x7c\x07\xc4\x77\xc4\x77\xc3\xbd\xaf\xc8\x77\xaf\x4c\x2f\x37\x44\x67\x44\x67\x44\x67\xce\x6a\x89\xce\x6c\x46\x74\x46\x74\x56\x33\xa2\x33\xa2\x33\xa2\x33\x77\x92\xab\xff\xfa\x36\x45\x81\x67\xbf\xbe\xe5\x0f\xaf\xcc\x77\xb9\x08\xf1\x9d\x43\x89\xf8\x8e\xf8\x8e\xf8\xee\x02\x19\xe2\xbb\xaa\x0a\xe2\xbb\xb6\x11\xdf\x35\x8d\xf8\x6e\x78\xc4\x97\xe4\xbb\xef\xa8\x5b\xb7\xcb\x0c\xcd\x41\xdf\x5f\x1b\xef\xbe\xa3\x26\xb6\x73\x28\x11\xdb\x11\xdb\x11\xdb\x5d\x20\x43\x6c\x57\x55\x41\x6c\xd7\x36\x62\xbb\xa6\x11\xdb\x0d\x8f\xf8\xaa\x6c\xf7\xcc\xe4\xc1\xc1\x77\x66\xe9\xfa\x8c\x67\x54\x88\xf3\x1c\x4a\xc4\x79\xc4\x79\xc4\x79\x17\xc8\x10\xe7\x55\x55\x10\xe7\xb5\x8d\x38\xaf\x69\xc4\x79\xc3\x23\xfe\x37\x9c\x67\x48\x85\xe8\x0c\x88\xce\x88\xce\x9c\xd5\x12\x9d\xd9\x8c\xe8\x8c\xe8\xac\x66\x44\x67\x44\x67\x44\x67\xee\x24\x9f\xf1\x2b\x5c\xfe\xbf\xf5\x30\x4d\xcb\x4f\x99\xf7\x5f\x00\x00\x00\xff\xff\xb5\x07\x23\xe4\x6c\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18028, mode: os.FileMode(420), modTime: time.Unix(1554956824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


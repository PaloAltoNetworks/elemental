// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1563338401, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4d\x6b\xe4\x38\x13\xbe\xfb\x57\xd4\x1b\xc2\x8b\x0d\x1d\xe7\xb2\xec\x21\x4b\x0e\x61\x98\x81\x86\xcd\x10\x12\xd8\x4b\x93\x83\xc6\x5d\x76\xc4\xca\x92\x91\xe4\xcc\x34\x46\xff\x7d\x91\x2c\x7f\xc8\xed\xfe\x4a\x32\x3d\x30\xb9\xa4\xdb\xd2\x53\x1f\x4f\xa9\x1e\x95\xbb\x22\xd9\xbf\xa4\x40\x68\x1a\x48\x9f\x50\xa7\x9f\x04\xcf\x69\x51\x4b\xa2\xa9\xe0\xe9\x57\x52\x22\x18\x13\x45\xb4\xac\x84\xd4\x70\x51\x88\x94\x54\x42\xa2\x16\x29\x15\xd7\xc8\xb0\x44\xae\x09\xbb\x88\xa2\x57\x22\x21\x8e\x00\x00\xe8\x1a\xb9\xa6\x7a\x63\xc1\xea\x9e\x54\x70\x0b\x25\xa9\x56\x4a\x4b\xca\x8b\xe7\x1e\x93\x2e\xfd\x3e\x68\x1c\xcc\xfe\x35\xcd\x15\x48\xc2\x0b\x6c\x83\x79\xaa\x30\xa3\x39\xcd\x5c\x30\xca\x06\x32\x6c\x04\x9a\x83\x7a\x11\x35\x5b\x3f\x62\x41\x95\x46\x19\xec\x86\x14\x2e\xd3\x87\xfa\x1b\xa3\xd9\xbd\x58\x63\x88\xbd\x82\xcb\x21\x44\xb8\xb9\x85\xd4\xee\x61\xe9\xe7\xe1\xe1\xd5\x08\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x31\x8c\xcd\x18\xd3\x25\xb4\x08\x5c\x21\x5f\x4f\xbd\x8f\x1e\x99\x28\xe0\x2c\x23\x1a\x0b\x21\xe9\x6f\x48\x9c\xa8\x65\x86\x3f\x85\x3c\xc2\x28\x51\x3f\x91\xb1\xab\x33\x52\xd6\x34\x3e\xaa\x4b\xba\x80\x4b\x97\xd9\x08\x74\xd7\x66\x0a\x21\xc7\xdd\xbe\x8f\x23\x76\xcf\x41\xe5\x6b\xfc\x31\xc3\xf5\xea\x79\xf5\xdc\x7e\x3c\x3b\xc7\x96\x81\x49\x7f\xf6\x54\xd0\x1c\x18\x72\x48\x97\x6d\xd8\x60\xcc\x6c\xa0\x61\xb0\x8e\xfa\x4c\x94\x95\xa8\xf9\xda\xb1\x3f\xc0\x03\x48\x67\xa9\x19\x83\x7b\xa0\x31\x2e\x32\xfb\x7f\x31\x90\x09\x66\x6f\x21\xcc\xa2\x69\x00\x99\xb2\x29\x70\xca\x16\x6f\xac\x55\x12\x45\xd7\xd7\xe0\x48\xf9\x07\xa5\xb2\x04\x4a\xd4\xb5\xe4\x0a\xf4\x0b\x42\x56\x4b\x89\x5c\xc3\xab\x5f\x13\xb9\x7b\x5c\x3a\x12\xa3\xbc\xe6\x59\x80\x8d\x13\xc8\x99\x20\xfa\xcf\x3f\xa0\xf1\x76\xfa\x0b\xe3\xee\x61\xb9\xe4\xb9\x48\x3b\x37\x36\xc3\x28\xd2\x9b\xca\x9b\xbb\x27\x9c\x14\x28\x41\x69\x59\x67\xba\x31\x91\x33\x1f\xe7\xc1\x6a\x02\xdd\x29\xfd\x22\x45\x69\x2b\x18\x73\x5b\xc6\x96\xde\x04\x66\x3b\xd9\xa5\xea\xa3\x99\xde\x39\x2b\x0b\x7f\x8e\x8e\xf1\xf6\xa9\x95\xdc\x4d\xec\xb5\x77\x73\xba\xd7\x40\xb5\x57\x9d\x9d\xe3\xdc\xbb\x96\x8e\xdb\x06\x3e\xda\xf1\xa0\x78\x2b\xf7\xf1\x48\x57\x7c\x13\x13\x3e\xe4\x17\xd3\x19\x4f\x49\xe7\x8a\xe6\x40\xe1\x16\xf2\x74\xab\x34\x84\x6f\x92\xbf\xe0\x7f\x34\x5d\xaa\xcf\x65\xa5\x37\x71\x32\x6a\xa5\x8e\x9a\x40\x34\xe6\x4c\xf5\xbc\x9f\x6c\xce\x3f\x0b\xcd\x79\x1e\xf9\x26\x39\xc0\x45\x4e\xc9\x37\x86\x71\x57\xbb\x59\x0a\xa6\xcf\x5a\x4c\xc7\x8c\xfa\x4e\x75\xf6\xd2\x57\xdf\x47\xdb\x2b\xf7\x1e\xad\x7b\xb3\xce\x65\x44\xb5\x33\xda\xd6\xe5\x31\x08\xfc\xcd\x94\xb4\xaf\xf8\x7d\x07\x24\x4e\xa2\x19\xd9\x98\x7c\x5d\x63\x4e\x6a\xa6\xb7\xcc\x72\xca\x7c\x35\x76\x11\xfd\x54\x11\xa9\xf0\x2d\x74\x6f\x23\x7f\x21\xe9\x1e\xc8\x85\xee\x48\x5c\xaa\x47\x21\xf4\x7b\x8b\xd2\x26\xf9\x9e\xd2\x7c\x58\xa5\xfc\xc5\xb6\xbf\x3c\xc1\x95\x19\xe8\x5f\x3f\x0c\xac\x3a\x03\xee\x95\xe1\x90\x1c\xb5\x95\xb5\x5d\xfb\xe4\xcc\x06\xaa\xb4\xbf\xf7\x26\xbd\xef\x4f\xd7\x44\x0a\x5a\x9d\x4b\x8e\x53\x82\x03\xc9\xcf\x87\xa3\x3e\xec\x58\xee\x3c\x5d\xe7\xd5\x8a\xff\xcf\x01\x1e\x58\x2d\x09\x03\x63\xfe\xa6\xca\x5e\xdd\x67\x3c\x98\xdb\x42\x70\x74\x9d\x66\xa0\xbf\x5d\xb5\x76\x4b\xc8\x2f\xac\x59\x40\xf9\x49\xdd\xad\xf6\xb6\xb7\x3a\xb9\xbf\x1f\x91\xb5\xe5\x7b\xa1\x95\x8a\xc7\x5e\x83\x95\xb6\x4e\x72\x3a\x5d\xc9\xb9\x3d\xd6\xd7\x2b\x91\x50\xfa\x79\xf6\x36\x70\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x22\xb8\x1f\xc1\xba\x59\xbb\xfd\x16\x04\x3a\xde\x36\x4c\xdd\x9d\x77\x13\x39\x7f\x77\x8c\x79\x62\x28\xaa\xde\x2b\x61\x0c\xf0\x07\x55\xda\x2a\x36\xed\xd7\xbd\xb3\x00\x13\x5b\x75\x3f\x38\x6e\xce\x6d\x39\xff\x9b\xf4\xde\x16\x39\xed\x67\x03\xe3\xd9\x73\x53\xf4\x17\x21\xfb\xbc\xc7\x14\xda\xe2\xf9\x41\x1b\x72\x21\xdd\xf7\x82\xbe\xe2\x30\xf7\xf7\x8c\x4e\xed\x1c\xba\x4f\xc3\xdb\x74\x97\x2a\x1d\x41\xeb\x79\x65\x67\xfc\xbe\xfb\xae\x9f\x29\xf6\xbf\x02\x1f\x21\x52\xe1\x9b\x80\x95\x26\x13\xfd\x17\x00\x00\xff\xff\x11\x03\x2d\x1e\xcb\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5323, mode: os.FileMode(420), modTime: time.Unix(1563576918, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5b\x73\xdb\x36\xd6\xcf\xd6\xaf\xc0\x6a\xdc\x94\xcc\x2a\x54\x9e\xd5\xd5\xce\x64\xd3\xb4\xe3\xf9\x92\xd6\x53\xe7\xeb\x3e\x64\x32\x6b\x98\x04\x65\x34\x14\xc0\x02\xa0\x13\x7f\x1a\xfe\xf7\x6f\x70\x23\x01\x5e\x24\x50\xbe\xac\x77\xd6\x79\x68\xe5\x03\xe0\xe0\xdc\x70\x70\x70\x00\x9e\x12\xa6\x5f\xe0\x06\x81\xdd\x0e\x24\x17\x48\x24\x6f\x29\xc9\xf1\xa6\x62\x50\x60\x4a\x92\x5f\xe0\x16\x81\xba\x9e\xcd\xf0\xb6\xa4\x4c\x80\x68\x06\x00\x00\xf3\x7c\x2b\xe6\xfa\xd7\x86\x26\xb0\xa4\x0c\x09\x9a\x60\xba\x44\x05\xda\x22\x22\x60\x61\x5b\xb1\xb8\xae\xae\x92\x94\x6e\x97\x5b\x2c\xd2\x6b\x54\x14\xd7\xcb\x94\x96\xb7\x5c\xb0\x2a\x15\x15\x43\xba\xe3\x6e\xf7\x0a\x30\x48\x36\x08\x24\x17\x25\x4a\x93\x8f\xb7\x25\x3a\x67\xf4\x06\x67\x88\x71\x39\xbf\xc2\x26\x49\x04\x75\xdd\x0e\x41\x24\x03\xaf\x4c\x6b\x17\xc5\xef\xb0\xc0\x99\x62\x22\x10\x51\x5d\xcf\xe2\xd9\x6c\xb7\x03\xa7\x05\x14\x88\x8b\xdf\x11\xe3\x98\x12\xb0\x5a\x1b\x8c\xef\x15\xf8\x8d\x10\x0c\x5f\x55\x02\x71\xdb\x41\x8a\x67\xb7\x33\x93\x9f\xe2\x05\x38\x45\xa4\xda\xca\x71\x57\x15\x2e\xb2\x77\xa4\xda\x72\x8d\xa2\x8b\xba\xae\x67\xcb\xa5\x94\xbc\x1a\xa1\xb8\x06\x75\x0d\x18\x2a\x19\xe2\x88\x08\x0e\xc4\x35\x02\x25\xe5\x1c\x5f\x15\x08\xdc\xc0\xa2\x42\x1c\xe4\x94\x01\x68\xa9\x50\xcc\xe8\xe1\x0d\x65\x46\x69\xf3\x64\x26\x24\xc6\x1e\x7e\x2e\x18\x26\x9b\xd9\x2c\xa5\x84\x5b\x95\xb6\xe2\x3b\x25\x70\x8b\x16\xe0\x54\xcd\x26\xb9\xd0\x83\x7f\xd7\x93\x1b\x11\x1a\xb2\x89\x9e\xa9\x4b\xb1\x1e\x2a\x3b\xe8\x5f\x75\x9d\x98\x49\xda\x21\x3d\xaa\xd6\x9a\x15\x3b\xc2\x2a\xa7\xd5\x4d\xfb\x7b\x26\xa9\xc5\x39\x20\x54\x18\xdd\x7c\xa0\x19\x2a\x92\x1f\x91\x80\xe9\x35\xca\x5a\xc1\xba\xad\xef\x88\xc0\xe2\xd6\x08\xe7\x2c\x43\xea\xcf\x2e\xe9\x0d\x9c\xe6\xea\x6f\x7a\xf5\x07\x4a\x45\x32\xbb\x81\x2c\x0c\xdf\x1a\x34\x8b\x20\x69\x80\x3b\xc5\x8c\xec\xba\x02\x8d\x05\x3a\xa8\x7e\x43\x5c\xc8\xd6\xba\x9e\x2f\x54\xd7\xb7\x50\xa0\x0d\x65\xb7\xab\xa1\xae\xb4\x62\x69\xa3\x64\xdd\xff\x5c\xaf\xe2\x55\x1f\xb5\x69\x69\x7b\x32\x7c\x03\x85\xec\xd9\xed\xa8\x1b\xea\x7a\x31\xab\x27\xca\x7a\xb7\x1b\xea\x71\xc6\x7f\xa3\x54\x1c\xd2\xc5\x79\x51\x31\x58\x80\xba\x7e\x8f\xb9\x70\xb5\x01\x41\x21\x21\x34\x0f\x18\xdb\x18\x7a\xc8\x1c\x9f\x3e\xbf\x1c\xed\x29\x19\x5e\x2e\x81\x63\x1d\xa2\x62\x44\x9b\x06\x1e\x34\x0d\x0e\x30\x51\x7f\x4a\x6a\x93\x59\x5e\x91\x14\x44\x34\x90\x96\xb8\x99\x29\x8a\x87\xed\x46\xe9\x4c\x53\x31\x8e\xb3\x35\xbf\x99\xa6\xff\x2d\x2d\x5b\xda\x21\x28\x29\x26\x02\x31\x20\x28\x80\x40\xba\x5f\x45\x70\x18\x89\xd3\x59\x92\x93\x0f\xb0\x93\x63\x78\x55\x20\x6e\x79\x52\x64\xac\xd6\x00\x96\x25\x22\x59\x14\x86\x7c\x57\x2f\x00\x4d\x92\x24\x76\xc5\xf2\x42\xa2\x32\x8c\xbf\x51\xd8\x0c\x52\xee\xa9\x49\x50\xf5\x27\x04\x04\x7d\xd5\xb3\x1b\x3d\x3e\x94\x1c\x34\x2d\x91\x9d\x3f\x49\x92\x61\x91\x1c\x14\x15\xad\xc4\x1d\x25\x25\xb7\x8c\x7f\x2d\xa4\x28\x24\x22\xed\xe7\x2d\x5d\xda\x37\xd9\x79\x9a\x69\x68\x25\xd4\x80\x24\xda\xb7\x5a\x62\x8d\xbf\xf6\xec\x94\x56\xc2\xa8\x43\xad\xb7\x94\x92\x1b\xc4\x84\xab\x0d\x65\x89\x64\x8c\xef\xe3\xc4\x2d\xff\x3b\x6e\x76\x8a\x12\x5f\x9e\x5b\xf8\x05\x45\x7b\xba\x2f\x40\x81\x48\x44\xe3\x56\x84\x58\x0e\x7b\xfd\x03\xc0\xe0\x6f\xa6\xed\x07\x80\xff\xfa\x57\x5f\x84\x9f\xf0\x67\xb0\x06\xf4\x13\xfe\xbc\x57\x34\x3f\xa2\x1c\x56\x85\xf8\x95\x65\x88\x79\x6e\x26\xd3\x0d\x80\xca\x16\x4c\x36\x20\xc7\xa8\xc8\xb8\xb5\xd6\x94\x12\x81\xc8\x11\xf2\x71\x27\x8c\x62\xf0\xe9\xb3\x0e\x03\x3a\x3e\xc6\x82\x5b\x96\x9a\xd0\x46\xcf\xf2\xab\x21\xab\x8d\x83\xba\x51\x8d\x8d\xc8\x9a\x8d\xce\xdf\xaa\xfc\x6d\x5d\x8b\x48\x8b\xe4\x23\xbd\x28\x21\xe3\xc8\x13\x47\xa0\x53\x37\x46\x86\x32\x69\x5a\x1a\x4d\xe8\xba\x5e\x2e\xc1\xaf\x7d\x57\x0e\xbe\xe2\xa2\x00\x94\x14\xb7\x4a\xe4\xd0\x34\x6d\xf0\x0d\x22\x46\x25\x09\xf8\x85\xea\x9f\x60\x8b\x20\xe1\x40\x1a\x10\x43\x06\xc4\xd1\x11\x4a\xb2\x22\x88\x8c\xd2\x93\x24\xd1\xfa\x08\x75\x12\xca\xa8\xa7\xf0\x7f\x67\x2b\x4f\x3a\x34\x4b\xa7\x93\x44\x2f\x0f\xd0\x00\xea\x7a\xbf\xeb\xb0\xd6\xe4\xda\xc2\x8d\x81\xdd\x75\x29\x18\xdc\x51\x0c\x30\x11\x43\x9b\x2c\x12\xc9\x9b\xf3\xb3\x33\x92\xd3\xc4\x89\xd5\x75\x9c\x6f\x0c\xd7\x39\x36\xa8\xdf\xa7\x98\xbf\x23\x29\xbb\x2d\x85\x54\x8b\x14\x61\x0e\x0b\x8e\x02\x42\xd1\x6e\x08\xba\x95\x5d\x24\x8f\xb0\x3b\xcc\x86\x89\x87\x23\x1e\x13\xe6\x57\xa9\x64\xaf\x7b\x34\xda\xbb\x74\x4d\xb8\x97\x18\x66\x54\x80\x37\xc0\xdf\x1a\x08\xa6\xe2\x74\x47\x0e\xbb\x9d\x3a\x97\x7c\xa4\x3f\xa9\x05\x70\x2a\xe5\x68\xa4\x90\x74\x45\x26\x25\xae\x88\xb6\x53\x4b\x4d\x5c\xfe\xc1\x29\x59\xcd\x5f\xcd\xc1\x96\x6f\xe4\xc1\x54\xfd\xbe\x52\xc0\x7f\x29\xb1\x18\x0b\x98\x5f\x1a\x2b\xf9\x05\x7d\x3d\x20\x5a\x1b\x03\xc9\x5d\x7f\x7c\x27\x93\x34\x29\x2b\x3a\x80\x30\x8a\xf7\x23\xe9\x18\xd3\x8b\x7d\x7d\xdb\xf5\xe4\x0a\x62\xb5\xc7\x02\x17\x33\xc7\x83\xbe\x72\x4f\x9c\x52\xee\xd2\xe6\x38\x65\xce\x09\x15\x44\x07\x14\x1e\x7b\xce\xda\xa8\x9e\x5f\xd3\xaa\xc8\xfe\xc9\xb0\x40\x67\x04\x0b\x0c\x0b\xfc\x7f\x88\x49\x75\xaa\x23\xac\x9c\x4a\xbb\xf4\x8e\xf1\x9c\x26\xe7\xd5\x55\x81\x53\xc9\x0d\xe8\xa0\x3d\xc5\x04\x2b\xff\xf4\x75\x00\x2d\x12\x1e\xf2\xee\x58\x9c\x9b\xe1\x1e\x7c\x08\xf6\xca\xdd\x55\xc2\x40\x66\x55\x87\x1c\x27\x07\x0f\x05\x63\xe7\x45\xeb\x92\xf6\x5a\xcb\x3d\x85\xff\xc0\x8b\xff\xbb\x8e\x29\x94\xb1\x1c\x77\x02\x11\x7d\x12\xf7\xf8\xfa\x9e\x83\x8a\xe0\x3f\x2b\x7b\x18\x92\x63\x26\xf2\x2a\x87\x44\x31\xf0\x83\x0f\x7d\x80\xd4\x63\x1d\x6a\xac\x71\xda\xcd\x21\x69\x26\x68\x3b\x25\x6f\xed\xce\x6f\xd7\x71\xa3\x65\xe9\x78\x3a\x28\xe6\xbd\x9c\xcf\x31\x02\xbb\x40\xc2\xa1\x92\x23\xf1\x30\x02\xf3\xa6\x89\x70\x06\x6c\x28\x10\x26\xb5\x30\x71\x81\x35\xc0\xd9\x7d\x08\x65\x68\xc3\xbe\x86\x2c\x4b\x69\x86\xb2\xee\xd6\xad\x9c\x79\xb0\x20\x8e\xde\xaf\x5d\x2e\x96\x4b\xf0\x8f\x02\xdd\x20\x95\x6f\xc2\xdb\x52\x2f\x37\x4d\xe7\x95\x6c\x48\xde\x16\x90\x73\x2d\xc3\x33\x79\x5e\xce\x61\x8a\x82\x69\x6c\x70\xf7\x8c\xdb\x9a\xde\xf8\x66\x3e\x0f\x77\x42\xa3\xc7\x06\x9b\x2c\x19\x39\x3e\x04\xf1\xa1\x18\x79\xda\xe7\x84\x89\x76\xe9\x2e\x11\xdb\xca\x53\x86\x4b\xd1\xe6\x5f\x7f\xa4\xa9\x7f\x00\xa3\x69\xa5\x3c\xb1\xea\x23\x23\xe2\x76\x3d\x87\x5a\xc3\x8f\x34\x1d\xb3\x83\x4b\xc9\x14\x4f\xff\x01\xd3\x2f\x02\xa7\x5f\xf8\x1e\xea\x2e\xbd\x4c\xdc\x44\xd6\x43\x9d\x8c\xa2\x71\x8c\xd8\x7c\x2b\x92\x8b\x92\x61\x22\xf2\x68\xfe\xb7\xef\xf8\xea\x3b\xfe\xf7\xf9\x02\xd0\xa4\xdd\xb8\x94\xda\x5a\x90\xf6\xef\x71\x4f\x55\x81\x11\x68\xa3\x33\x1d\x85\xfc\x8c\x08\x62\x50\xa0\x9f\x91\x10\x88\x81\xa4\x17\x64\x2c\x97\xe0\x67\x24\x24\x8b\x3d\xc7\xd6\x3d\x45\xf6\x3a\x18\x5f\xc4\x50\x8a\xf0\x4d\xd7\x2f\x9f\xee\x91\xd9\xc8\x8c\x51\xec\xcf\x63\x33\xdb\xbe\x48\xb5\x5b\xee\xed\x5a\x9d\xc3\x45\x5f\x04\x17\x7b\x44\x70\x31\x22\x82\x66\x6b\x2a\x19\x2d\x11\x93\x21\x45\x80\x20\x40\xc5\xa5\x25\xb4\xc7\x5d\xb5\xb1\x85\x8b\x67\x84\x9a\xc8\x59\xe3\x83\x82\x6a\x36\xb6\x61\x11\x81\x35\x70\x30\x74\x96\x46\x77\x65\x40\x92\x81\x68\x6c\x79\xc4\xfd\x26\x9d\xac\x8e\x8d\x3c\x07\x33\x11\x5c\x83\x86\x77\x32\x39\xe8\xda\xf6\x47\x99\xcd\x73\xdd\x6b\x12\xe1\xc0\x4a\x0e\xca\x1d\xe8\x2e\x6e\x06\xc1\x0a\x1d\xe7\xea\xb4\xaf\x07\xc7\x60\xbd\x06\xaf\x9d\x23\xff\x72\x09\x08\x2d\x30\x11\x2b\xb0\xa1\xfa\x32\x90\x37\x8d\xf6\xb4\x73\xf8\xcc\xef\x60\x04\x03\x97\x76\x7b\xfd\x42\x77\x20\xce\xc1\x35\xe4\xe7\x0c\xe5\xf8\x1b\x88\xf4\xc9\x53\x59\x92\x77\xf0\x8c\xc1\xfc\xe5\xbc\x3f\xbc\x6f\x5e\xab\x11\xb3\x5b\xf4\x26\x46\xe6\x5c\x7f\x18\xe3\x8b\x60\x94\xfe\x21\x65\x04\x5c\xbb\x19\x13\x5e\xca\xf3\x54\x90\xcc\x6b\x37\x09\x9c\xb7\x29\x60\x63\x28\xad\x4e\xf8\x57\x2c\xd2\x6b\x90\xdf\x97\x9a\x52\xc8\x91\xbf\xb7\xaf\xbc\xf6\x7b\x50\xa5\x16\x45\x5f\xcc\xca\x5f\x8c\xf8\xda\x21\x12\x86\x94\xba\x17\xf7\x8b\x68\x18\x7b\x3c\x8c\x7e\xba\x82\xcd\xaa\xe2\xa5\x13\x1d\x76\xb2\x30\xda\x5b\x19\x88\xa3\x15\xa4\x21\xda\x6f\xc1\x16\xbe\x85\xec\x0b\xca\x00\xe4\xe0\x12\xd9\xfc\xce\x65\xcf\xdd\xdb\xa6\xf0\x93\x4a\x8f\x82\xa8\xc1\xe1\xf8\x9e\xa6\xd9\xe6\x96\x58\x0c\x22\xc4\x18\x40\x8c\x51\x16\x1b\xa3\x9b\x12\x2a\x38\xf6\xe3\x25\xac\xac\x43\x1b\xd0\x50\x5d\x2f\xe4\x7c\x60\xed\xb0\x69\x86\x9a\x50\x68\x70\x50\xfc\x83\x1a\xf5\x97\x35\x20\xb8\x70\x96\x87\x13\x27\xbd\x93\x5c\xe4\xd1\xbc\x22\x4a\x37\x82\xda\x19\x9c\xdb\xfa\xef\x07\x50\x7f\xbf\x02\xdf\xf1\xb9\xa2\xca\xa6\x44\x07\xcc\xa3\x9b\x3c\x33\x13\x13\x5c\x34\x17\x0a\x5d\x2b\xc8\xd0\x5d\xac\xc0\x8c\x9e\x60\x05\x3d\x0a\xfe\xb3\xac\xc0\x90\x7f\xef\x56\x60\x04\xf9\x08\x56\xe0\xb6\x4a\x93\x38\x87\xd2\x9b\xc3\xb2\x2c\xf4\x8d\x2f\xa1\xaa\x6b\x9b\xa8\x80\x20\x20\x4f\x6f\x6f\x4e\x27\xa6\xb6\xd4\xe4\x91\x09\x9a\xf6\x05\x20\x4e\x3e\xe3\x95\xce\x00\xf2\xf6\xd1\x4d\xa8\xe2\xcd\xb8\x56\xe9\x7f\xd1\x33\xbb\x07\x95\x33\xfe\xee\xcf\x0a\x16\x91\x7b\x7a\x89\x1d\x2d\x96\x90\xe0\x34\x9a\xa7\x90\xc8\xe8\xb0\x54\xc2\xcb\x19\xdd\x02\x08\x34\x17\x5f\xb1\xb8\x06\x19\xce\x73\xc4\x10\x11\xcd\x83\x80\xb9\x77\x93\xc1\xa9\x4a\xc4\xea\xd9\xc3\xee\x41\xba\x2f\x70\xba\xbc\xf0\x91\x80\xb8\x67\x87\x77\xd8\x4b\x47\x63\xee\x91\xc9\x67\xfb\x36\xcf\x51\x64\x2f\x83\xb0\xb9\x47\xfe\x1e\x6c\x34\x4d\xa5\x7c\x20\x2a\x3b\x6f\x1f\x32\x84\x4a\x7d\xdd\x8f\x0f\x5c\xf7\xab\x67\x4a\xc1\xae\x4e\x4f\x14\x7a\x1f\x20\xbd\x90\x0c\xa9\xb5\xba\x4e\x4e\x9c\x75\x7b\x52\xcf\x66\x27\xe6\xf6\x6e\xff\x7d\x41\x3d\x3b\xa1\x89\x9d\xf9\x8c\x08\x1a\xd1\x4a\xc4\xb3\xd9\xc9\xc0\xe5\x72\xdb\x49\x32\x8f\x11\xf7\x4f\x78\x98\x98\x45\xad\x7d\xfd\x5e\x1e\x26\x0b\xc5\x92\x76\xa8\xff\x6e\x36\x3b\x11\x90\x6d\x90\xd0\xce\x78\xb5\x06\xde\xdb\xc0\x44\x49\x98\xc6\xb3\x13\x9c\xfb\x7e\xf7\xe4\x44\xaf\x55\x2f\x3d\xf1\xbf\x8e\xc7\x45\xa5\x52\xf9\xbe\xf9\x1d\x7f\x1b\x6b\x25\xbc\xd4\x0f\x20\x5e\x6a\x9a\xf6\x3d\x7c\x50\xab\xd6\xdc\x53\xea\x77\x86\x2a\xfb\x8b\x33\x23\xe7\xb4\x62\xda\x43\x90\x9c\xb2\xad\x4e\x24\x71\x41\x19\xca\x5a\xc9\xb7\x6c\x06\xa7\x41\xcd\x54\x51\xac\xf7\x4a\x6b\x5c\xea\x0f\xe5\x33\x5b\x37\xab\xb6\x21\xbe\xb3\xc9\xef\x3f\x2b\xcc\x50\xf6\x6e\x5f\xc7\x23\xb7\xdd\x26\x0d\xf5\x91\x41\xc2\xb1\xe4\xda\x6b\x4b\xde\x7d\x2b\x29\x47\xed\x96\x65\xc0\xbf\x19\x9a\xfc\xde\xe8\x4f\xa0\x1f\x04\xce\xf5\xd1\x75\xee\x78\x41\x63\x22\x2d\xe9\x56\x1e\x16\x95\xd9\xb9\xfd\x5c\xe2\x88\x2f\x1a\xdf\xc9\x3d\x51\xad\x3b\x80\xc4\x3c\xea\xe9\xed\xd2\xde\xae\xac\x79\xa1\x0c\x44\x2d\x3f\x88\x54\xdb\x79\x7c\x77\x76\xf8\x68\x78\x22\xb9\x7a\x04\xb6\x5a\x96\x04\xde\xa2\x49\x0a\xfa\x88\xb7\xe8\xa9\xaa\xe7\x9b\x40\x8c\xc0\x62\x1e\xbb\xd0\x02\x73\x31\x8f\x27\x70\xf8\xce\xa0\x79\x32\x5c\xb6\xbc\x60\x22\xd0\x06\xb1\x49\x0a\x3b\x23\xe2\x09\x72\x92\x17\x14\x8a\x49\x7c\xfc\x24\x47\x3c\x0d\x4e\xf6\x31\xc6\x50\x3e\xdf\x7f\x6e\x19\x8c\xfa\x5a\x09\x0c\x8f\x48\xda\x8d\x63\x84\x39\x67\x17\x59\x9b\x1f\x3d\x86\x80\x93\x9f\x08\x5c\x54\x0c\xe5\xef\xd5\x0a\xea\x00\x3f\xc0\xb2\x75\x85\x26\x2d\xc5\xab\x2b\xe7\x6d\xe2\x30\xe7\x1e\xcb\x72\xc0\x7a\x88\x91\x94\x12\x81\x49\x85\x3a\x54\xfb\x92\xe2\xd5\xd5\x23\x8a\x25\x79\x53\x14\xf4\x2b\xca\xde\x5e\x53\x9c\x22\x1e\x62\xba\xda\xfb\x9f\x11\xf5\xac\x71\xd2\x1e\xb0\x68\x2f\xe7\xe4\xb8\x3f\x28\x26\x3d\x02\x2e\xe7\x0b\x30\xbf\x94\xd8\xea\x85\x8a\x92\xde\x54\x82\x6e\xcc\x4d\x43\xb6\x67\x19\x1c\x12\x47\x90\x10\x20\x0b\x12\xc1\x39\x14\xd2\x9b\x86\xad\xdb\x85\xba\x58\xeb\xce\x71\x39\x00\xfe\x80\x38\x87\x1b\xa4\x5b\x65\xa3\x13\x8a\x3c\x00\xdb\x1b\x01\x92\x0f\xf0\xdb\x7b\x44\x36\xe2\x1a\xbc\x0e\x61\xfc\x03\xfc\x86\xb7\xd5\x56\x0f\x09\x65\x5f\x42\xdb\x79\x24\x44\x1d\xf5\x1e\x8a\x23\x4c\x26\x71\x84\xc9\x91\x1c\x35\xf3\x3c\x38\x47\xf0\x9b\xfa\xc6\x05\xbc\x4e\x5e\x8f\x05\xa5\xe1\x3b\x8f\x51\xe1\x84\x8d\xa7\xd1\xe0\xef\xe6\x0b\x98\x7b\x63\xd7\x1c\xce\x43\x69\x0e\xde\xf4\x17\xf2\x30\x13\x75\xa8\x8e\xef\x59\x4b\x87\xac\xf0\x3e\x75\xa6\x8d\x74\xba\xce\x2c\x15\xf7\xaf\xb3\x40\x92\x8f\x51\x59\x4b\xf4\xe3\xa8\xac\x79\xa3\x98\x80\xde\x27\x7b\xea\x0d\xa3\xfa\x64\x6e\xdf\x77\x7b\xad\x20\x24\xba\xad\x65\x56\x71\xee\x3c\x4b\x6c\xd9\xd7\xc0\xd0\x08\x2f\x94\xcd\x57\x23\x21\x5d\x80\x10\x3c\x7e\x6f\x1a\x4e\x15\x61\x4d\xca\x53\x9f\xfd\x5b\x39\xb8\x1f\xdd\xbd\xad\xb8\xa0\x5b\x7b\xbb\xdc\x62\x48\xda\x04\xea\x16\x96\x25\x26\x1b\xf5\xe5\x9e\x7a\x19\xd5\x62\xfa\xa0\x9b\x12\xf3\x7f\x30\x6f\xbf\xd7\xec\x91\xd3\x49\xaf\x5a\xac\xc3\xaa\x30\x78\xad\x42\xe8\xbd\x89\x78\x48\xe2\xe6\xa2\xda\x8f\xbf\x63\xf0\x77\xe7\xbe\xda\x24\xc4\xfc\x2e\x66\x06\x17\x07\x1a\x18\xdb\x8c\x46\xbd\x51\xfd\x6c\x7b\xc0\x5b\xc1\x12\xa5\x38\xc7\xa9\x92\xec\x4f\x94\x35\x29\x15\xef\x6d\x41\x03\xf5\xba\x37\x8f\x8f\x74\x96\xae\xbd\x40\x50\x1f\x51\x7e\x41\xb7\x36\x75\x74\xe8\x8d\xcf\x18\x0d\x91\x42\xd4\x7f\x25\x30\x42\x4e\x9b\xcc\xbc\x59\x00\xfa\xc5\xa8\x7f\x74\xe2\x36\x7b\xf4\x01\x96\x9f\xe4\x54\x9f\x7f\x90\xc3\x7a\x92\xbe\x71\x85\xbc\x5c\x82\x7f\x22\x90\xd2\xaa\xc8\x94\x6c\x73\x4c\x32\x80\xc5\x02\x70\x0a\x0a\x24\xbe\xe7\x20\xbd\x46\xe9\x17\x40\xcd\xb7\x1a\xf4\x2b\x62\xfa\xa2\x19\x93\x0c\x7d\x43\x19\xe0\x25\x4a\xc1\x16\x96\xae\xce\xf6\xd1\xf9\x5e\xa2\x78\x0b\x39\x1a\x20\xd8\x7e\x57\x36\x28\x10\xee\xe9\x30\xaf\x8a\xc2\xd1\x11\xf7\x7b\x6e\x61\x19\xa8\xad\x91\xb9\xa2\x58\xe2\xf8\xa4\x95\xf5\x39\x54\x57\x01\xec\x7b\x5c\xb7\x59\xcd\x0a\x8d\x5a\xab\xbe\x3f\x1a\x31\x4e\xf3\x16\x06\x73\x80\x39\x80\xe0\x06\xb1\x5b\x00\xb3\x1b\x48\x52\x94\x01\x29\x00\x45\x9e\xb8\x86\x02\xdc\xd2\xca\x3c\x72\x52\x9a\x26\x08\x65\xe0\xaa\x12\x00\x13\xc0\xe9\x16\x49\x44\x6a\xb8\x15\x25\xa8\x38\x52\xaa\x0e\x7b\xce\x68\x72\xa6\x3e\x23\xbe\xc9\x63\xfb\xce\x73\xd7\xa4\xea\xcd\x1b\x08\xd5\x6d\xd7\xf1\xdb\x81\x59\xd1\x7d\xcf\x1e\xf6\xbf\x02\x1b\x70\x7f\x63\xf7\xbd\xc1\x2a\xed\x7d\x5f\x02\x4b\x75\xf7\xd7\xa8\x56\x2a\x72\xff\x05\xc0\xa1\xaf\x9f\xfd\xf9\xd6\x53\x0c\x75\xd7\xdd\x1b\x27\x65\x9e\x9d\x6f\x15\x9a\x11\x92\x84\xce\x2b\xb9\x57\xee\x97\xff\x5d\xa1\xcf\x57\x07\x3d\x5f\xef\x86\x6d\xf0\x2c\x2b\xff\xb9\xf0\x55\xff\xec\x29\xcf\x9c\x1e\xae\xce\x03\x10\xff\x98\xbe\x1a\x49\x1f\xbc\xaa\xeb\x49\x47\xfc\x36\xa0\x6c\x86\xd5\x4d\x6c\xb2\xe8\xf3\xd6\xc9\x05\xb4\xd4\xb9\x0d\xab\xc1\xbc\xc1\x5e\xee\xec\x04\xa3\xb7\x7f\x5e\xc3\x6a\x44\x5d\x61\x53\x30\xa4\x34\xf7\x2b\x29\x6e\xbd\x19\x1c\xb8\xe6\xa0\xd3\x33\x08\xbb\xf7\x0a\xdb\x69\x77\xe1\x1a\x7b\xa7\xe7\x14\xec\x36\x3c\xef\x62\x57\x70\x85\x5d\x7d\x4c\xe3\xf5\xf6\xbe\xa6\x49\xc2\x27\x2c\x19\x4a\xbb\xda\x6e\xa1\x96\x15\xa7\x57\x20\x5e\xef\xad\x75\x8b\xb8\x01\xaf\x06\x9e\x43\x77\xde\x40\x07\xcd\xd4\x7b\xf6\x21\xff\x35\x40\x4d\xbf\xdb\x27\x0c\x69\x7b\x73\xd5\xa0\xd4\x20\x83\xb0\x69\x0f\x42\xf7\x13\x2e\x04\x62\xf6\xdd\x96\x6d\x6d\xa1\x1a\xa9\xd7\x2b\x0c\x2f\x65\x08\x6f\xc8\xff\x20\xcf\xd0\x5b\xa8\xc1\xeb\xf6\x0a\xc2\x6b\xde\x5c\x3b\x2d\x1a\xa2\xf1\x35\xad\x41\xb8\x9c\xcf\x53\x9c\xd6\x16\xaa\x71\x7a\xbd\x82\xf0\xba\x09\xaf\xa6\xb1\x01\xae\xfa\x49\xb1\x40\xa4\xbd\xb5\x67\x61\xab\x5e\x96\x26\x08\xa3\x93\xc5\x6a\x51\x5a\xe0\xaa\x9f\xe9\x0a\x44\xda\x27\xd3\xc0\x56\xbd\xc4\x44\x08\xc6\xae\x3b\x76\xbc\xf0\x24\xe7\xab\xbc\x5d\xd7\xd0\x1b\xa0\xa6\xcd\xed\x13\x84\xf4\x9c\xe1\x2d\x64\xb7\x1d\x33\x6f\xa1\x1a\xad\xd7\x2b\x08\xef\x6f\x08\x66\xdd\x5d\xc2\xc2\x56\x26\x3f\xdc\xf4\x08\xc4\xe8\x5f\x6d\x6b\x8c\x1a\xb6\xea\x66\x9c\x83\x30\x5e\xa0\x94\x21\xef\x63\x47\x0d\xb1\x1f\x8b\x9a\xd6\x40\x5c\xdd\x65\x7d\xe1\x2c\xeb\x8b\x49\xcb\xfa\x42\xbf\x69\x70\x71\x29\x88\xc1\x65\x5b\xc3\x70\x55\x57\xe6\x3b\x80\x16\x99\x06\xd9\x22\x38\x4d\x87\x30\x2b\xec\x3d\x48\x90\xff\x1a\xa0\x26\xd1\xed\x13\x86\xb4\x43\xa2\x43\xdf\x41\xe2\xcc\x0c\xe3\xe9\x8d\xc3\x81\xfd\xf0\x51\xf5\x11\x22\xfc\x91\x89\x9f\x76\xa8\xaf\x73\x03\xc9\x73\x9c\xff\x1c\xe7\x3f\xc7\xf9\xcf\x71\xfe\x73\x9c\xff\x1c\xe7\x83\xe7\x38\xff\x39\xce\x7f\x8e\xf3\x9f\xe3\xfc\x43\x48\x1f\x36\xce\xdf\xf5\xbf\xe5\xbf\xc3\x17\xcb\xfa\x9e\x31\xbc\xe6\xd7\x70\x99\xcd\x50\x0c\xba\xf4\xd4\xa4\xf9\x3e\x7d\x3e\xf4\x1d\xcc\xbd\x15\xde\x9c\x42\xd7\xbf\xb5\xfc\xe6\xb4\x22\x75\xc7\xb1\x77\x54\x29\xce\x29\x53\x3c\x48\x41\xce\xc7\x90\xcc\x03\x15\xe7\x3c\x5e\x76\x77\x2b\xd1\x79\x70\x75\x3d\x42\xa1\xce\x69\x0a\xf8\x6f\x2d\xd7\x39\x4d\x4a\x4f\xbb\x18\x8f\x2e\x95\x71\x5e\x40\xec\x97\x7d\x9a\xb4\x37\x78\x95\x3b\x1f\x76\xd1\x1b\x5a\x9f\x96\xd9\x25\x0d\x55\x7b\x0d\xf0\x98\x7a\x98\xd3\xa4\x73\x7c\x55\xcc\xc3\xe1\xc7\x40\x99\xcb\x7e\x39\x95\x7d\xf5\x2e\x93\xa0\xa8\xc3\x2b\x7b\x39\xb0\x0e\x0e\xdb\xff\x60\x0d\x4b\x55\xea\x32\x19\x08\xe4\xd4\xdf\xf7\x53\xc6\x32\x48\x80\x6e\x31\xcb\x00\x59\x24\x4d\x4d\xcb\xc3\x7d\xa3\x38\xe8\x5b\xf0\x9d\xb7\xd1\x1f\x1e\xb0\xb3\x06\x12\x54\x3d\xd1\xd8\x44\xef\x4b\xf3\x80\x8f\xa8\x1f\xa2\x94\x62\x68\x71\x44\x8f\xec\x03\x25\xff\xc2\x59\x39\xa6\x52\x62\xf3\xd5\xd0\xe1\xb2\x7f\x23\x35\x0c\x4c\x85\xc4\xda\x15\xd7\xcb\x07\xaa\xbc\x18\x5a\x4b\xf1\xbe\xe5\xfb\x58\x85\x15\x5f\x0c\x55\x56\xbc\x73\xad\xc4\x10\x0e\xef\xe4\xcb\x87\xb6\xf4\x52\x41\x3a\x94\x19\xbd\x1c\x43\xe0\xd0\x56\xac\x20\x43\xa5\xa9\xcc\x56\x7c\xb0\x36\x6f\x23\xec\x49\xd7\x4b\x63\x15\x42\xec\xf3\xe5\x7b\xaa\xaf\x50\x89\xb1\xa2\x08\xc7\x14\x58\x18\xc7\xf6\xf2\x88\x0a\x0b\xbd\x3d\xcd\x0f\x3f\x76\xff\xe6\xe2\x43\x21\x06\xf5\x54\x4b\x10\x0d\xa9\xe3\x70\x0d\xa2\xe1\x51\xcf\x45\x88\x42\xad\xe1\xa9\x96\x22\x0a\xb5\x06\xbf\x16\xd1\x3d\x5a\xc3\xa3\x15\x23\xda\xfd\xe7\x56\xff\x6c\x0c\xec\xc1\x6a\x80\x8e\xf9\xe8\xa7\x59\x04\x14\x66\x19\x43\xbc\x49\x69\x0c\xd7\x04\x0d\x12\xda\xc3\x55\x06\x7d\xb1\x3b\x5c\x1a\x34\xb0\x40\x50\xf0\xb9\x2a\xdc\x19\xb5\xc5\x82\x82\x8e\x58\x4d\x58\x12\x52\x32\x28\xe8\x0c\xf6\x60\x85\x83\x1e\x4c\x58\x6d\x11\xa1\x90\x51\x0f\x5f\x4a\xe8\x30\x15\x01\x05\x85\x42\x8a\x81\xb9\x26\xfb\xff\x01\x00\x00\xff\xff\xcb\x4f\x5a\xeb\x9d\x71\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 29085, mode: os.FileMode(420), modTime: time.Unix(1566595325, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x4d\x6b\xf3\x46\x10\xc7\xef\xfa\x14\x83\x11\x25\x29\xae\xda\xe4\xb9\x19\x72\x28\x71\x79\xc8\x21\x21\xb8\x2f\x17\xe3\xc3\xd6\x1a\xdb\xdb\xae\x57\xca\x7a\xe5\x60\x84\xbe\x7b\x59\xeb\xc5\x92\xbc\x2b\x29\x26\x86\x06\x66\x02\x01\x6b\x67\xe6\x3f\xb3\x9a\x5d\xff\x70\xcc\x96\xff\xb2\x35\x42\x9a\x42\xf0\x3b\xea\xe0\x31\x92\x2b\xbe\x4e\x14\xd3\x3c\x92\xc1\x0b\xdb\x22\x64\x99\xe7\xf1\x6d\x1c\x29\x0d\xa3\x75\x14\xb0\x38\x52\xa8\xa3\x80\x47\x3f\xa3\xc0\x2d\x4a\xcd\xc4\xc8\xf3\xf6\x4c\x81\x42\x71\x8c\xdb\x6d\x78\xbc\x9b\xe1\x9a\xef\xb4\x3a\x40\xe5\x15\xcc\x6c\xeb\x9e\xb7\x4a\xe4\x12\xb8\xe4\xfa\xe6\x16\x52\xcf\x03\x00\x47\xa6\x87\xbe\x5c\x69\x96\x87\xa7\x29\x28\x26\xd7\x08\x3e\x4a\xcd\xf5\xc1\xf4\x31\x06\xbf\xcc\x0a\x93\x87\xbc\xdb\x46\x12\xd3\x68\x1e\xfc\x13\xf0\x15\xec\x36\x51\x22\xc2\x3c\x33\xaa\xba\x27\xf8\x26\xb8\x9e\x1b\xfc\xe0\x35\xf9\x5b\xf0\xe5\x73\x14\x62\x91\xc6\xda\xc2\x3c\x4d\x1b\x71\x59\xf6\x14\xe6\x1f\x17\xf0\x00\x3f\xd8\xdb\x4b\x8f\xf9\x6a\xa5\xad\x35\xdc\x08\x94\xa7\x86\x82\x47\x85\x4c\xe3\x2d\xfc\x52\x36\x61\x2c\x7f\x38\x81\x2d\x8b\xe7\x3b\xad\xb8\x5c\x2f\x7e\xb4\x2b\x3c\xc9\x55\x04\x27\x99\x52\xaa\xd8\xc3\x98\x29\x94\x7a\x0c\x3e\x5b\x96\xbb\xd7\x56\xae\xcb\x3a\xf7\xf0\x49\x4a\xfb\x46\xe6\x02\x8d\x4d\x6c\x27\x1c\x99\x8d\x2b\xfc\xb2\x6c\x04\x13\xd7\x66\x99\x56\x9a\x9d\xd4\xea\x29\x3a\x08\xa6\x18\x2b\x5c\x32\x8d\x61\x5b\xc7\xd8\x69\x75\x02\x5a\x25\x38\xb6\xa6\x43\x69\x0d\x6e\x29\xbd\x32\xc5\xb6\xa8\x51\x4d\x71\x65\x46\xdc\xec\x9f\x3b\xaa\x7a\xb1\xee\xe8\x60\x86\x6f\x09\x57\x18\xb6\x5e\x76\x69\xe5\x72\x15\xba\x9b\xd4\x4e\xcd\x0b\xbe\x9f\x16\x0a\x57\xb3\x74\x73\x96\xc7\xd8\x7c\x61\xfe\xf2\xd1\x39\xdf\xd3\x7a\xed\xc5\xa4\xf0\x31\xf8\xe2\xee\x38\x20\x03\x3a\xb0\x95\xef\xda\x10\x71\xe7\xe8\xb7\x5e\x6b\x5f\xa5\xb6\x6a\xef\x8f\xd5\x8a\xbb\xae\xdc\xd6\x82\xee\x7b\x0a\xca\x8b\x1a\x52\x92\xad\xac\x6f\x79\x59\xf7\x7d\x0a\x50\x9e\x0d\xf1\xcd\x9c\x8b\xf3\x51\xb5\x09\xa1\x0c\x7b\xd2\x66\xdd\x89\x86\x25\xe9\xf7\xea\x90\xe9\x0f\xee\xf6\xb0\xa4\xbe\xbd\xe4\x20\x0f\x39\x92\xbf\x49\xad\x38\xee\x1c\x03\x51\x3f\x89\xf3\xc5\xe9\x2c\x5a\x32\xd9\x2f\xae\xda\x5c\xc4\x7d\x67\xab\x28\xc5\x39\x36\x1f\x94\x2f\xcd\x7c\x59\x4d\x8a\x4b\xb8\xa4\x82\x8e\x61\xfb\xe3\x10\x9f\xdc\xcd\x87\x6e\xf7\xf2\xce\x8c\x83\x29\xae\x58\x22\xf4\x5f\x4c\x24\x67\x5f\x01\x75\xab\xfb\x55\x42\xad\xe0\x1e\xc1\xfe\xe1\xe2\x2b\xc0\xb7\xaa\x83\x11\xca\x64\x3b\xea\x2a\xea\x57\x21\xa2\x77\x0c\x1f\x37\x11\x5f\xe2\xf1\x65\x7f\xf0\x42\xfa\x67\x0c\xfe\xfe\xf8\x86\xe3\xa0\x99\xac\xef\x1a\x38\xee\xc0\xbe\xff\x06\xe8\x98\xf7\xd2\xfa\xcf\xe4\x80\x7b\xdb\x8f\x83\xe7\x44\x68\x1e\x8b\xce\xd7\x58\xfa\xb8\xbe\x67\x07\x0a\x5b\x4a\xee\x88\xf8\x98\xb7\x63\xa9\x95\xc4\xe1\x65\x79\x5c\x0b\xb4\xac\x3a\x01\xef\xcf\x38\x3c\x07\xbc\xfc\xe1\x95\x01\x2f\x17\x21\xc0\x73\x28\x11\xe0\x11\xe0\x11\xe0\x5d\x20\x43\x80\x57\x55\xf1\x89\x80\x47\x7c\x07\xc4\x77\xc4\x77\xc3\xbd\xaf\xc8\x77\xaf\x4c\x2f\x37\x44\x67\x44\x67\x44\x67\xce\x6a\x89\xce\x6c\x46\x74\x46\x74\x56\x33\xa2\x33\xa2\x33\xa2\x33\x77\x92\xab\xff\xfa\x36\x45\x81\x67\xbf\xbe\xe5\x0f\xaf\xcc\x77\xb9\x08\xf1\x9d\x43\x89\xf8\x8e\xf8\x8e\xf8\xee\x02\x19\xe2\xbb\xaa\x0a\xe2\xbb\xb6\x11\xdf\x35\x8d\xf8\x6e\x78\xc4\x97\xe4\xbb\xef\xa8\x5b\xb7\xcb\x0c\xcd\x41\xdf\x5f\x1b\xef\xbe\xa3\x26\xb6\x73\x28\x11\xdb\x11\xdb\x11\xdb\x5d\x20\x43\x6c\x57\x55\x41\x6c\xd7\x36\x62\xbb\xa6\x11\xdb\x0d\x8f\xf8\xaa\x6c\xf7\xcc\xe4\xc1\xc1\x77\x66\xe9\xfa\x8c\x67\x54\x88\xf3\x1c\x4a\xc4\x79\xc4\x79\xc4\x79\x17\xc8\x10\xe7\x55\x55\x10\xe7\xb5\x8d\x38\xaf\x69\xc4\x79\xc3\x23\xfe\x37\x9c\x67\x48\x85\xe8\x0c\x88\xce\x88\xce\x9c\xd5\x12\x9d\xd9\x8c\xe8\x8c\xe8\xac\x66\x44\x67\x44\x67\x44\x67\xee\x24\x9f\xf1\x2b\x5c\xfe\xbf\xf5\x30\x4d\xcb\x4f\x99\xf7\x5f\x00\x00\x00\xff\xff\xb5\x07\x23\xe4\x6c\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18028, mode: os.FileMode(420), modTime: time.Unix(1563576918, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


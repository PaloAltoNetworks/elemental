package {{ .Set.Configuration.Name }}

import "go.aporeto.io/elemental"

var relationshipsRegistry elemental.RelationshipsRegistry

func init() {

    relationshipsRegistry = elemental.RelationshipsRegistry{}

    {{ range $entityName, $relation := .Set.Relationships }}
    {{- if shouldRegisterRelationship $.Set $entityName $.PublicMode}}
    relationshipsRegistry[{{ $entityName }}Identity] = &elemental.Relationship{
        {{- if gt (len $relation.Create) 0 }}
        Create: map[string]*elemental.RelationshipInfo {
            {{- range $parent, $action := $relation.Create }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" :{
                {{- if $action.Deprecated }}
                Deprecated: true,
                {{- end }}
                {{- if $action.ParameterDefinition }}
                {{- if gt (len $action.ParameterDefinition.Required) 0 }}
                RequiredParameters: elemental.NewParametersRequirement(
                    [][][]string{
                        {{- range $i, $l1 := $action.ParameterDefinition.Required }}
                        {{- if gt (len $l1) 0 }}
                        {
                            {{- range $i, $l2 := $l1 }}
                            {{- if gt (len $l2) 0 }}
                            {
                                {{- range $i, $l3 := $l2 }}
                                "{{ $l3 }}",
                                {{- end}}
                            },
                            {{- end}}
                            {{- end}}
                        },
                        {{- end}}
                        {{- end}}
                    },
                ),
                {{- end }}
                {{- if gt (len $action.ParameterDefinition.Entries) 0 }}
                Parameters: []elemental.ParameterDefinition{
                {{- range $i, $p := $action.ParameterDefinition.Entries }}
                     {
                        Name: "{{ $p.Name }}",
                        Type: "{{ $p.Type }}",
                        {{- if $p.DefaultValue }}
                        DefaultValue: "{{ $p.DefaultValue }}",
                        {{- end}}
                        {{- if eq $p.Type "enum" }}
                        AllowedChoices: []string{
                            {{- range $j, $v := $p.AllowedChoices }}
                            "{{ $v }}",
                            {{- end }}
                        },
                        {{- end }}
                        {{- if $p.Multiple }}
                        Multiple: true,
                        {{- end }}
                    },
                {{- end }}
                },
                {{- end }}
                {{- end }}
            },
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.Update) 0 }}
        Update: map[string]*elemental.RelationshipInfo {
            {{- range $parent, $action := $relation.Update }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : {
                {{- if $action.Deprecated }}
                Deprecated: true,
                {{- end }}
                {{- if $action.ParameterDefinition }}
                {{- if gt (len $action.ParameterDefinition.Required) 0 }}
                RequiredParameters: elemental.NewParametersRequirement(
                    [][][]string{
                        {{- range $i, $l1 := $action.ParameterDefinition.Required }}
                        {{- if gt (len $l1) 0 }}
                        {
                            {{- range $i, $l2 := $l1 }}
                            {{- if gt (len $l2) 0 }}
                            {
                                {{- range $i, $l3 := $l2 }}
                                "{{ $l3 }}",
                                {{- end}}
                            },
                            {{- end}}
                            {{- end}}
                        },
                        {{- end}}
                        {{- end}}
                    },
                ),
                {{- end }}
                {{- if gt (len $action.ParameterDefinition.Entries) 0 }}
                Parameters: []elemental.ParameterDefinition{
                {{- range $i, $p := $action.ParameterDefinition.Entries }}
                    {
                        Name: "{{ $p.Name }}",
                        Type: "{{ $p.Type }}",
                        {{- if $p.DefaultValue }}
                        DefaultValue: "{{ $p.DefaultValue }}",
                        {{- end}}
                        {{- if eq $p.Type "enum" }}
                        AllowedChoices: []string{
                            {{- range $j, $v := $p.AllowedChoices }}
                            "{{ $v }}",
                            {{- end }}
                        },
                        {{- end }}
                        {{- if $p.Multiple }}
                        Multiple: true,
                        {{- end }}
                    },
                {{- end }}
                },
                {{- end }}
                {{- end }}
            },
            {{- end }}
            {{- end }}
        },
        Patch: map[string]*elemental.RelationshipInfo {
            {{- range $parent, $action := $relation.Update }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : {
                {{- if $action.Deprecated }}
                Deprecated: true,
                {{- end }}
                {{- if $action.ParameterDefinition }}
                {{- if gt (len $action.ParameterDefinition.Required) 0 }}
                RequiredParameters: elemental.NewParametersRequirement(
                    [][][]string{
                        {{- range $i, $l1 := $action.ParameterDefinition.Required }}
                        {{- if gt (len $l1) 0 }}
                        {
                            {{- range $i, $l2 := $l1 }}
                            {{- if gt (len $l2) 0 }}
                            {
                                {{- range $i, $l3 := $l2 }}
                                "{{ $l3 }}",
                                {{- end}}
                            },
                            {{- end}}
                            {{- end}}
                        },
                        {{- end}}
                        {{- end}}
                    },
                ),
                {{- end }}
                {{- if gt (len $action.ParameterDefinition.Entries) 0 }}
                Parameters: []elemental.ParameterDefinition{
                {{- range $i, $p := $action.ParameterDefinition.Entries }}
                    {
                        Name: "{{ $p.Name }}",
                        Type: "{{ $p.Type }}",
                        {{- if $p.DefaultValue }}
                        DefaultValue: "{{ $p.DefaultValue }}",
                        {{- end}}
                        {{- if eq $p.Type "enum" }}
                        AllowedChoices: []string{
                            {{- range $j, $v := $p.AllowedChoices }}
                            "{{ $v }}",
                            {{- end }}
                        },
                        {{- end }}
                        {{- if $p.Multiple }}
                        Multiple: true,
                        {{- end }}
                    },
                {{- end }}
                },
                {{- end }}
                {{- end }}
            },
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.Delete) 0 }}
        Delete: map[string]*elemental.RelationshipInfo {
            {{- range $parent, $action := $relation.Delete }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : {
                {{- if $action.Deprecated }}
                Deprecated: true,
                {{- end }}
                {{- if $action.ParameterDefinition }}
                {{- if gt (len $action.ParameterDefinition.Required) 0 }}
                RequiredParameters: elemental.NewParametersRequirement(
                    [][][]string{
                        {{- range $i, $l1 := $action.ParameterDefinition.Required }}
                        {{- if gt (len $l1) 0 }}
                        {
                            {{- range $i, $l2 := $l1 }}
                            {{- if gt (len $l2) 0 }}
                            {
                                {{- range $i, $l3 := $l2 }}
                                "{{ $l3 }}",
                                {{- end}}
                            },
                            {{- end}}
                            {{- end}}
                        },
                        {{- end}}
                        {{- end}}
                    },
                ),
                {{- end }}
                {{- if gt (len $action.ParameterDefinition.Entries) 0 }}
                Parameters: []elemental.ParameterDefinition{
                {{- range $i, $p := $action.ParameterDefinition.Entries }}
                    {
                        Name: "{{ $p.Name }}",
                        Type: "{{ $p.Type }}",
                        {{- if $p.DefaultValue }}
                        DefaultValue: "{{ $p.DefaultValue }}",
                        {{- end}}
                        {{- if eq $p.Type "enum" }}
                        AllowedChoices: []string{
                            {{- range $j, $v := $p.AllowedChoices }}
                            "{{ $v }}",
                            {{- end }}
                        },
                        {{- end }}
                        {{- if $p.Multiple }}
                        Multiple: true,
                        {{- end }}
                    },
                {{- end }}
                },
                {{- end }}
                {{- end }}
            },
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.Get) 0 }}
        Retrieve: map[string]*elemental.RelationshipInfo {
            {{- range $parent, $action := $relation.Get }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : {
                {{- if $action.Deprecated }}
                Deprecated: true,
                {{- end }}
                {{- if $action.ParameterDefinition }}
                {{- if gt (len $action.ParameterDefinition.Required) 0 }}
                RequiredParameters: elemental.NewParametersRequirement(
                    [][][]string{
                        {{- range $i, $l1 := $action.ParameterDefinition.Required }}
                        {{- if gt (len $l1) 0 }}
                        {
                            {{- range $i, $l2 := $l1 }}
                            {{- if gt (len $l2) 0 }}
                            {
                                {{- range $i, $l3 := $l2 }}
                                "{{ $l3 }}",
                                {{- end}}
                            },
                            {{- end}}
                            {{- end}}
                        },
                        {{- end}}
                        {{- end}}
                    },
                ),
                {{- end }}
                {{- if gt (len $action.ParameterDefinition.Entries) 0 }}
                Parameters: []elemental.ParameterDefinition{
                {{- range $i, $p := $action.ParameterDefinition.Entries }}
                    {
                        Name: "{{ $p.Name }}",
                        Type: "{{ $p.Type }}",
                        {{- if $p.DefaultValue }}
                        DefaultValue: "{{ $p.DefaultValue }}",
                        {{- end}}
                        {{- if eq $p.Type "enum" }}
                        AllowedChoices: []string{
                            {{- range $j, $v := $p.AllowedChoices }}
                            "{{ $v }}",
                            {{- end }}
                        },
                        {{- end }}
                        {{- if $p.Multiple }}
                        Multiple: true,
                        {{- end }}
                    },
                {{- end }}
                },
                {{- end }}
                {{- end }}
            },
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.GetMany) 0 }}
        RetrieveMany: map[string]*elemental.RelationshipInfo {
            {{- range $parent, $action := $relation.GetMany }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : {
                {{- if $action.Deprecated }}
                Deprecated: true,
                {{- end }}
                {{- if $action.ParameterDefinition }}
                {{- if gt (len $action.ParameterDefinition.Required) 0 }}
                RequiredParameters: elemental.NewParametersRequirement(
                    [][][]string{
                        {{- range $i, $l1 := $action.ParameterDefinition.Required }}
                        {{- if gt (len $l1) 0 }}
                        {
                            {{- range $i, $l2 := $l1 }}
                            {{- if gt (len $l2) 0 }}
                            {
                                {{- range $i, $l3 := $l2 }}
                                "{{ $l3 }}",
                                {{- end}}
                            },
                            {{- end}}
                            {{- end}}
                        },
                        {{- end}}
                        {{- end}}
                    },
                ),
                {{- end }}
                {{- if gt (len $action.ParameterDefinition.Entries) 0 }}
                Parameters: []elemental.ParameterDefinition{
                {{- range $i, $p := $action.ParameterDefinition.Entries }}
                    {
                        Name: "{{ $p.Name }}",
                        Type: "{{ $p.Type }}",
                        {{- if $p.DefaultValue }}
                        DefaultValue: "{{ $p.DefaultValue }}",
                        {{- end}}
                        {{- if eq $p.Type "enum" }}
                        AllowedChoices: []string{
                            {{- range $j, $v := $p.AllowedChoices }}
                            "{{ $v }}",
                            {{- end }}
                        },
                        {{- end }}
                        {{- if $p.Multiple }}
                        Multiple: true,
                        {{- end }}
                    },
                {{- end }}
                },
                {{- end }}
                {{- end }}
            },
            {{- end }}
            {{- end }}
        },
        Info: map[string]*elemental.RelationshipInfo {
            {{- range $parent, $action := $relation.GetMany }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : {
                {{- if $action.Deprecated }}
                Deprecated: true,
                {{- end }}
                {{- if $action.ParameterDefinition }}
                {{- if gt (len $action.ParameterDefinition.Required) 0 }}
                RequiredParameters: elemental.NewParametersRequirement(
                    [][][]string{
                        {{- range $i, $l1 := $action.ParameterDefinition.Required }}
                        {{- if gt (len $l1) 0 }}
                        {
                            {{- range $i, $l2 := $l1 }}
                            {{- if gt (len $l2) 0 }}
                            {
                                {{- range $i, $l3 := $l2 }}
                                "{{ $l3 }}",
                                {{- end}}
                            },
                            {{- end}}
                            {{- end}}
                        },
                        {{- end}}
                        {{- end}}
                    },
                ),
                {{- end }}
                {{- if gt (len $action.ParameterDefinition.Entries) 0 }}
                Parameters: []elemental.ParameterDefinition{
                {{- range $i, $p := $action.ParameterDefinition.Entries }}
                    {
                        Name: "{{ $p.Name }}",
                        Type: "{{ $p.Type }}",
                        {{- if $p.DefaultValue }}
                        DefaultValue: "{{ $p.DefaultValue }}",
                        {{- end}}
                        {{- if eq $p.Type "enum" }}
                        AllowedChoices: []string{
                            {{- range $j, $v := $p.AllowedChoices }}
                            "{{ $v }}",
                            {{- end }}
                        },
                        {{- end }}
                        {{- if $p.Multiple }}
                        Multiple: true,
                        {{- end }}
                    },
                {{- end }}
                },
                {{- end }}
                {{- end }}
            },
            {{- end }}
            {{- end }}
        },
        {{- end }}
    }
    {{- end }}
    {{ end }}
}

package {{ .Set.Configuration.Name }}

import "github.com/aporeto-inc/elemental"

const nodocString = "[nodoc]" // nolint: varcheck,deadcode

var relationshipsRegistry elemental.RelationshipsRegistry

func init() {

    relationshipsRegistry = elemental.RelationshipsRegistry{}

    {{ range $entityName, $relation := .Set.Relationships }}
    {{- if shouldRegisterRelationship $.Set $entityName $.PublicMode}}
    relationshipsRegistry[{{ $entityName }}Identity] = &elemental.Relationship{
        {{- if gt (len $relation.AllowsCreate) 0 }}
        AllowsCreate: map[string]bool {
            {{- range $parent := $relation.Get "create" }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : true,
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.AllowsUpdate) 0 }}
        AllowsUpdate: map[string]bool {
            {{- range $parent := $relation.Get "update" }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : true,
            {{- end }}
            {{- end }}
        },
        AllowsPatch: map[string]bool {
            {{- range $parent := $relation.Get "update" }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : true,
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.AllowsDelete) 0 }}
        AllowsDelete: map[string]bool {
            {{- range $parent := $relation.Get "delete" }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : true,
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.AllowsGet) 0 }}
        AllowsRetrieve: map[string]bool {
            {{- range $parent := $relation.Get "get" }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : true,
            {{- end }}
            {{- end }}
        },
        {{- end }}
        {{- if gt (len $relation.AllowsGetMany) 0 }}
        AllowsRetrieveMany: map[string]bool {
            {{- range $parent := $relation.Get "getmany" }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : true,
            {{- end }}
            {{- end }}
        },
        AllowsInfo: map[string]bool {
            {{- range $parent := $relation.Get "getmany" }}
            {{- if shouldRegisterInnerRelationship $.Set $parent $.PublicMode }}
            "{{ $parent }}" : true,
            {{- end }}
            {{- end }}
        },
        {{- end }}
    }
    {{- end }}
    {{ end }}
}
